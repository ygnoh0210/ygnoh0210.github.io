{"ast":null,"code":"var _jsxFileName = \"/Users/mactamong/Desktop/ygnoh_homepage_v2/\\u1106\\u116E\\u110C\\u1166/src/shared/content/Content.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Text, Stack, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const configs = {\n  common,\n  landing,\n  featuredProjects,\n  otherProjects,\n  about\n};\nexport let MarkdownFile;\n\n(function (MarkdownFile) {\n  MarkdownFile[\"Landing\"] = \"landing\";\n  MarkdownFile[\"About\"] = \"about\";\n})(MarkdownFile || (MarkdownFile = {}));\n\nconst Mapper = {\n  [MarkdownFile.Landing]: LandingMd,\n  [MarkdownFile.About]: AboutMd\n};\nexport const useContent = fileName => {\n  _s();\n\n  const [data, setData] = useState({\n    landing: \"\",\n    about: \"\"\n  });\n  useEffect(() => {\n    fetch(Mapper[fileName]).then(res => res.text()).then(text => setData(data => ({ ...data,\n      [fileName]: text\n    })));\n  }, [fileName]);\n  return data;\n};\n\n_s(useContent, \"3hGd7ReRlBoq4DrHb+flhibwNbc=\");\n\nexport const Content = _ref => {\n  let {\n    children,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: \"0\",\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      components: {\n        p: _ref2 => {\n          let {\n            node,\n            ...props\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Text, { ...rest,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 48\n          }, this);\n        },\n        a: _ref3 => {\n          let {\n            node,\n            ...props\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(Link, {\n            href: props.href,\n            target: \"_blank\",\n            color: \"primary.700\",\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this);\n        },\n        ul: _ref4 => {\n          let {\n            node,\n            ...props\n          } = _ref4;\n          const {\n            ordered,\n            ...rest\n          } = props;\n          return /*#__PURE__*/_jsxDEV(UnorderedList, { ...rest,\n            \"data-aos\": \"fade\",\n            listStylePosition: \"inside\",\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2, 1fr)\",\n            listStyleType: \"'\\u2023 '\",\n            fontWeight: \"500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this);\n        },\n        li: _ref5 => {\n          let {\n            node,\n            ...props\n          } = _ref5;\n          const {\n            ordered,\n            ...rest\n          } = props;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-aos\": \"flip-up\",\n            \"data-aos-delay\": props.index * 100 + 400,\n            ...rest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 32\n          }, this);\n        }\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/mactamong/Desktop/ygnoh_homepage_v2/무제/src/shared/content/Content.tsx"],"names":["useEffect","useState","Text","Stack","Link","UnorderedList","ReactMarkdown","common","landing","featuredProjects","otherProjects","about","LandingMd","AboutMd","configs","MarkdownFile","Mapper","Landing","About","useContent","fileName","data","setData","fetch","then","res","text","Content","children","rest","p","node","props","a","href","ul","ordered","li","index"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"0\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.700\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'‣ '\"\n                                fontWeight=\"500\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}