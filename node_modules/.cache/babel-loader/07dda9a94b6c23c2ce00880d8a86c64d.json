{"ast":null,"code":"const TextStyles = {\n  baseStyle: {\n    fontWeight: 500\n  }\n};\nconst ContainerStyles = {\n  baseStyle: {\n    maxW: \"container.xl\"\n  }\n};\nconst ButtonStyles = {\n  baseStyle: {\n    fontWeight: \"bold\"\n  },\n  variants: {\n    solid: {\n      color: \"white\"\n    },\n    secondary: props => {\n      return {\n        color: props.colorMode === \"dark\" ? \"white\" : \"gray.900\",\n        backgroundColor: props.colorMode === \"dark\" ? \"gray.700\" : \"gray.50\",\n        _hover: {\n          backgroundColor: props.colorMode === \"dark\" ? \"gray.600\" : \"gray.100\"\n        },\n        _active: {\n          backgroundColor: props.colorMode === \"dark\" ? \"gray.600\" : \"gray.200\"\n        }\n      };\n    },\n    icon: props => {\n      return {\n        color: props.colorMode === \"dark\" ? \"white\" : \"gray.900\",\n        background: \"transparent\",\n        _hover: {\n          background: \"transparent\",\n          color: \"primary.500\"\n        },\n        _focus: {\n          background: \"transparent\"\n        },\n        _active: {\n          background: \"transparent\"\n        }\n      };\n    }\n  },\n  defaultProps: {\n    variant: \"solid\"\n  }\n};\nconst LinkStyles = {\n  baseStyle: props => {\n    let color = \"primary.600\";\n    if (props.colorMode === \"dark\") color = \"primary.100\";\n    return {\n      fontWeight: 700,\n      color\n    };\n  }\n};\nexport const components = {\n  Text: { ...TextStyles\n  },\n  Container: { ...ContainerStyles\n  },\n  Link: { ...LinkStyles\n  },\n  Button: { ...ButtonStyles\n  }\n};","map":{"version":3,"sources":["/Users/yeogyeong/Documents/GitHub/yeo-gyeong_portfolio/src/theme/component-styles/ComponentStyles.ts"],"names":["TextStyles","baseStyle","fontWeight","ContainerStyles","maxW","ButtonStyles","variants","solid","color","secondary","props","colorMode","backgroundColor","_hover","_active","icon","background","_focus","defaultProps","variant","LinkStyles","components","Text","Container","Link","Button"],"mappings":"AAEA,MAAMA,UAAgC,GAAG;AACrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL;AAD0B,CAAzC;AAMA,MAAMC,eAAqC,GAAG;AAC1CF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE;AADC;AAD+B,CAA9C;AAMA,MAAMC,YAAkC,GAAG;AACvCJ,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL,GAD4B;AAIvCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE;AADJ,KADD;AAINC,IAAAA,SAAS,EAAGC,KAAD,IAAgB;AACvB,aAAO;AACHF,QAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,KAAoB,MAApB,GAA6B,OAA7B,GAAuC,UAD3C;AAEHC,QAAAA,eAAe,EAAEF,KAAK,CAACC,SAAN,KAAoB,MAApB,GAA6B,UAA7B,GAA0C,SAFxD;AAGHE,QAAAA,MAAM,EAAE;AACJD,UAAAA,eAAe,EAAEF,KAAK,CAACC,SAAN,KAAoB,MAApB,GAA6B,UAA7B,GAA0C;AADvD,SAHL;AAMHG,QAAAA,OAAO,EAAE;AACLF,UAAAA,eAAe,EAAEF,KAAK,CAACC,SAAN,KAAoB,MAApB,GAA6B,UAA7B,GAA0C;AADtD;AANN,OAAP;AAUH,KAfK;AAgBNI,IAAAA,IAAI,EAAGL,KAAD,IAAgB;AAClB,aAAO;AACHF,QAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,KAAoB,MAApB,GAA6B,OAA7B,GAAuC,UAD3C;AAEHK,QAAAA,UAAU,EAAE,aAFT;AAGHH,QAAAA,MAAM,EAAE;AACJG,UAAAA,UAAU,EAAE,aADR;AAEJR,UAAAA,KAAK,EAAE;AAFH,SAHL;AAOHS,QAAAA,MAAM,EAAE;AACJD,UAAAA,UAAU,EAAE;AADR,SAPL;AAUHF,QAAAA,OAAO,EAAE;AACLE,UAAAA,UAAU,EAAE;AADP;AAVN,OAAP;AAcH;AA/BK,GAJ6B;AAqCvCE,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE;AADC;AArCyB,CAA3C;AA0CA,MAAMC,UAAgC,GAAG;AACrCnB,EAAAA,SAAS,EAAGS,KAAD,IAAW;AAClB,QAAIF,KAAK,GAAG,aAAZ;AAEA,QAAIE,KAAK,CAACC,SAAN,KAAoB,MAAxB,EAAgCH,KAAK,GAAG,aAAR;AAEhC,WAAO;AACHN,MAAAA,UAAU,EAAE,GADT;AAEHM,MAAAA;AAFG,KAAP;AAIH;AAVoC,CAAzC;AAaA,OAAO,MAAMa,UAAU,GAAG;AACtBC,EAAAA,IAAI,EAAE,EAAE,GAAGtB;AAAL,GADgB;AAEtBuB,EAAAA,SAAS,EAAE,EAAE,GAAGpB;AAAL,GAFW;AAGtBqB,EAAAA,IAAI,EAAE,EAAE,GAAGJ;AAAL,GAHgB;AAItBK,EAAAA,MAAM,EAAE,EAAE,GAAGpB;AAAL;AAJc,CAAnB","sourcesContent":["import { ComponentStyleConfig } from \"@chakra-ui/react\";\n\nconst TextStyles: ComponentStyleConfig = {\n    baseStyle: {\n        fontWeight: 500,\n    },\n};\n\nconst ContainerStyles: ComponentStyleConfig = {\n    baseStyle: {\n        maxW: \"container.xl\",\n    },\n};\n\nconst ButtonStyles: ComponentStyleConfig = {\n    baseStyle: {\n        fontWeight: \"bold\",\n    },\n    variants: {\n        solid: {\n            color: \"white\",\n        },\n        secondary: (props: any) => {\n            return {\n                color: props.colorMode === \"dark\" ? \"white\" : \"gray.900\",\n                backgroundColor: props.colorMode === \"dark\" ? \"gray.700\" : \"gray.50\",\n                _hover: {\n                    backgroundColor: props.colorMode === \"dark\" ? \"gray.600\" : \"gray.100\",\n                },\n                _active: {\n                    backgroundColor: props.colorMode === \"dark\" ? \"gray.600\" : \"gray.200\",\n                },\n            };\n        },\n        icon: (props: any) => {\n            return {\n                color: props.colorMode === \"dark\" ? \"white\" : \"gray.900\",\n                background: \"transparent\",\n                _hover: {\n                    background: \"transparent\",\n                    color: \"primary.500\",\n                },\n                _focus: {\n                    background: \"transparent\",\n                },\n                _active: {\n                    background: \"transparent\",\n                },\n            };\n        },\n    },\n    defaultProps: {\n        variant: \"solid\",\n    },\n};\n\nconst LinkStyles: ComponentStyleConfig = {\n    baseStyle: (props) => {\n        let color = \"primary.600\";\n\n        if (props.colorMode === \"dark\") color = \"primary.100\";\n\n        return {\n            fontWeight: 700,\n            color,\n        };\n    },\n};\n\nexport const components = {\n    Text: { ...TextStyles },\n    Container: { ...ContainerStyles },\n    Link: { ...LinkStyles },\n    Button: { ...ButtonStyles },\n};\n"]},"metadata":{},"sourceType":"module"}