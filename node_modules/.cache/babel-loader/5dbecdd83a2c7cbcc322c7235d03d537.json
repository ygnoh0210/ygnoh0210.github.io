{"ast":null,"code":"var _jsxFileName = \"/Users/mactamong/Desktop/ygnoh_homepage_v2/\\u1106\\u116E\\u110C\\u1166/src/pages/about/common/expandable/Expandable.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useMemo } from \"react\";\nimport { Box, Button, AccordionButton, AccordionPanel, Text, Flex, UnorderedList } from \"@chakra-ui/react\";\nimport { SectionTitle } from \"pages/about/common/title/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Expandable = _ref => {\n  _s();\n\n  let {\n    expanded,\n    id,\n    idx,\n    title,\n    subTitle,\n    date,\n    content,\n    onChange\n  } = _ref;\n  const isExpanded = useMemo(() => expanded.includes(idx), [expanded, idx]);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n  const showSeeMoreBtn = useMemo(() => content.length > 1 && !isExpanded || !isExpanded && isOverflowing, [isOverflowing, isExpanded, content]);\n  useEffect(() => {\n    const firstPointId = `first-point-${id}`;\n    const element = document.getElementById(firstPointId);\n\n    if (element) {\n      var _element$parentElemen;\n\n      if (element.scrollWidth >= ((_element$parentElemen = element.parentElement) === null || _element$parentElemen === void 0 ? void 0 : _element$parentElemen.scrollWidth)) {\n        setIsOverflowing(true);\n      } else {\n        setIsOverflowing(false);\n      }\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AccordionButton, {\n      as: Box,\n      p: \"0\",\n      disabled: true,\n      onClick: undefined,\n      _hover: {\n        bg: \"transparent\"\n      },\n      overflow: \"hidden\",\n      display: \"block\",\n      children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        \"data-aos\": \"fade\",\n        children: subTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"gray\",\n        \"data-aos\": \"fade-up\",\n        fontSize: \"sm\",\n        fontWeight: \"semibold\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        pt: \"2\",\n        justifyContent: \"space-between\",\n        \"data-aos\": \"fade\",\n        children: [!isExpanded ? /*#__PURE__*/_jsxDEV(Text, {\n          id: `first-point-${id}`,\n          isTruncated: !expanded.includes(idx),\n          children: content[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(UnorderedList, {\n          listStylePosition: \"outside\",\n          pl: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            as: \"li\",\n            isTruncated: !expanded.includes(idx),\n            children: content[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), showSeeMoreBtn && /*#__PURE__*/_jsxDEV(Button, {\n          flexShrink: 0,\n          id: `see-more-${id}`,\n          size: \"xs\",\n          variant: \"link\",\n          colorScheme: \"gray\",\n          opacity: \"0.8\",\n          onClick: () => {\n            if (!expanded.includes(idx)) {\n              onChange([...expanded, idx]);\n            } else {\n              const newExpanded = expanded.filter(e => e !== idx);\n              onChange(newExpanded);\n            }\n          },\n          children: \"See more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AccordionPanel, {\n      p: \"0\",\n      pl: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(UnorderedList, {\n        listStylePosition: \"outside\",\n        children: content.slice(1).map((cont, idx) => /*#__PURE__*/_jsxDEV(Text, {\n          as: \"li\",\n          children: cont\n        }, `${title}-cont-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), expanded.includes(idx) && /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"flex-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: `see-less-${id}`,\n          size: \"xs\",\n          variant: \"link\",\n          colorScheme: \"gray\",\n          opacity: \"0.7\",\n          onClick: () => {\n            const newExpanded = expanded.filter(e => e !== idx);\n            onChange(newExpanded);\n          },\n          children: \"See less\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Expandable, \"Ue0IIzLxmMy4j0d638qLCO2JtIA=\");\n\n_c = Expandable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expandable\");","map":{"version":3,"sources":["/Users/mactamong/Desktop/ygnoh_homepage_v2/무제/src/pages/about/common/expandable/Expandable.tsx"],"names":["useEffect","useState","useMemo","Box","Button","AccordionButton","AccordionPanel","Text","Flex","UnorderedList","SectionTitle","Expandable","expanded","id","idx","title","subTitle","date","content","onChange","isExpanded","includes","isOverflowing","setIsOverflowing","showSeeMoreBtn","length","firstPointId","element","document","getElementById","scrollWidth","parentElement","undefined","bg","newExpanded","filter","e","slice","map","cont"],"mappings":"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","sourcesContent":["import { FC, useEffect, useState, useMemo } from \"react\";\n\nimport { Box, Button, AccordionButton, AccordionPanel, Text, Flex, UnorderedList } from \"@chakra-ui/react\";\nimport { SectionTitle } from \"pages/about/common/title/Title\";\n\ninterface Props {\n    expanded: number[];\n    idx: number;\n    onChange: (expanded: any) => void;\n    title: string;\n    subTitle: string;\n    date: string;\n    content: string[];\n    id: string;\n}\n\nexport const Expandable: FC<Props> = ({ expanded, id, idx, title, subTitle, date, content, onChange }) => {\n    const isExpanded = useMemo(() => expanded.includes(idx), [expanded, idx]);\n    const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n    const showSeeMoreBtn = useMemo(\n        () => (content.length > 1 && !isExpanded) || (!isExpanded && isOverflowing),\n        [isOverflowing, isExpanded, content],\n    );\n\n    useEffect(() => {\n        const firstPointId = `first-point-${id}`;\n        const element = document.getElementById(firstPointId);\n\n        if (element) {\n            if (element.scrollWidth >= element.parentElement?.scrollWidth!) {\n                setIsOverflowing(true);\n            } else {\n                setIsOverflowing(false);\n            }\n        }\n    }, [id]);\n\n    return (\n        <>\n            <AccordionButton\n                as={Box}\n                p=\"0\"\n                disabled\n                onClick={undefined}\n                _hover={{ bg: \"transparent\" }}\n                overflow=\"hidden\"\n                display=\"block\"\n            >\n                <SectionTitle title={title}  />\n                <Text data-aos=\"fade\">{subTitle}</Text>\n                <Text color=\"gray\" data-aos=\"fade-up\" fontSize=\"sm\" fontWeight=\"semibold\">\n                    {date}\n                </Text>\n                <Flex pt=\"2\" justifyContent=\"space-between\" data-aos=\"fade\">\n                    {!isExpanded ? (\n                        <Text id={`first-point-${id}`} isTruncated={!expanded.includes(idx)}>\n                            {content[0]}\n                        </Text>\n                    ) : (\n                        <UnorderedList listStylePosition=\"outside\" pl=\"1\">\n                            <Text as=\"li\" isTruncated={!expanded.includes(idx)}>\n                                {content[0]}\n                            </Text>\n                        </UnorderedList>\n                    )}\n                    {showSeeMoreBtn && (\n                        <Button\n                            flexShrink={0}\n                            id={`see-more-${id}`}\n                            size=\"xs\"\n                            variant=\"link\"\n                            colorScheme=\"gray\"\n                            opacity=\"0.8\"\n                            onClick={() => {\n                                if (!expanded.includes(idx)) {\n                                    onChange([...expanded, idx]);\n                                } else {\n                                    const newExpanded = expanded.filter((e) => e !== idx);\n                                    onChange(newExpanded);\n                                }\n                            }}\n                        >\n                            See more\n                        </Button>\n                    )}\n                </Flex>\n            </AccordionButton>\n            <AccordionPanel p=\"0\" pl=\"1\">\n                <UnorderedList listStylePosition=\"outside\">\n                    {content.slice(1).map((cont, idx) => (\n                        <Text as=\"li\" key={`${title}-cont-${idx}`}>\n                            {cont}\n                        </Text>\n                    ))}\n                </UnorderedList>\n                {expanded.includes(idx) && (\n                    <Flex justifyContent=\"flex-end\">\n                        <Button\n                            id={`see-less-${id}`}\n                            size=\"xs\"\n                            variant=\"link\"\n                            colorScheme=\"gray\"\n                            opacity=\"0.7\"\n                            onClick={() => {\n                                const newExpanded = expanded.filter((e) => e !== idx);\n                                onChange(newExpanded);\n                            }}\n                        >\n                            See less\n                        </Button>\n                    </Flex>\n                )}\n            </AccordionPanel>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}