{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport const WorkPageId = \"page-work\";\nexport const AboutPageId = \"page-about\";\nexport const HomeId = \"page-home\";\nexport let Page;\n\n(function (Page) {\n  Page[\"About\"] = \"about\";\n  Page[\"Work\"] = \"work\";\n  Page[\"Home\"] = \"home\";\n})(Page || (Page = {}));\n\nconst pageIds = [HomeId, WorkPageId, AboutPageId];\nexport const useScroll = () => {\n  _s();\n\n  const [page, setPage] = useState(\"\");\n\n  const scrollHandler = () => {\n    var _document$scrollingEl;\n\n    const documentTop = (_document$scrollingEl = document.scrollingElement) === null || _document$scrollingEl === void 0 ? void 0 : _document$scrollingEl.scrollTop;\n    console.log(documentTop);\n    const pages = pageIds.map(page => document.getElementById(page));\n    let newPage = \"\";\n    pages.forEach(page => {\n      if (page) {\n        const top = page.offsetTop;\n        const height = page.clientHeight;\n\n        if (top < documentTop && top + height > documentTop) {\n          newPage = page.id;\n        }\n      }\n    });\n    setPage(newPage);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      scrollHandler();\n    }, 100);\n    document.addEventListener(\"scroll\", scrollHandler);\n    return () => {\n      document.removeEventListener(\"scroll\", () => {});\n    };\n  }, []);\n  return page;\n};\n\n_s(useScroll, \"igAukyVHVCue0WWnk2gRWgzoczI=\");","map":{"version":3,"sources":["/Users/yeogyeong/Documents/GitHub/yeo-gyeong_portfolio/src/utils/useScroll.ts"],"names":["useEffect","useState","WorkPageId","AboutPageId","HomeId","Page","pageIds","useScroll","page","setPage","scrollHandler","documentTop","document","scrollingElement","scrollTop","console","log","pages","map","getElementById","newPage","forEach","top","offsetTop","height","clientHeight","id","setTimeout","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,UAAU,GAAG,WAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,YAApB;AACP,OAAO,MAAMC,MAAM,GAAG,WAAf;AAEP,WAAYC,IAAZ;;WAAYA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;AAAAA,EAAAA,I;GAAAA,I,KAAAA,I;;AAOZ,MAAMC,OAAO,GAAG,CAACF,MAAD,EAASF,UAAT,EAAqBC,WAArB,CAAhB;AAEA,OAAO,MAAMI,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAS,EAAT,CAAhC;;AAEA,QAAMS,aAAa,GAAG,MAAM;AAAA;;AACxB,UAAMC,WAAW,4BAAGC,QAAQ,CAACC,gBAAZ,0DAAG,sBAA2BC,SAA/C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,UAAMM,KAAK,GAAGX,OAAO,CAACY,GAAR,CAAaV,IAAD,IAAUI,QAAQ,CAACO,cAAT,CAAwBX,IAAxB,CAAtB,CAAd;AACA,QAAIY,OAAO,GAAG,EAAd;AAEAH,IAAAA,KAAK,CAACI,OAAN,CAAeb,IAAD,IAAU;AACpB,UAAIA,IAAJ,EAAU;AACN,cAAMc,GAAG,GAAGd,IAAI,CAACe,SAAjB;AACA,cAAMC,MAAM,GAAGhB,IAAI,CAACiB,YAApB;;AAEA,YAAIH,GAAG,GAAGX,WAAN,IAAqBW,GAAG,GAAGE,MAAN,GAAeb,WAAxC,EAAqD;AACjDS,UAAAA,OAAO,GAAGZ,IAAI,CAACkB,EAAf;AACH;AACJ;AACJ,KATD;AAWAjB,IAAAA,OAAO,CAACW,OAAD,CAAP;AACH,GAlBD;;AAoBApB,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,UAAU,CAAC,MAAM;AACbjB,MAAAA,aAAa;AAChB,KAFS,EAEP,GAFO,CAAV;AAIAE,IAAAA,QAAQ,CAACgB,gBAAT,CAA0B,QAA1B,EAAoClB,aAApC;AAEA,WAAO,MAAM;AACTE,MAAAA,QAAQ,CAACiB,mBAAT,CAA6B,QAA7B,EAAuC,MAAM,CAAE,CAA/C;AACH,KAFD;AAGH,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAOrB,IAAP;AACH,CApCM;;GAAMD,S","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const WorkPageId = \"page-work\";\nexport const AboutPageId = \"page-about\";\nexport const HomeId = \"page-home\";\n\nexport enum Page {\n   \n    About = \"about\",\n    Work = \"work\",\n    Home = \"home\",\n}\n\nconst pageIds = [HomeId, WorkPageId, AboutPageId];\n\nexport const useScroll = () => {\n    const [page, setPage] = useState<string>(\"\");\n\n    const scrollHandler = () => {\n        const documentTop = document.scrollingElement?.scrollTop!;\n        console.log(documentTop);\n        const pages = pageIds.map((page) => document.getElementById(page));\n        let newPage = \"\";\n\n        pages.forEach((page) => {\n            if (page) {\n                const top = page.offsetTop;\n                const height = page.clientHeight;\n\n                if (top < documentTop && top + height > documentTop) {\n                    newPage = page.id;\n                }\n            }\n        });\n\n        setPage(newPage);\n    };\n\n    useEffect(() => {\n        setTimeout(() => {\n            scrollHandler();\n        }, 100);\n\n        document.addEventListener(\"scroll\", scrollHandler);\n\n        return () => {\n            document.removeEventListener(\"scroll\", () => {});\n        };\n    }, []);\n\n    return page;\n};\n"]},"metadata":{},"sourceType":"module"}