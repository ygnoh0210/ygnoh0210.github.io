{"version":3,"file":"static/js/734.ba153672.chunk.js","mappings":"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","sources":["shared/navbar/logo-type/LogoType.tsx","shared/color-mode-button/ColorModeButton.tsx","shared/navbar/drawer/Drawer.tsx","shared/navbar/Navbar.tsx","shared/socials/Socials.tsx","utils/Functions.ts"],"sourcesContent":["import { FC } from \"react\";\n\nimport { Box, Flex, Text, Heading, useBreakpointValue, Button, IconButton, WrapItem, Tooltip, Image, Badge } from \"@chakra-ui/react\";\nimport { configs, Content, MarkdownFile, useContent } from \"shared/content/Content\";\nimport { VolumeIcon } from \"utils/Icons\";\ninterface Props {\n    text: {\n        mobile: string;\n        desktop: string;\n    };\n}\n\nexport const LogoType: FC<Props> = ({ text }) => {\n    const variant = useBreakpointValue({ base: text.mobile, md: text.desktop });\n    const onPlay = () => {\n        const audio = new Audio(configs.common.audioFile);\n        audio.play();\n    };\n\n\n    return (\n        <Box transition=\"all 0.2s ease-in-out\" _hover={{ cursor: \"pointer\", color: \"primary.600\" }} onClick={onPlay}>\n                   \n           \n            {/* <Text fontSize={{ base: \"3xl\", md: \"4xl\" }} fontWeight=\"900\" lineHeight=\"1\" fontFamily=\"Signature\" mb={{ base: 0, md: 0 }}> */}\n            <Text fontSize={{ base: \"3xl\", md: \"4xl\" }} fontWeight=\"600\" lineHeight=\"1\" fontFamily=\"Tiny5\" mb={{ base: 0, md: 0 }}>\n                {variant}\n                                        <Button\n                                        size=\"m\"\n                                        aria-label=\"pronunciation button\"\n                                        as={IconButton}\n                                        variant=\"icon\"\n                                        fontSize=\"md\"\n                                        color=\"primary.500\"\n                                        icon={<VolumeIcon />}\n                                        data-aos=\"fade\"\n                                        data-aos-delay=\"400\"/> \n                \n            </Text>\n            <Badge fontFamily=\"Tiny5\">Updated in Oct.24</Badge>\n\n\n            {/* <Text color=\"primary.500\" fontSize=\"30px\" mt=\"0\" mb=\"0\" fontWeight=\"700\" opacity=\"0.5\" data-aos=\"fade\" data-aos-delay=\"200\">\n               \n                            {variant}\n    \n                                        <Button\n                                        size=\"m\"\n                                        aria-label=\"pronunciation button\"\n                                        as={IconButton}\n                                        variant=\"icon\"\n                                        fontSize=\"md\"\n                                        color=\"primary.500\"\n                                        icon={<VolumeIcon />}\n                                        data-aos=\"fade\"\n                                        data-aos-delay=\"400\"/> \n            </Text> */}\n                         \n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { HStack, IconButton, StyleProps, useColorMode, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { MoonIcon, SunIcon } from \"utils/Icons\";\n\nexport const ColorModeButton: FC<StyleProps> = (props) => {\n    const color = useColorModeValue(\"gray.800\", \"white\");\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    return (\n        <HStack {...props}>\n            <IconButton\n                aria-label=\"appearance\"\n                bg=\"transparent\"\n                color={color}\n                fontSize=\"lg\"\n                _hover={{ color: \"primary.500\" }}\n                _active={{ bg: \"transparent\" }}\n                icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n                variant=\"ghost\"\n                size=\"xs\"\n                onClick={() => {\n                    toggleColorMode();\n                    window.scrollBy(0, 1);\n                    window.scrollBy(0, -1);\n                }}\n                w=\"32px\"\n                h=\"32px\"\n            />\n        </HStack>\n    );\n};\n","import { FC, useRef } from \"react\";\n\nimport {\n    Box,\n    Button,\n    Drawer,\n    DrawerBody,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    useDisclosure,\n    IconButton,\n    StyleProps,\n    Flex,\n    VStack,\n    useColorModeValue,\n    Text\n} from \"@chakra-ui/react\";\n\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\nimport { AboutPageId, WorkPageId, HomeId } from \"utils/useScroll\";\n\nimport { MenuIcon } from \"utils/Icons\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { onResumeOpen } from \"utils/Functions\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\ninterface Props extends StyleProps {\n    onSectionClick: (section: string) => void;\n    currentPage: string;\n}\n\nexport const MenuDrawer: FC<Props> = ({ onSectionClick, currentPage, ...props }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const btnRef = useRef<any>(null);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n\n    return (\n        <Box {...props}>\n            <Button\n                as={IconButton}\n                variant=\"icon\"\n                ref={btnRef}\n                onClick={onOpen}\n                aria-label=\"open drawer\"\n                fontSize=\"lg\"\n                color=\"primary.500\"\n                icon={<MenuIcon />}\n                px=\"0\"\n            />\n            <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose} autoFocus={false}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader px=\"4\">\n                        <Flex justifyContent=\"space-between\">\n                            <ColorModeButton />\n                            <DrawerCloseButton position=\"relative\" top=\"0\" right=\"0\" />\n                        </Flex>\n                    </DrawerHeader>\n\n                    <DrawerBody>\n                        <VStack spacing=\"6\" my=\"16\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"primary.500\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === AboutPageId ? \"underline\" : \"transparent\"}\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(HomeId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Profile\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === WorkPageId ? \"primary.500\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"underline\"\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(AboutPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Publication\n                    \n                            </Button>\n                    \n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === WorkPageId ? \"primary.500\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"underline\"\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(WorkPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Project\n                            </Button>\n                            \n                            <Button\n                                variant=\"link\"\n                                 color={navItemColor}\n                                // onClick={onResumeOpen}\n                                onClick={() => open(\"https://scholar.google.co.kr/citations?user=KzrZ7zAAAAAJ&hl\")}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"400\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Google Scholar\n                            </Button>\n                            {/* <Button variant=\"link\" onClick={() => open(\"https://scholar.google.co.kr/citations?user=KzrZ7zAAAAAJ&hl\")} data-aos=\"fade\" data-aos-delay=\"400\">\n                                Google Scholar\n                            </Button> */}\n                        </VStack>\n                        <Flex justifyContent=\"center\" mt=\"16\">\n                            <Socials delay={100} resume={false} />\n                        </Flex>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box, Button, Container, Flex, HStack, useColorModeValue, Text, WrapItem, Tooltip } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { LogoType } from \"shared/navbar/logo-type/LogoType\";\nimport { bgDark, bgLight } from \"theme\";\nimport { onResumeOpen } from \"utils/Functions\";\nimport { AboutPageId, useScroll, WorkPageId, HomeId } from \"utils/useScroll\";\nimport { MenuDrawer } from \"./drawer/Drawer\";\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\nexport const Navbar: FC = () => {\n    const bg = useColorModeValue(bgLight, bgDark);\n    \n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n    const currentPage = useScroll();\n\n    const toSection = (section: string, offset=75) => {\n        const element = document.getElementById(section)\n        if (element) {\n            const elementPosition = element.getBoundingClientRect().top + window.scrollY;\n            const targetPosition = elementPosition - offset;\n            window.scrollTo({ top: targetPosition, behavior: \"smooth\" });\n        }\n    };\n\n    // const toSection = (section: string) => {\n    //     document.getElementById(section)?.scrollIntoView({ behavior: \"smooth\" });\n    // };\n\n    return (\n        <Box bg={bg} boxShadow=\"lg\" position=\"fixed\" top=\"0\" w=\"100%\" left=\"50%\" transform=\"translate(-50%)\" zIndex=\"10\" borderBottomWidth='1px'>\n            <Container py=\"4\" px=\"4\" mt=\"5px\" mb=\"5px\" data-aos=\"fade-down\" data-aos-duration=\"500\" data-aos-delay=\"100\">\n                <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                    <LogoType text={configs.common.logoType} /> \n\n                    \n                    <Flex alignItems=\"center\" display={{ base: \"none\", md: \"flex\" }}>\n                        <HStack spacing=\"8\" mr=\"6\">\n                        \n                        <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === HomeId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => toSection(HomeId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                                fontSize=\"18px\"\n                            >\n                                Profile\n                            </Button>\n\n                            \n                    \n                                    <Button\n                                        variant=\"link\"\n                                        color={navItemColor}\n                                        textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                        textDecorationThickness=\"2px\"\n                                        textDecorationColor=\"primary.500\"\n                                        onClick={() => toSection(AboutPageId)}\n                                        data-aos=\"fade\"\n                                        data-aos-delay=\"300\"\n                                        fontSize=\"18px\"\n                                    >\n                                        Publication\n                                    </Button>\n                               \n                            \n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecorationThickness=\"2px\"\n                                textDecoration={currentPage === WorkPageId ? \"underline\" : \"none\"}\n                                onClick={() => toSection(WorkPageId)}\n                                textDecorationColor=\"primary.500\"\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                                fontSize=\"18px\"\n                            >\n                                Project\n                            </Button>\n                            <Button variant=\"link\" onClick={() => open(\"https://scholar.google.co.kr/citations?user=KzrZ7zAAAAAJ&hl\")} data-aos=\"fade\" data-aos-delay=\"400\" fontSize=\"18px\">\n                                Google Scholar\n                            </Button>\n                            {/* <Button variant=\"link\" onClick={onResumeOpen} data-aos=\"fade\" data-aos-delay=\"400\">\n                                Resume\n                            </Button> */}\n                        </HStack>\n                        <ColorModeButton />\n                    </Flex>\n\n                    <MenuDrawer\n                        currentPage={currentPage}\n                        onSectionClick={toSection}\n                        display={{ base: \"block\", md: \"none\" }}\n                    />\n                </Flex>\n            </Container>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, HStack, IconButton, Tooltip } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, LinkedInIcon, MailIcon, YoutubeIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedin: <LinkedInIcon />,\n    github: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    mail: <MailIcon />,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800 }) => {\n    return (\n        <HStack spacing=\"5\">\n            {resume && (\n                <Button data-aos=\"fade\" data-aos-delay={delay} size=\"lg\" borderRadius=\"xl\" mr=\"2\" onClick={onResumeOpen}>\n                    Resume\n                </Button>\n            )}\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip key={social.type} label={social.type} textTransform=\"capitalize\">\n                            <Button\n                                p=\"0\"\n                                aria-label={`${social.type}-button`}\n                                as={IconButton}\n                                variant=\"icon\"\n                                data-aos=\"fade\"\n                                data-aos-delay={idx * 100 + delay}\n                                fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                icon={LinksToIconMapper[social.type]}\n                                onClick={() => open(social.link)}\n                            />\n                        </Tooltip>\n                    ),\n            )}\n        </HStack>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onScholarOpen = (link : string) => {\n    window.open(link, \"_blank\");\n};\n\n\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["LogoType","text","variant","useBreakpointValue","base","mobile","md","desktop","transition","_hover","cursor","color","onClick","Audio","configs","play","fontSize","fontWeight","lineHeight","fontFamily","mb","size","as","IconButton","icon","ColorModeButton","props","useColorModeValue","useColorMode","colorMode","toggleColorMode","bg","_active","window","scrollBy","w","h","MenuDrawer","onSectionClick","currentPage","useDisclosure","isOpen","onOpen","onClose","btnRef","useRef","navItemColor","ref","px","placement","autoFocus","justifyContent","position","top","right","spacing","my","textDecoration","textDecorationThickness","textDecorationColor","AboutPageId","setTimeout","HomeId","WorkPageId","link","open","mt","Socials","delay","resume","Navbar","bgLight","bgDark","useScroll","toSection","section","offset","element","document","getElementById","elementPosition","getBoundingClientRect","scrollY","targetPosition","scrollTo","behavior","boxShadow","left","transform","zIndex","borderBottomWidth","py","alignItems","display","mr","LinksToIconMapper","linkedin","github","facebook","instagram","youtube","mail","exclude","borderRadius","onResumeOpen","social","idx","includes","type","label","textTransform","p"],"sourceRoot":""}