{"version":3,"file":"static/js/295.ceb3d234.chunk.js","mappings":"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","sources":["shared/project-card-footer/ProjectCardFooter.tsx","pages/other-projects/OtherProjects.tsx","shared/content/Content.tsx","shared/tags/Tags.tsx","utils/Functions.ts"],"sourcesContent":["import { FC } from \"react\";\n\nimport { Button, Flex, IconButton, useBreakpointValue } from \"@chakra-ui/react\";\n\nimport { ArrowRightIcon, GitHubIcon, LinkIcon, FigshareIcon, YoutubeIcon, PaperIcon } from \"utils/Icons\";\nimport { open } from \"utils/Functions\";\nimport { Text} from \"@chakra-ui/react\";\n\ninterface GitHubButtonProps {\n    github?: string;\n    display?: any;\n}\n\ninterface FigshareButtonProps {\n    figshare?: string;\n    display?: any;\n}\n\ninterface PaperButtonProps {\n    paper?: string;\n    display?: any;\n}\n\ninterface ReadMoreProps {\n    readMore?: string;\n}\n\ninterface LiveDemoProps {\n    demo?: string;\n    display?: any;\n}\ninterface ArticleProps {\n    article?: string;\n    display?: any;\n}\n\ninterface Props extends GitHubButtonProps, ReadMoreProps, LiveDemoProps, ArticleProps, FigshareButtonProps, PaperButtonProps {}\n\nexport const ReadMore: FC<ReadMoreProps> = ({ readMore }) => {\n    return readMore ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-offset=\"200\"\n            variant=\"link\"\n            colorScheme=\"black\"\n            mt='3'\n            rightIcon={<ArrowRightIcon fontSize=\"16pt\" />}\n            onClick={() => open(readMore)}\n        >\n            Read More\n        </Button>\n    ) : null;\n};\n\nexport const GitHubButton: FC<GitHubButtonProps> = ({ github, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return github ? (\n        <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            mt=\"2\"\n            leftIcon={<GitHubIcon />}\n            onClick={() => open(github)}\n            px={{ base: 2, lg: 3 }}   \n            minW=\"auto\"\n            gap={{ base: 0, lg: 2 }}\n            sx={{\n                \"& .chakra-button__icon\": {\n                // leftIcon이 만들어두는 오른쪽 마진 제거\n                marginInlineEnd: { base: 0, lg: \"0.5rem\" },\n                },\n            }}     // 모바일 폭 줄이기\n            >\n            <Text as=\"span\" display={{ base: \"none\", lg: \"inline\" }}>\n            github\n            </Text>\n            </Button>\n        \n    ) : null;\n};\nexport const FigshareButton: FC<FigshareButtonProps> = ({ figshare, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return figshare ? (\n        <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            mt=\"2\"\n            leftIcon={<FigshareIcon />}\n            onClick={() => open(figshare)}\n            px={{ base: 2, lg: 3 }}   \n            minW=\"auto\"\n            gap={{ base: 0, lg: 2 }}\n            sx={{\n                \"& .chakra-button__icon\": {\n                // leftIcon이 만들어두는 오른쪽 마진 제거\n                marginInlineEnd: { base: 0, lg: \"0.5rem\" },\n                },\n            }}     // 모바일 폭 줄이기\n            >\n            <Text as=\"span\" display={{ base: \"none\", lg: \"inline\" }}>\n            figshare\n            </Text>\n            </Button>\n    ) : null;\n};\n\nexport const PaperButton: FC<PaperButtonProps> = ({ paper, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return paper ? (\n        // <Button\n        // data-aos=\"fade\"\n        // data-aos-delay=\"400\"\n        // as={as}\n        // variant=\"secondary\"\n        // py=\"2\"\n        // mt='2'\n        // fontSize=\"sm\"\n        // size=\"sm\"\n        // display={display}\n        // leftIcon={<PaperIcon />}\n        \n        // // icon={<PaperIcon />}\n        // onClick={() => open(paper)}\n        // >\n        //     paper\n        // </Button>\n        <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            mt=\"2\"\n            leftIcon={<PaperIcon />}\n            onClick={() => open(paper)}\n            px={{ base: 2, lg: 3 }}   \n            minW=\"auto\"\n            gap={{ base: 0, lg: 2 }}\n            sx={{\n                \"& .chakra-button__icon\": {\n                // leftIcon이 만들어두는 오른쪽 마진 제거\n                marginInlineEnd: { base: 0, lg: \"0.5rem\" },\n                },\n            }}     // 모바일 폭 줄이기\n            >\n            <Text as=\"span\" display={{ base: \"none\", lg: \"inline\" }}>\n            paper\n            </Text>\n            </Button>\n    ) : null;\n};\n\n\nexport const LiveDemo: FC<LiveDemoProps> = ({ demo, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return demo ? (\n        \n        <Button\n        variant=\"secondary\"\n        size=\"sm\"\n        mt=\"2\"\n        leftIcon={<YoutubeIcon />}\n        onClick={() => open(demo)}\n        px={{ base: 2, lg: 3 }}   \n        minW=\"auto\"\n        gap={{ base: 0, lg: 2 }}\n        sx={{\n            \"& .chakra-button__icon\": {\n            // leftIcon이 만들어두는 오른쪽 마진 제거\n            marginInlineEnd: { base: 0, lg: \"0.5rem\" },\n            },\n        }}     // 모바일 폭 줄이기\n        >\n        <Text as=\"span\" display={{ base: \"none\", lg: \"inline\" }}>\n        video\n        </Text>\n        </Button>\n    ) : null;\n};\n\nexport const Article: FC<ArticleProps> = ({ article, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return article ? (\n        <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            mt=\"2\"\n            leftIcon={<LinkIcon />}\n            onClick={() => open(article)}\n            px={{ base: 2, lg: 3 }}   \n            minW=\"auto\"\n            gap={{ base: 0, lg: 2 }}\n            sx={{\n                \"& .chakra-button__icon\": {\n                // leftIcon이 만들어두는 오른쪽 마진 제거\n                marginInlineEnd: { base: 0, lg: \"0.5rem\" },\n                },\n            }}     // 모바일 폭 줄이기\n            >\n            <Text as=\"span\" display={{ base: \"none\", lg: \"inline\" }}>\n            article\n            </Text>\n            </Button>\n    ) : null;\n};\n\nexport const ProjectCardFooter: FC<Props> = ({ readMore, github, figshare, demo, article, paper }) => {\n    return (\n        <Flex justifyContent={readMore ? \"space-between\" : \"flex-end\"} alignItems=\"center\" >\n            <ReadMore readMore={readMore} />\n            <Flex gap=\"2\" justifyContent=\"space-between\" alignItems=\"center\" display={paper || demo || github || figshare || article? \"flex\" : \"none\"}>\n            <PaperButton paper={paper}/>\n                <LiveDemo demo={demo} />\n                <GitHubButton github={github} />\n                <FigshareButton figshare={figshare} />\n                <Article article={article} />\n                \n            </Flex>\n        </Flex>\n    );\n};\n","import { FC, useMemo, useState } from \"react\";\nimport {\n  Box, Button, Checkbox, CheckboxGroup, Divider, Flex, Heading, IconButton,\n  SimpleGrid, Stack, Text, useColorModeValue, useDisclosure, Drawer,\n  DrawerOverlay, DrawerContent, DrawerHeader, DrawerCloseButton, DrawerBody, Image\n} from \"@chakra-ui/react\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter} from \"@chakra-ui/react\"\nimport { configs } from \"shared/content/Content\";\nimport { OtherProjectCard } from \"pages/other-projects/other-project-card/OtherProjectCard\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"utils/Icons\"; // FilterIcon 없으면 MenuIcon 사용\nimport { ProjectCardFooter } from \"shared/project-card-footer/ProjectCardFooter\";\nimport { Tags } from \"shared/tags/Tags\";\n\ntype Project = (typeof configs)[\"otherProjects\"][number];\n\nconst initialCount = 6;   // 1줄 3개 기준\nconst incrementor = 6;\n\nconst QuickProjectCard: FC<{ project: Project; onOpenDetail: (p: Project) => void }> = ({ project, onOpenDetail }) => {\n  const cardBg = useColorModeValue(\"white\", \"gray.800\");\n  const cardBorder = useColorModeValue(\"gray.300\", \"gray.50\");\n\n  return (\n    <Box\n      role=\"button\"\n      tabIndex={0}\n      onClick={() => onOpenDetail(project)}\n      onKeyDown={(e) => e.key === \"Enter\" && onOpenDetail(project)}\n      border=\"1px solid\" borderColor={cardBorder}\n      borderRadius=\"xl\" bg={cardBg} overflow=\"hidden\"\n      transition=\"transform .2s ease, box-shadow .2s ease\"\n      _hover={{ transform: \"translateY(-4px)\", boxShadow: \"xl\", cursor: \"pointer\" }}\n    >\n      {/* 썸네일 */}\n      <Box position=\"relative\" w=\"100%\" pt=\"56.25%\">\n        {project.image && (\n          <Box as=\"img\"\n               src={project.image}\n               alt={project.title}\n               style={{ position: \"absolute\", inset: 0, width: \"100%\", height: \"100%\", objectFit: \"cover\" }} />\n        )}\n      </Box>\n\n      {/* 본문 */}\n      <Box p={4}>\n        <Flex justify=\"space-between\" align=\"center\" mb={2}>\n          <Text as=\"h3\" fontSize=\"lg\" fontWeight=\"bold\" noOfLines={2}>\n            {project.title}\n          </Text>\n          \n        </Flex>\n        <Flex gap={2} align=\"center\">\n            {project.recent === \"yes\" && <Box as=\"span\" bg=\"teal.400\" color=\"white\" px=\"1.5\" py=\"0.5\" borderRadius=\"full\" fontSize=\"xs\">New</Box>}\n            {project.year && <Text fontSize=\"sm\" color=\"gray.500\" fontWeight=\"bold\">{project.year}</Text>}\n            \n          </Flex>\n          <Tags tags={project.tags} size=\"xs\" />\n          \n\n        <ProjectCardFooter\n          readMore={(project as any).readMore}\n          github={project.github}\n          demo={project.demo}\n          article={(project as any).article}\n          figshare={project.figshare}\n          paper={(project as any).paper}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nconst FilterPanel: FC<{\n  tags: string[];\n  years: string[];\n  onApply?: () => void;\n  state: {\n    selectedStatuses: string[];\n    setSelectedStatuses: (v: string[]) => void;\n    selectedYears: string[];\n    setSelectedYears: (v: string[]) => void;\n    selectedTags: string[];\n    setSelectedTags: (v: string[]) => void;\n    clearAll: () => void;\n  };\n}> = ({ tags, years, state, onApply }) => {\n  const sectionTitle = (t: string) => (\n    <Text fontSize=\"sm\" color=\"gray.500\" fontWeight=\"bold\" textTransform=\"uppercase\" letterSpacing=\"wider\">{t}</Text>\n  );\n\n  // 1) 우선순위(표시할 태그 목록)만 작성\n  const TAG_ORDER: string[] = [\n    \"Conversational Agent\", \"Eye Tracking\", \"LLM Application\", \"AR/VR\", \"Visualization\"\n    \n    // \"Reminiscence Therapy\",\n    // \"Gaze-based Authentication\", \n    // \"Bias Mitigation\", \n\n    // \"Cognitive Decline\", \"DHH\", \n    \n    //  \"Sensory Substitution\", \"News\", \n    \n    // \"Museum\", \"Education\", \"Children\", \"Hybrid App\",\"Dataset\",\n    // \"NFC\", \"Inventory Management\", \"Cross-Platform\",\n  ];\n\n  // 2) 실제 프로젝트에 존재하는 것만 필터\n  const tagSet = new Set(tags); // 기존 allTags\n  const displayTags = TAG_ORDER.filter(t => tagSet.has(t));\n\n  return (\n    <Stack spacing={6}>\n      <Flex justify=\"space-between\" align=\"center\" >\n        \n       \n        <Text fontSize=\"17\" fontWeight=\"700\">Filters</Text>\n        <Button size=\"xs\" variant=\"ghost\" onClick={state.clearAll}>Reset</Button>\n        \n      </Flex>\n\n      \n\n      <Stack spacing={3} >\n   \n        <Text fontSize=\"14\" fontWeight=\"700\" >STATUS</Text>\n        <CheckboxGroup value={state.selectedStatuses} onChange={(v) => state.setSelectedStatuses(v as string[])}>\n          <Stack spacing={2}>\n            <Checkbox value=\"ongoing\">Ongoing</Checkbox>\n            <Checkbox value=\"previous\">Previous</Checkbox>\n          </Stack>\n        </CheckboxGroup>\n      </Stack>\n\n      {/* <Divider />\n\n      <Stack spacing={3}>\n        {sectionTitle(\"Year\")}\n        <CheckboxGroup value={state.selectedYears} onChange={(v) => state.setSelectedYears(v as string[])}>\n          <Stack spacing={1} maxH=\"200px\" overflowY=\"auto\">\n            {years.map((y) => (\n              <Checkbox key={y} value={y}>{y}</Checkbox>\n            ))}\n          </Stack>\n        </CheckboxGroup>\n      </Stack> */}\n\n      <Divider />\n\n      <Stack spacing={3}>\n      <Text fontSize=\"14\" fontWeight=\"700\" >TAGS</Text>\n      <CheckboxGroup value={state.selectedTags} onChange={(v) => state.setSelectedTags(v as string[])}>\n        <Stack spacing={1} maxH=\"240px\" overflowY=\"auto\">\n          {displayTags.map((t) => (\n            <Checkbox key={t} value={t}>{t}</Checkbox>\n          ))}\n        </Stack>\n      </CheckboxGroup>\n    </Stack>\n\n      {onApply && <Button mt={2} onClick={onApply}>Apply</Button>}\n    </Stack>\n  );\n};\n\nexport const OtherProjects: FC = () => {\n  const [count, setCount] = useState<number>(initialCount);\n  const [activeProject, setActiveProject] = useState<Project | null>(null);\n  const detailModal = useDisclosure();\n  const mobileFilter = useDisclosure();\n\n  const projects = configs.otherProjects as Project[];\n\n  // 고유 태그/연도 목록 만들기\n  const { allTags, allYears } = useMemo(() => {\n    const tagSet = new Set<string>();\n    const yearSet = new Set<string>();\n    projects.forEach((p) => {\n      if (p.year) yearSet.add(String(p.year));\n      const ptags = (p as any).tags as string[] | undefined;\n      ptags?.forEach((t) => tagSet.add(t));\n    });\n    // 최신 연도 우선 정렬\n    const years = Array.from(yearSet).sort((a, b) => Number(b) - Number(a));\n    const tags = Array.from(tagSet).sort((a, b) => a.localeCompare(b));\n    return { allTags: tags, allYears: years };\n  }, [projects]);\n\n  // 필터 상태\n  const [selectedStatuses, setSelectedStatuses] = useState<string[]>([]); // \"ongoing\" | \"previous\"\n  const [selectedYears, setSelectedYears] = useState<string[]>([]);\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n\n  const clearAll = () => {\n    setSelectedStatuses([]);\n    setSelectedYears([]);\n    setSelectedTags([]);\n  };\n\n  // 필터링\n  const filtered = useMemo(() => {\n    return projects.filter((p) => {\n      // status 필터\n      if (selectedStatuses.length && !selectedStatuses.includes(p.status)) return false;\n\n      // year 필터\n      if (selectedYears.length && (!p.year || !selectedYears.includes(String(p.year)))) return false;\n\n      // tags 필터 (모두 포함 조건으로 설정)\n      if (selectedTags.length) {\n        const ptags = ((p as any).tags as string[] | undefined) ?? [];\n        const hasAll = selectedTags.every((t) => ptags.includes(t));\n        if (!hasAll) return false;\n      }\n\n      return true;\n    });\n  }, [projects, selectedStatuses, selectedYears, selectedTags]);\n\n  const openDetail = (p: Project) => {\n    setActiveProject(p);\n    detailModal.onOpen();\n  };\n\n  // 그리드 데이터 분리(요구한 ongoing/previous 구분 유지 가능)\n  const ongoing = filtered.filter((p) => p.status === \"ongoing\");\n  const previous = filtered.filter((p) => p.status === \"previous\");\n\n  return (\n    <Flex gap={6} align=\"flex-start\">\n      {/* 사이드바 (md 이상에서 고정 노출) */}\n      <Box\n        // display={{ base: \"none\", md: \"block\" }}\n        position=\"sticky\"\n        top=\"80px\"\n        minW=\"240px\"\n        maxW=\"260px\"\n        p={4}\n        border=\"1px solid\"\n        borderColor={useColorModeValue(\"primary.50\", \"primary.700\")}\n        borderRadius=\"xl\"\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        boxShadow=\"sm\"\n        h=\"fit-content\"\n      >\n        <FilterPanel\n          tags={allTags}\n          years={allYears}\n          state={{ selectedStatuses, setSelectedStatuses, selectedYears, setSelectedYears, selectedTags, setSelectedTags, clearAll }}\n        />\n      </Box>\n\n      {/* 본문 */}\n      <Box flex=\"1\">\n        {/* 모바일 필터 버튼 */}\n        {/* <Flex justify=\"flex-end\" mb={4} display={{ base: \"flex\", md: \"none\" }}>\n          <IconButton\n            aria-label=\"Open filters\"\n            icon={<FilterIcon />}\n            onClick={mobileFilter.onOpen}\n            variant=\"outline\"\n            size=\"sm\"\n          />\n        </Flex> */}\n\n        {/* Ongoing 섹션 */}\n        {ongoing.length > 0 && (\n          <Box mb={8}>\n            <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} spacing={6}>\n              {ongoing.map((project) => (\n                <QuickProjectCard key={project.id} project={project} onOpenDetail={openDetail} />\n              ))}\n            </SimpleGrid>\n          </Box>\n        )}\n\n        {/* Previous 섹션 */}\n        <Box>\n          <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} spacing={6}>\n            {previous.slice(0, count).map((project) => (\n              <QuickProjectCard key={project.id} project={project} onOpenDetail={openDetail} />\n            ))}\n          </SimpleGrid>\n\n          {previous.length > initialCount && (\n            <Flex mt={6} mb={4} justify=\"end\">\n              {count < previous.length ? (\n                <Button leftIcon={<ChevronDownIcon />} onClick={() => setCount((c) => c + incrementor)}>\n                  Show More\n                </Button>\n              ) : (\n                <Button leftIcon={<ChevronUpIcon />} onClick={() => setCount(initialCount)}>\n                  Show Less\n                </Button>\n              )}\n            </Flex>\n          )}\n        </Box>\n      </Box>\n\n      {/* 모바일 필터 Drawer */}\n      <Drawer isOpen={mobileFilter.isOpen} onClose={mobileFilter.onClose} placement=\"left\">\n        <DrawerOverlay />\n        <DrawerContent borderRightRadius=\"2xl\">\n          <DrawerHeader>\n            Filters\n            <DrawerCloseButton position=\"absolute\" right=\"3\" top=\"3\" />\n          </DrawerHeader>\n          <DrawerBody>\n            <FilterPanel\n              tags={allTags}\n              years={allYears}\n              state={{ selectedStatuses, setSelectedStatuses, selectedYears, setSelectedYears, selectedTags, setSelectedTags, clearAll }}\n              onApply={mobileFilter.onClose}\n            />\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n\n{/*       \n      <Modal isOpen={detailModal.isOpen} onClose={detailModal.onClose} size=\"3xl\" isCentered>\n        <ModalOverlay />\n        <ModalContent borderRadius=\"2xl\" overflow=\"hidden\">\n          <ModalHeader>{activeProject?.title}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={8}>\n            {activeProject && <OtherProjectCard {...activeProject} />}\n          </ModalBody>\n        </ModalContent>\n      </Modal> */}\n      <Modal\n  isOpen={detailModal.isOpen}\n  onClose={detailModal.onClose}\n  isCentered\n  // 내부 스크롤을 확실히 활성화\n  scrollBehavior=\"inside\"\n  // Chakra size 프리셋 영향 제거(직접 너비/최대너비를 주기 위해)\n  size=\"xl\"\n>\n  <ModalOverlay />\n\n  <ModalContent\n    // size가 maxW를 덮어쓰는 경우를 방지(브라우저에서 확실히 반영)\n    sx={{ maxWidth: \"none !important\" }}\n    w={{ base: \"95vw\", md: \"60vw\", lg: \"50vw\" }}\n    display=\"flex\"\n    flexDirection=\"column\"\n    maxH=\"90vh\"\n    borderRadius=\"2xl\"\n    overflow=\"hidden\"\n  >\n    <ModalHeader\n      fontSize=\"20\"\n      borderBottom=\"1px solid\"\n      borderColor=\"gray.200\"\n      _dark={{ borderColor: \"gray.600\" }}\n      px={6}\n      py={4}\n      position=\"sticky\"\n      top={0}\n      bg={useColorModeValue(\"gray.50\", \"gray.800\")}\n      zIndex={1}\n    >\n      {activeProject?.title}\n    </ModalHeader>\n\n    <ModalCloseButton />\n    \n\n    <ModalBody px={6} pt={4} pb={2} overflowY=\"auto\" flex=\"1\">\n      {activeProject && \n      <Box flex={{ base: \"1\", md: \"0.65\" }} p=\"6\" minW=\"140px\">\n       \n       <Flex gap={2} align=\"center\">\n            {activeProject.recent === \"yes\" && <Box as=\"span\" bg=\"teal.500\" color=\"white\" px=\"2\" py=\"0.5\" borderRadius=\"full\" fontSize=\"xs\">New</Box>}\n            {activeProject.year && <Text fontSize=\"sm\" color=\"gray.500\" fontWeight=\"bold\">{activeProject.year}</Text>}\n            \n          </Flex>\n          <Tags tags={activeProject.tags} size=\"xs\" />\n        \n         \n          <picture>\n            <source type=\"image/webp\" srcSet={activeProject.image} />\n            <source type=\"image/jpeg\" srcSet={activeProject.jpg} />\n            <Image\n              src={activeProject.image}\n              alt={`${activeProject.title}-cover-image`}\n              objectFit=\"cover\"\n              w=\"100%\"\n              h=\"100%\"\n              borderLeftRadius={{ md: \"lg\" }}\n              borderTopRadius={{ base: \"lg\", md: \"none\" }}\n            />\n          </picture>\n        \n      \n\n      <Text mb={1} fontSize=\"md\">\n        {activeProject.description}\n      </Text>\n      <ProjectCardFooter\n          readMore={(activeProject as any).readMore}\n          github={activeProject.github}\n          demo={activeProject.demo}\n          article={(activeProject as any).article}\n          figshare={activeProject.figshare}\n          paper={(activeProject as any).paper}\n        />\n</Box>\n      }\n    </ModalBody>\n\n    <ModalFooter px={5} py={4} bg={useColorModeValue(\"gray.50\", \"gray.800\")}>\n      <Button onClick={detailModal.onClose}>Close</Button>\n    </ModalFooter>\n  </ModalContent>\n</Modal>\n\n     \n\n      \n\n\n    </Flex>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList, useColorModeValue } from \"@chakra-ui/react\";\n\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    const inactiveColor = useColorModeValue(\"primary.500\", \"primary.200\");\n    return (\n        <Stack spacing=\"0\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color={inactiveColor} {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'‣ '\"\n                                fontWeight=\"500\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Flex, Box, Badge, ColorHues } from \"@chakra-ui/react\";\n\n\n\ninterface Props {\n    id?: string;\n    tags: Array<string>;\n    size?: string;\n    delay?: number;\n}\n\nexport const Tags: FC<Props> = ({ id, tags, size = \"md\" }) => { \n    return (\n        <Flex py=\"1\" wrap=\"wrap\" gap=\"1\">\n            {tags.map((tag, idx) => (\n                <Box data-aos=\"flip-left\" data-aos-delay={idx * 50} key={`${id}-tag-${tag}`}>\n                    <Badge\n                        transition=\"0.2s ease-in-out\"\n                        transitionProperty=\"primary.50, color\"\n                        // _hover={{ color: \"white\", bg: \"primary.200\" }}\n                        textTransform=\"none\"\n                        // variant='solid'\n                        // colorScheme=\"default\"\n                        color=\"g\"\n                        borderRadius=\"md\"\n                        px=\"8px\"\n                        py=\"1px\"\n                        fontSize={size}\n                        fontWeight=\"600\"\n                    >\n                        {tag}\n                    </Badge>\n                </Box>\n            ))}\n        </Flex>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onScholarOpen = (link : string) => {\n    window.open(link, \"_blank\");\n};\n\n\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["ReadMore","readMore","variant","colorScheme","mt","rightIcon","fontSize","onClick","open","GitHubButton","github","display","useBreakpointValue","base","IconButton","lg","Button","size","leftIcon","px","minW","gap","sx","marginInlineEnd","as","FigshareButton","figshare","PaperButton","paper","LiveDemo","demo","Article","article","ProjectCardFooter","justifyContent","alignItems","QuickProjectCard","project","onOpenDetail","cardBg","useColorModeValue","cardBorder","role","tabIndex","onKeyDown","e","key","border","borderColor","borderRadius","bg","overflow","transition","_hover","transform","boxShadow","cursor","position","w","pt","image","src","alt","title","style","inset","width","height","objectFit","p","justify","align","mb","fontWeight","noOfLines","recent","color","py","year","Tags","tags","FilterPanel","years","state","onApply","tagSet","Set","displayTags","filter","t","has","spacing","clearAll","value","selectedStatuses","onChange","v","setSelectedStatuses","selectedTags","setSelectedTags","maxH","overflowY","map","OtherProjects","count","setCount","useState","activeProject","setActiveProject","detailModal","useDisclosure","mobileFilter","projects","configs","otherProjects","allTags","allYears","useMemo","yearSet","forEach","add","String","ptags","Array","from","sort","a","b","Number","localeCompare","selectedYears","setSelectedYears","filtered","length","includes","status","every","openDetail","onOpen","ongoing","previous","top","maxW","h","flex","columns","md","id","slice","c","isOpen","onClose","placement","borderRightRadius","right","isCentered","scrollBehavior","maxWidth","flexDirection","borderBottom","_dark","zIndex","pb","type","srcSet","jpg","borderLeftRadius","borderTopRadius","description","common","landing","featuredProjects","about","MarkdownFile","Mapper","Landing","LandingMd","About","AboutMd","useContent","fileName","data","setData","useEffect","fetch","then","res","text","Content","children","rest","inactiveColor","components","node","props","href","target","ul","ordered","listStylePosition","gridTemplateColumns","listStyleType","li","index","wrap","tag","idx","transitionProperty","textTransform","link","window","onResumeOpen","resume"],"sourceRoot":""}