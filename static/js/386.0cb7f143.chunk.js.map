{"version":3,"file":"static/js/386.0cb7f143.chunk.js","mappings":"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","sources":["pages/research/Research.tsx","pages/about/About.tsx"],"sourcesContent":["import { FC, useEffect, useRef, useState } from \"react\";\nimport {\n  Box,\n  Center,\n  Image,\n  Heading,\n  Text,\n  HStack,\n  Progress,\n} from \"@chakra-ui/react\";\n\nimport { PreviousIcon, NextIcon } from \"utils/Icons\";\n\ninterface CardItem {\n  id: number;\n  title: string;\n  description: string;\n  image: string;\n}\n\nconst cardData: CardItem[] = [\n\n  {\n    id: 1,\n    title: \"BIASsist : Bias Assistive Tool\",\n    description: \"An LLM-based approach to mitigate bias experssion\",\n    image: \"/assets/publication_img/9Publi.png\",\n  },\n  {\n    id: 2,\n    title: \"Conversational Agent for Dementia\",\n    description: \"Conversational agents for personalized reminiscence.\",\n    image: \"/assets/publication_img/7Publi.png\",\n  },\n  {\n    id: 3,\n    title: \"Gaze Identification\",\n    description: \"Authentication using pre-attentive gaze patterns.\",\n    image: \"/assets/publication_img/8Publi.png\",\n  },\n  {\n    id: 4,\n    title: \"Music for the Deaf\",\n    description: \"Transforming sound into vibrotactile feedback.\",\n    image: \"/assets/publication_img/6Publi.png\",\n  },\n  {\n    id: 5,\n    title: \"Conversational Agent in Museum\",\n    description: \"Designing reenacted CAs to enhance museum experience\",\n    image: \"/assets/publication_img/2Publi.png\",\n  }\n];\n\nexport const Research: FC = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [progress, setProgress] = useState(10);\n  const [isPaused, setIsPaused] = useState(false);\n\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const duration = 5000;\n  const tick = 20;\n  const steps = duration / tick;\n\n  useEffect(() => {\n    if (!isPaused) {\n      intervalRef.current = setInterval(() => {\n        setProgress((prev) => {\n          if (prev >= 100) {\n            goToNext();\n            return 10;\n          }\n          return prev + 100 / steps;\n        });\n      }, tick);\n    }\n\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, [currentIndex, isPaused]);\n\n  const goToPrevious = () => {\n    setCurrentIndex((prev) => (prev === 0 ? cardData.length - 1 : prev - 1));\n    setProgress(10);\n  };\n\n  const goToNext = () => {\n    setCurrentIndex((prev) => (prev + 1) % cardData.length);\n    setProgress(10);\n  };\n\n  const handleSelect = (index: number) => {\n    setCurrentIndex(index);\n    setProgress(10);\n  };\n\n  return (\n    <Box\n      w=\"100%\"\n      maxW=\"800px\"\n      mx=\"auto\"\n      textAlign=\"center\"\n      // onMouseEnter={() => setIsPaused(true)}\n      // onMouseLeave={() => setIsPaused(false)}\n    >\n      {/* 카드 슬라이드 영역 */}\n      <Box position=\"relative\" height=\"420px\" overflow=\"hidden\">\n        {/* 카드들 */}\n        {cardData.map((card, index) => {\n          const isCurrent = index === currentIndex;\n          const isLeft = index === (currentIndex - 1 + cardData.length) % cardData.length;\n          const isRight = index === (currentIndex + 1) % cardData.length;\n\n          const display = isCurrent || isLeft || isRight ? \"block\" : \"none\";\n          const scale = isCurrent ? 1 : 0.9;\n          const zIndex = isCurrent ? 2 : 1;\n          const opacity = isCurrent ? 1 : 0.5;\n          const offsetX = isLeft ? \"-60%\" : isRight ? \"60%\" : \"0\";\n\n          return (\n            <Box\n              key={card.id}\n              position=\"absolute\"\n              top=\"0\"\n              left=\"50%\"\n              transform={`translateX(-50%) translateX(${offsetX}) scale(${scale})`}\n              transition=\"all 0.5s ease-in-out\"\n              zIndex={zIndex}\n              opacity={opacity}\n              display={display}\n              w=\"100%\"\n              maxW=\"600px\"\n            >\n              <Box\n                borderWidth=\"1px\"\n                borderRadius=\"lg\"\n                overflow=\"hidden\"\n                boxShadow=\"lg\"\n                bg=\"white\"\n                p={4}\n              >\n                <Center h=\"200px\">\n                  <Image\n                    src={card.image}\n                    alt={card.title}\n                    maxH=\"100%\"\n                    maxW=\"100%\"\n                    objectFit=\"contain\"\n                  />\n                </Center>\n                <Heading color=\"black\" fontSize=\"xl\" mt={4}>\n                  {card.title}\n                </Heading>\n                <Text mt={2} color=\"gray.600\">\n                  {card.description}\n                </Text>\n              </Box>\n            </Box>\n          );\n        })}\n\n        {/* 왼쪽 버튼 */}\n        <Box\n          as=\"button\"\n          onClick={goToPrevious}\n          position=\"absolute\"\n          left=\"0\"\n          top=\"40%\"\n          transform=\"translateY(-50%)\"\n          zIndex={3}\n          w=\"50px\"\n          h=\"80px\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          \n          borderRadius=\"full\"\n          _hover={{ bg: \"gray.100\" }}\n        >\n          <PreviousIcon color=\"black\" style={{ width: \"40px\", height: \"40px\" }} />\n        </Box>\n\n        {/* 오른쪽 버튼 */}\n        <Box\n          as=\"button\"\n          onClick={goToNext}\n          position=\"absolute\"\n          right=\"0\"\n          top=\"40%\"\n          transform=\"translateY(-50%)\"\n          zIndex={3}\n          w=\"50px\"\n          h=\"80px\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          borderRadius=\"full\"\n          _hover={{ bg: \"gray.100\" }}\n        >\n          <NextIcon color=\"black\" style={{ width: \"40\", height: \"40\" }} />\n        </Box>\n      </Box>\n      \n\n      {/* 하단 진행 바 인디케이터 */}\n      <HStack mt=\"-50\" spacing={2}  justify=\"center\">\n\n        {cardData.map((_, index) => (\n          <Box\n            key={index}\n            w=\"80px\"\n            cursor=\"pointer\"\n            onClick={() => handleSelect(index)}\n          >\n            <Progress\n              size=\"xs\"\n              colorScheme={index === currentIndex ? \"blue\" : \"gray\"}\n              value={\n                index === currentIndex\n                  ? progress\n                  : index < currentIndex\n                  ? 100\n                  : 0\n              }\n              borderRadius=\"full\"\n              transition=\"all 0.2s\"\n            />\n          </Box>\n        ))}\n      </HStack>\n    </Box>\n  );\n};\n","import { FC } from \"react\";\n\nimport { Stack, Box, Flex, Heading, Text, Image, Table, TableContainer, Tfoot, Th, Tr, Td, Tbody, Thead, TableCaption, Button, IconButton, Kbd, Tooltip, CircularProgress, CircularProgressLabel, Grid, GridItem, Badge,  Avatar, AvatarBadge, Code} from \"@chakra-ui/react\";\n\nimport { configs, Content, MarkdownFile, useContent } from \"shared/content/Content\";\nimport { Blog } from \"pages/about/blog/Blog\";\nimport { Education } from \"pages/about/education/Education\";\nimport { Experience } from \"pages/about/experience/Experience\";\nimport { Skills } from \"pages/about/skills/Skills\";\nimport { ResearchArea } from \"pages/about/research_area/ResearchArea\";\nimport { VolumeIcon } from \"utils/Icons\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { Research} from \"pages/research/Research\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\nexport const About: FC = () => {\n    const content = useContent(MarkdownFile.About);\n\n    const onPlay = () => {\n        const audio = new Audio(configs.common.audioFile);\n        audio.play();\n    };\n\n    return (\n\n        <Box pb=\"10\">\n            <Flex pb=\"2\" pt=\"10\" gap={{ base: 6, md: 6, lg: 12 }} direction={{ base: \"column\", md: \"row\" }}>\n                <Box mt=\"5\" flex=\"0.2\">\n                <Tooltip label=' 🐈 🎮 🍔' placement='top' color='white'>\n                    <picture>\n                    <source type=\"image/webp\" src={configs.landing.picture}></source>\n                    <source type=\"image/jpeg\" src={configs.landing.jpg}></source>\n                    <Image mb=\"5\" boxSize=\"s\" borderRadius=\"full\" src={configs.landing.jpg} alt={`face-cover-image`} />\n                    </picture>\n                </Tooltip>\n            \n                </Box>\n                <Box flex=\"0.8\">\n                    <Box pt=\"0\" data-aos=\"fade-up\" data-aos-delay=\"400\">\n                        <Text pt=\"5\" data-aos=\"fade-up\" data-aos-delay=\"500\" fontSize=\"20px\" fontWeight=\"bold\" > Hi, I'm Yeo-Gyeong Noh  <Button\n                        size=\"s\"\n                        aria-label=\"pronunciation button\"\n                        as={IconButton}\n                        variant=\"icon\"\n                        fontSize=\"md\"\n                        color=\"primary.500\"\n                        icon={<VolumeIcon />}\n                        onClick={onPlay}\n                        /> </Text> \n                        <Content fontSize=\"16px\">{content.about}</Content>\n                    </Box>\n                </Box>\n            </Flex>\n\n            \n            \n            \n            <Box >\n            <Text pt=\"10\" mb=\"7\" data-aos=\"fade-up\" data-aos-delay=\"500\" fontSize=\"20px\" fontWeight=\"bold\" >Research Thumbnails </Text> \n            <Research />\n            </Box>\n\n\n           \n        </Box>\n    );\n};\n"],"names":["cardData","id","title","description","image","Research","useState","currentIndex","setCurrentIndex","progress","setProgress","isPaused","intervalRef","useRef","useEffect","current","setInterval","prev","goToNext","clearInterval","length","w","maxW","mx","textAlign","position","height","overflow","map","card","index","isCurrent","isLeft","isRight","display","scale","zIndex","opacity","offsetX","top","left","transform","transition","borderWidth","borderRadius","boxShadow","bg","p","h","src","alt","maxH","objectFit","color","fontSize","mt","as","onClick","alignItems","justifyContent","_hover","style","width","right","spacing","justify","_","cursor","handleSelect","size","colorScheme","value","open","link","window","About","content","useContent","MarkdownFile","pb","pt","gap","base","md","lg","direction","flex","label","placement","type","configs","mb","boxSize","fontWeight","IconButton","variant","icon","Audio","play","Content","about"],"sourceRoot":""}