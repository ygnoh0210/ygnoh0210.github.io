{"version":3,"file":"static/js/587.5943757b.chunk.js","mappings":"+JASA,MASaA,EAAa,KAElB,iCAEI,mBACA,SAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,IAAIC,IAAI,IAAIC,SAAS,SAASC,WAAW,YAGzD,SAAC,IAAD,CAAMC,QAAS,CAAEC,KAAM,OAAQC,GAAI,SAAWP,GAAI,CAAEM,KAAM,EAAGC,GAAI,GAAjE,gHAOA,UAAC,IAAD,CACIC,GAAG,IACHP,GAAG,IAEHQ,MAAM,WACNC,eAAgB,CAAEJ,KAAM,SAAUC,GAAI,iBACtCI,UAAW,CAAEL,KAAM,SAAUC,GAAI,OANrC,WAQI,SAAC,IAAD,2DACA,UAAC,IAAD,CAAMN,GAAG,IAAT,mBAAqB,IAAIW,MAAOC,cAAhC,gC,4JCoBT,IAAMC,GAAOC,EAAAA,EAAAA,GAA6B,SAAcC,EAAOC,GACpE,MAAM,UAAEN,EAAF,MAAaO,EAAb,QAAoBC,EAApB,KAA6BC,EAA7B,MAAmCC,EAAnC,KAA0CC,EAA1C,OAAgDC,GACpDP,EAD+DQ,GAAjE,OACER,EADF,GAGMS,EAAS,CACbpB,QAAS,OACTqB,cAAef,EACfP,WAAYc,EACZR,eAAgBS,EAChBQ,SAAUP,EACVQ,UAAWP,EACXQ,SAAUP,EACVQ,WAAYP,GAGd,OAAO,SAACQ,EAAAA,EAAOC,KAAR,QAAYf,MAAUgB,MAAOR,GAAYD,GACjD,GAEDV,EAAKoB,YAAc,M,iLC7CZ,IAAMC,GAAOpB,EAAAA,EAAAA,GAA2B,SAAcC,EAAOC,GAClE,MAAMQ,GAASW,EAAAA,EAAAA,IAAe,OAAQpB,GACtC,GACEqB,EAAAA,EAAAA,IAAiBrB,IADb,UAAEsB,EAAF,MAAapB,EAAb,WAAoBqB,EAApB,OAAgCC,GAAtC,EAAiDhB,GAAjD,YAGMiB,GAAeC,EAAAA,EAAAA,GAAQ,CAC3BC,UAAW3B,EAAME,MACjB0B,eAAgB5B,EAAMuB,WACtBM,cAAe7B,EAAMwB,SAGvB,OACE,SAACT,EAAAA,EAAOe,GAAR,wBACE7B,MACAqB,WAAWS,EAAAA,EAAAA,IAAG,cAAe/B,EAAMsB,YAC/BG,GACAjB,GAJN,IAKES,MAAOR,IAGZ,GAEDU,EAAKD,YAAc,M,iBCxDnB,SAASQ,EAAQM,GACf,MAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAII,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACR,C","sources":["shared/footer/Footer.tsx","../node_modules/@chakra-ui/layout/src/flex.tsx","../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["import { FC } from \"react\";\n\nimport { Box, Heading, Flex, Text } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { PageHeader } from \"shared/page-header/PageHeader\";\nimport { onMailTo } from \"utils/Functions\";\nimport { Socials2 } from \"shared/socials/Socials2\";\n\nconst headerStyles = {\n    cursor: \"pointer\",\n    transition: \"color 0.2s ease-in-out\",\n    isTruncated: true,\n    fontSize: { base: \"2xl\", md: \"3xl\" },\n    _hover: { color: \"primary.500\" },\n    _active: { color: \"primary.500\" },\n};\n\nexport const Footer: FC = () => {\n    return (\n        <>\n            {/* <PageHeader label=\"SAY HI\" /> */}\n            <hr></hr>\n            <Flex mt=\"2\" pb=\"2\" gap=\"3\" overflow=\"hidden\" alignItems=\"center\">\n                \n            </Flex>\n            <Text display={{ base: \"none\", md: \"block\" }} mt={{ base: 0, md: 4 }}>\n                If you want to know more about my experiences and journey, or just talk in general, get in touch!\n            </Text>\n            {/* <Socials2/> */}\n            {/* <Box pt=\"3\">\n                <Socials delay={100} resume={false} />ðŸ˜Š\n            </Box> */}\n            <Flex\n                pt=\"1\"\n                pb=\"2\"\n                // fontSize=\"sm\"\n                color=\"gray.500\"\n                justifyContent={{ base: \"center\", md: \"space-between\" }}\n                direction={{ base: \"column\", md: \"row\" }}\n            >\n                <Text>This site is hand-crafted, with care by me.</Text>\n                <Text pb=\"5\">&copy; {new Date().getFullYear()} All rights reserved.</Text>\n            </Flex>\n        </>\n    );\n};\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["Footer","mt","pb","gap","overflow","alignItems","display","base","md","pt","color","justifyContent","direction","Date","getFullYear","Flex","forwardRef","props","ref","align","justify","wrap","basis","grow","shrink","rest","styles","flexDirection","flexWrap","flexBasis","flexGrow","flexShrink","chakra","div","__css","displayName","Text","useStyleConfig","omitThemingProps","className","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","p","cx","object","clone","Object","assign","key"],"sourceRoot":""}