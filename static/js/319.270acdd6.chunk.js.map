{"version":3,"file":"static/js/319.270acdd6.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/layout/src/grid.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/layout/src/grid-item.tsx","pages/experience/ExpThumb.tsx","../node_modules/@chakra-ui/layout/src/badge.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface GridOptions {\n  /**\n   * Shorthand prop for `gridTemplateColumns`\n   * @type SystemProps[\"gridTemplateColumns\"]\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Shorthand prop for `gridGap`\n   * @type SystemProps[\"gridGap\"]\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Shorthand prop for `gridRowGap`\n   * @type SystemProps[\"gridRowGap\"]\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Shorthand prop for `gridColumnGap`\n   * @type SystemProps[\"gridColumnGap\"]\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Shorthand prop for `gridAutoFlow`\n   * @type SystemProps[\"gridAutoFlow\"]\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Shorthand prop for `gridAutoRows`\n   * @type SystemProps[\"gridAutoRows\"]\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Shorthand prop for `gridAutoColumns`\n   * @type SystemProps[\"gridAutoColumns\"]\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Shorthand prop for `gridTemplateRows`\n   * @type SystemProps[\"gridTemplateRows\"]\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Shorthand prop for `gridTemplateAreas`\n   * @type SystemProps[\"gridTemplateAreas\"]\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Shorthand prop for `gridColumn`\n   * @type SystemProps[\"gridColumn\"]\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Shorthand prop for `gridRow`\n   * @type SystemProps[\"gridRow\"]\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n\nexport interface GridProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof GridOptions>,\n    GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">(function Grid(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGrid.displayName = \"Grid\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import {\n  ResponsiveValue,\n  SystemProps,\n  forwardRef,\n  chakra,\n} from \"@chakra-ui/system\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nimport { BoxProps } from \"./box\"\n\nexport interface GridItemProps extends BoxProps {\n  /**\n   * Shorthand prop for `gridArea`\n   * @type SystemProps[\"gridArea\"]\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * The number of columns the grid item should `span`.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colSpan?: ResponsiveValue<number | \"auto\">\n  /**\n   * The column number the grid item should start.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowSpan?: ResponsiveValue<number | \"auto\">\n}\n\nfunction spanFn(span?: ResponsiveValue<number | \"auto\">) {\n  return mapResponsive(span, (value) =>\n    value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`,\n  )\n}\n\nexport const GridItem = forwardRef<GridItemProps, \"div\">(function GridItem(\n  props,\n  ref,\n) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props\n\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd,\n  })\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGridItem.displayName = \"GridItem\"\n","import { FC } from \"react\";\nimport { Box, Grid, Text, Badge, Image, Tooltip, VStack , GridItem} from \"@chakra-ui/react\";\n\nexport const ExpThumb: FC = () => {\n  const games = [\n    \"🐉 Monster Hunter Wilds\",\n    \"⚔️ Zelda: Breath of the Wild\",\n    \"👑 Zelda: Tears of the Kingdom\",\n    \"🏝️ Zelda: Link's Awakening\",\n    \"🪄 Zelda: Echoes of Wisdom\",\n    \"🎩 Super Mario Odyssey\",\n    \"🏎️ Mario Kart World\",\n    \"🐶 Animal Crossing\",\n    \"👀 Splatoon 3\",\n    \"🧙🏻‍♂️ Hogwarts Legacy\",\n    \"🍴 It Takes Two\",\n    \"🍑 Shin-chan's Summer Vacation\",\n  ];\n\n  \n  const cardItems = [\n    {\n      date: \"apr.25'\",\n      desc: <><Badge colorScheme=\"yellow\">apr.24</Badge> attended the <Badge colorScheme=\"purple\">CHI</Badge> conf in Hawaii</>,\n      hoverText: \"Yokohama\",\n      img: \"/assets/experience_img/exp104.jpeg\",\n      alt: \"Yokohama\",\n      emoji:\"🎡\"\n    },\n    {\n      date: \"nov.24'\",\n      desc: <><Badge colorScheme=\"yellow\">apr.24</Badge> attended the <Badge colorScheme=\"purple\">CHI</Badge> conf in Hawaii</>,\n      hoverText: \"Tokyo\",\n      img: \"/assets/experience_img/exp99.jpeg\",\n      alt: \"Tokyo\",\n      emoji:\"🗼\"\n    },\n    {\n      date: \"apr.24'\",\n      desc: <><Badge colorScheme=\"yellow\">apr.24</Badge> attended the <Badge colorScheme=\"purple\">CHI</Badge> conf in Hawaii</>,\n      hoverText: \"Hawaii\",\n      img: \"/assets/experience_img/exp7.jpeg\",\n      alt: \"Hawaii\",\n      emoji:\"🌺\"\n    },\n    {\n      date: \"Oct.23'\",\n      desc: <><Badge colorScheme=\"yellow\">oct.23</Badge> visited the <Badge colorScheme=\"blue\">Toronto Univ</Badge></>,\n      hoverText: \"Toronto\",\n      img: \"/assets/experience_img/exp66.jpeg\",\n      alt: \"Toronto\",\n      emoji:\"🏙️\"\n    },\n    {\n      date: \"Oct.23'\",\n      desc: <><Badge colorScheme=\"yellow\">oct.23</Badge> visited <Badge colorScheme=\"blue\">MIT</Badge> in Boston</>,\n      hoverText: \"Boston\",\n      img: \"/assets/experience_img/exp5.jpeg\",\n      alt: \"Boston\",\n      emoji:\"🤖\"\n    },\n    {\n      date: \"Apr.23'\",\n      desc: <><Badge colorScheme=\"yellow\">apr.23</Badge> attended the <Badge colorScheme=\"purple\">CHI</Badge> conf in Hamburg</>,\n      hoverText: \"Hamburg\",\n      img: \"/assets/experience_img/exp4.jpeg\",\n      alt: \"Hamburg\",\n      emoji:\"🥨\"\n    },\n  \n    {\n      date: \"Jun.19'\",\n      desc: <><Badge colorScheme=\"yellow\">nov.19</Badge> attended the <Badge colorScheme=\"purple\">ICCV</Badge> conf in Seoul</>,\n      hoverText: \"Fukuoka\",\n      img: \"/assets/experience_img/exp91.jpeg\",\n      alt: \"Fukuoka\",\n      emoji:\"🎏\"\n    },\n    {\n      date: \"Feb.19'\",\n      desc: <><Badge colorScheme=\"yellow\">feb.19</Badge> attended <Badge colorScheme=\"purple\">DeveloperWeek</Badge> in Oakland</>,\n      hoverText: \"San Diego\",\n      img: \"/assets/experience_img/exp97.jpeg\",\n      alt: \"San Diego\",\n      emoji:\"🌊\"\n    },\n    {\n      date: \"Feb.19'\",\n      desc: <><Badge colorScheme=\"yellow\">feb.19</Badge> attended <Badge colorScheme=\"purple\">DeveloperWeek</Badge> in Oakland</>,\n      hoverText: \"Las Vegas\",\n      img: \"/assets/experience_img/exp96.jpeg\",\n      alt: \"Las Vegas\",\n      emoji:\"🏜️\"\n    },\n    \n    {\n      date: \"Jan.19'\",\n      desc: <><Badge colorScheme=\"yellow\">feb.19</Badge> attended <Badge colorScheme=\"purple\">DeveloperWeek</Badge> in Oakland</>,\n      hoverText: \"Los Angeles\",\n      img: \"/assets/experience_img/exp95.jpeg\",\n      alt: \"Los Angeles\",\n      emoji:\"☀️\"\n    },\n\n    {\n      date: \"Jan.19'\",\n      desc: <><Badge colorScheme=\"yellow\">feb.19</Badge> attended <Badge colorScheme=\"purple\">DeveloperWeek</Badge> in Oakland</>,\n      hoverText: \"Oakland\",\n      img: \"/assets/experience_img/exp2.jpeg\",\n      alt: \"Oakland\",\n      emoji:\"💻\"\n    },\n    \n    {\n      date: \"Dec.18'\",\n      desc: <><Badge colorScheme=\"yellow\">dec.18</Badge> <Badge colorScheme=\"green\">Internship</Badge> in Silicon Valley</>,\n      hoverText: \"San Francisco\",\n      img: \"/assets/experience_img/exp94.jpeg\",\n      alt: \"San Francisco \",\n      emoji:\"🌉\"\n    },\n    {\n      date: \"Aug.17'\",\n      desc: <><Badge colorScheme=\"yellow\">dec.18</Badge> <Badge colorScheme=\"green\">Internship</Badge> in Silicon Valley</>,\n      hoverText: \"Taiwan\",\n      img: \"/assets/experience_img/exp93.jpeg\",\n      alt: \"Taiwan\",\n      emoji:\"🥟\"\n    },\n    {\n      date: \"Fab.16'\",\n      desc: <><Badge colorScheme=\"yellow\">dec.18</Badge> <Badge colorScheme=\"green\">Internship</Badge> in Silicon Valley</>,\n      hoverText: \"Okinawa\",\n      img: \"/assets/experience_img/exp92.jpeg\",\n      alt: \"Okinawa\",\n      emoji:\"🏝️\"\n    },\n    {\n      date: \"Dec.15'\",\n      desc: <><Badge colorScheme=\"yellow\">dec.18</Badge> <Badge colorScheme=\"green\">Internship</Badge> in Silicon Valley</>,\n      hoverText: \"Osaka\",\n      img: \"/assets/experience_img/exp98.jpeg\",\n      alt: \"Osaka\",\n      emoji:\" 🍡\"\n    },\n  ];\n\n  return (\n  \n    <Box>\n        <Text  fontSize=\"22px\"  fontWeight=\"100\" fontFamily=\"Tiny5\" mb={{ base: 0, md: 4 }}>\n             Games I've beaten\n            </Text>\n           \n      <Box mt=\"5px\" ml=\"10px\" borderLeft=\"2px solid #CBD5E0\" pl=\"10px\">\n      <Grid\n        templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\", lg: \"repeat(3, 1fr)\" }}\n        gap={4}\n      >\n        {games.map((game, index) => (\n          <GridItem key={index}>\n            <Text fontWeight=\"500\" fontSize=\"18px\" fontFamily=\"body\">{game}</Text>\n          </GridItem>\n        ))}\n      </Grid>\n    </Box>\n      \n          \n\n\n            <Text  mt=\"50\" fontWeight=\"700\" fontSize=\"20px\" mb={{ base: 0, md: 4 }}>\n            Footprints Around the World\n            </Text>\n\n      <Grid templateColumns={{ base: \"1fr\", md: \"repeat(2, 1fr)\", lg: \"repeat(3, 1fr)\"}} gap={6}>\n        {cardItems.map((item, idx) => (\n          <Box\n            key={idx}\n            p={4}\n            borderWidth=\"1px\"\n            borderRadius=\"md\"\n            overflow=\"hidden\"\n            position=\"relative\"\n            role=\"group\"\n            height=\"250px\"\n            mb=\"5\"\n          >\n            {/* 배경 이미지 */}\n            <Image\n              position=\"absolute\"\n              top=\"0\"\n              left=\"0\"\n              w=\"100%\"\n              h=\"100%\"\n              objectFit=\"cover\"\n              src={item.img}\n              alt={item.alt}\n              zIndex=\"0\"\n              transition=\"transform 0.4s ease\"\n              _groupHover={{ transform: \"scale(1.03)\" }}\n            />\n\n            {/* 흰색 오버레이 */}\n            <Box\n              position=\"absolute\"\n              top=\"0\"\n              left=\"0\"\n              w=\"100%\"\n              h=\"100%\"\n              bg=\"white\"\n              opacity={0.65}\n              zIndex=\"1\"\n              transition=\"opacity 0.4s ease\"\n              _groupHover={{ opacity: 0 }}\n            />\n\n            {/* 호버시 */}\n\n       \n\n            {/* <Box zIndex=\"2\" position=\"relative\" opacity={0} transition=\"opacity 0.3s ease\" _groupHover={{ opacity: 1 }}>\n              <Text fontWeight=\"bold\">{item.date}</Text>\n              <Text>{item.desc}</Text>\n            </Box> */}\n            \n\n            \n\n            {/* 기본 */}\n            <Box\n              position=\"absolute\"\n              top=\"50%\"\n              left=\"50%\"\n              transform=\"translate(-50%, -50%)\"\n              zIndex=\"3\"\n              color=\"white\"\n              fontSize=\"2xl\"\n              fontWeight=\"bold\"\n              opacity={1}\n              transition=\"opacity 0.4s ease\"\n              _groupHover={{ opacity: 0 }}\n              pointerEvents=\"none\"\n              textAlign=\"center\"\n              px={2}\n              textShadow=\"0 0 10px rgba(0,0,0,0.8)\"\n            >\n              {item.hoverText}\n             \n              \n            </Box>\n            <Box\n              position=\"absolute\"\n              top=\"70%\"\n              left=\"50%\"\n              transform=\"translate(-50%, -50%)\"\n              zIndex=\"3\"\n              color=\"white\"\n              fontSize=\"2xl\"\n              fontWeight=\"bold\"\n              opacity={1}\n              transition=\"opacity 0.4s ease\"\n              _groupHover={{ opacity: 0 }}\n              pointerEvents=\"none\"\n              textAlign=\"center\"\n              px={2}\n              textShadow=\"0 0 10px rgba(0,0,0,0.8)\"\n            >\n              {item.emoji}\n             \n              \n            </Box>\n            <Box\n              position=\"absolute\"\n              top=\"80%\"\n              left=\"50%\"\n              transform=\"translate(-50%, -50%)\"\n              zIndex=\"3\"\n              color=\"white\"\n              fontSize=\"m\"\n              fontWeight=\"bold\"\n              opacity={1}\n              transition=\"opacity 0.4s ease\"\n              _groupHover={{ opacity: 0 }}\n              pointerEvents=\"none\"\n              textAlign=\"center\"\n              px={2}\n              textShadow=\"0 0 10px rgba(0,0,0,0.8)\"\n            >\n              {item.date}\n             \n              \n            </Box>\n          </Box>\n        ))}\n      </Grid>\n    </Box>\n  );\n};","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface BadgeProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Badge\"> {}\n\n/**\n * React component used to display notifications, messages, or\n * statuses in different shapes and sizes.\n *\n * @see Docs https://chakra-ui.com/badge\n */\nexport const Badge = forwardRef<BadgeProps, \"span\">(function Badge(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.span\n      ref={ref}\n      className={cx(\"chakra-badge\", props.className)}\n      {...rest}\n      __css={{\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles,\n      }}\n    />\n  )\n})\n\nBadge.displayName = \"Badge\"\n"],"names":["Text","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","className","align","decoration","casing","rest","aliasedProps","compact","textAlign","textDecoration","textTransform","chakra","p","cx","__css","displayName","Grid","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","div","object","clone","Object","assign","key","spanFn","span","mapResponsive","value","GridItem","area","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","gridArea","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","ExpThumb","cardItems","date","desc","colorScheme","hoverText","img","alt","emoji","fontSize","fontWeight","fontFamily","mb","base","md","mt","ml","borderLeft","pl","lg","map","game","index","item","idx","borderWidth","borderRadius","overflow","position","role","height","top","left","w","h","objectFit","src","zIndex","transition","_groupHover","transform","bg","opacity","color","pointerEvents","px","textShadow","Badge","whiteSpace","verticalAlign"],"sourceRoot":""}