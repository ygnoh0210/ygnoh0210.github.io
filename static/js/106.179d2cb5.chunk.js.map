{"version":3,"file":"static/js/106.179d2cb5.chunk.js","mappings":"oKAQO,MAAMA,EAAwB,IAAoB,IAAnB,GAAEC,EAAF,MAAMC,GAAY,EACtD,OACE,SAAC,KAAD,CACED,GAAIA,EACJE,SAAS,WACTC,UAAU,OACVC,GAAI,CAAEC,KAAM,EAAGC,GAAI,GACnBC,GAAI,EALN,UAOE,SAAC,IAAD,CACEC,GAAG,KACHC,SAAU,CAAEJ,KAAM,MAAOC,GAAI,OAC7BI,WAAW,YAEXC,cAAc,YACdC,cAAc,OACdV,SAAS,WACTW,QAAQ,eACRC,OAAQ,CACNC,QAAS,KACTF,QAAS,QACTG,MAAO,MACPC,OAAQ,MACRC,WAAY,mCACZC,GAAI,EACJC,aAAc,QAhBlB,SAmBGnB,M,iLCDF,IAAMoB,GAAOC,EAAAA,EAAAA,GAA2B,SAAcC,EAAOC,GAClE,MAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtC,GACEI,EAAAA,EAAAA,IAAiBJ,IADb,UAAEK,EAAF,MAAaC,EAAb,WAAoBC,EAApB,OAAgCC,GAAtC,EAAiDC,GAAjD,YAGMC,GAAeC,EAAAA,EAAAA,GAAQ,CAC3B/B,UAAWoB,EAAMM,MACjBM,eAAgBZ,EAAMO,WACtBnB,cAAeY,EAAMQ,SAGvB,OACE,SAACK,EAAAA,EAAOC,GAAR,wBACEb,MACAI,WAAWU,EAAAA,EAAAA,IAAG,cAAef,EAAMK,YAC/BK,GACAD,GAJN,IAKEO,MAAOd,IAGZ,GAEDJ,EAAKmB,YAAc,M,iBCxDnB,SAASN,EAAQO,GACf,MAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAII,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACR,C","sources":["shared/page-header/PageHeader.tsx","../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs"],"sourcesContent":["import { FC } from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ninterface Props {\n  id?: string;\n  label: string;\n}\n\nexport const PageHeader: FC<Props> = ({ id, label }) => {\n  return (\n    <Box\n      id={id}\n      position=\"relative\"\n      textAlign=\"left\"\n      py={{ base: 6, md: 8 }}\n      mb={6}\n    >\n      <Text\n        as=\"h2\"\n        fontSize={{ base: \"2xl\", md: \"3xl\" }}\n        fontWeight=\"extrabold\"\n        \n        textTransform=\"uppercase\"\n        letterSpacing=\"wide\"\n        position=\"relative\"\n        display=\"inline-block\"\n        _after={{\n          content: \"''\",\n          display: \"block\",\n          width: \"50%\",\n          height: \"3px\",\n          bgGradient: \"linear(to-r, teal.400, blue.500)\",\n          mt: 2,\n          borderRadius: \"full\",\n        }}\n      >\n        {label}\n      </Text>\n    </Box>\n  );\n};\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n"],"names":["PageHeader","id","label","position","textAlign","py","base","md","mb","as","fontSize","fontWeight","textTransform","letterSpacing","display","_after","content","width","height","bgGradient","mt","borderRadius","Text","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","className","align","decoration","casing","rest","aliasedProps","compact","textDecoration","chakra","p","cx","__css","displayName","object","clone","Object","assign","key"],"sourceRoot":""}