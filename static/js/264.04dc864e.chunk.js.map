{"version":3,"file":"static/js/264.04dc864e.chunk.js","mappings":"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","sources":["shared/content/Content.tsx","shared/project-card-footer/ProjectCardFooter.tsx","pages/other-projects/other-project-card/OtherProjectCard.tsx","pages/other-projects/OtherProjects.tsx","shared/tags/Tags.tsx","utils/Functions.ts"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"0\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.700\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'‣ '\"\n                                fontWeight=\"500\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, Flex, IconButton, useBreakpointValue } from \"@chakra-ui/react\";\n\nimport { ArrowRightIcon, GitHubIcon, LinkIcon, FigshareIcon, YoutubeIcon, PaperIcon } from \"utils/Icons\";\nimport { open } from \"utils/Functions\";\nimport { Text} from \"@chakra-ui/react\";\n\ninterface GitHubButtonProps {\n    github?: string;\n    display?: any;\n}\n\ninterface FigshareButtonProps {\n    figshare?: string;\n    display?: any;\n}\n\ninterface PaperButtonProps {\n    paper?: string;\n    display?: any;\n}\n\ninterface ReadMoreProps {\n    readMore?: string;\n}\n\ninterface LiveDemoProps {\n    demo?: string;\n    display?: any;\n}\ninterface ArticleProps {\n    article?: string;\n    display?: any;\n}\n\ninterface Props extends GitHubButtonProps, ReadMoreProps, LiveDemoProps, ArticleProps, FigshareButtonProps, PaperButtonProps {}\n\nexport const ReadMore: FC<ReadMoreProps> = ({ readMore }) => {\n    return readMore ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-offset=\"200\"\n            variant=\"link\"\n            colorScheme=\"black\"\n            mt='3'\n            rightIcon={<ArrowRightIcon fontSize=\"16pt\" />}\n            onClick={() => open(readMore)}\n        >\n            Read More\n        </Button>\n    ) : null;\n};\n\nexport const GitHubButton: FC<GitHubButtonProps> = ({ github, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return github ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-delay=\"400\"\n            as={as}\n            variant=\"secondary\"\n            py=\"2\"\n            mt='2'\n            fontSize=\"sm\"\n            size=\"sm\"\n            display={display}\n            leftIcon={<GitHubIcon />}\n            // icon={<GitHubIcon />}\n            onClick={() => open(github)}\n        >\n            github\n        </Button>\n    ) : null;\n};\nexport const FigshareButton: FC<FigshareButtonProps> = ({ figshare, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return figshare ? (\n        <Button\n        data-aos=\"fade\"\n        data-aos-delay=\"400\"\n        as={as}\n        variant=\"secondary\"\n        py=\"2\"\n        mt='2'\n        fontSize=\"sm\"\n        size=\"sm\"\n        display={display}\n        leftIcon={<FigshareIcon />}\n        // icon={<FigshareIcon />}\n        onClick={() => open(figshare)}\n        >\n            figshare\n        </Button>\n    ) : null;\n};\n\nexport const PaperButton: FC<PaperButtonProps> = ({ paper, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return paper ? (\n        <Button\n        data-aos=\"fade\"\n        data-aos-delay=\"400\"\n        as={as}\n        variant=\"secondary\"\n        py=\"2\"\n        mt='2'\n        fontSize=\"sm\"\n        size=\"sm\"\n        display={display}\n        leftIcon={<PaperIcon />}\n        // icon={<PaperIcon />}\n        onClick={() => open(paper)}\n        >\n            paper\n        </Button>\n    ) : null;\n};\n\n\nexport const LiveDemo: FC<LiveDemoProps> = ({ demo, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return demo ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-delay=\"400\"\n            as={as}\n            variant=\"secondary\"\n            py=\"2\"\n            mt='2'\n            fontSize=\"sm\"\n            size=\"sm\"\n            display={display}\n            leftIcon={<YoutubeIcon />}\n            // icon={<YoutubeIcon/>}\n            onClick={() => open(demo)}\n        >\n            video\n        </Button>\n    ) : null;\n};\n\nexport const Article: FC<ArticleProps> = ({ article, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return article ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-delay=\"200\"\n            as={as}\n            variant=\"secondary\"\n            py=\"2\"\n            mt='2'\n            fontSize=\"sm\"\n            size=\"sm\"\n            display={display}\n            leftIcon={<LinkIcon  />}\n            // icon={<LinkIcon />}\n            onClick={() => open(article)}\n        >\n            article\n        </Button>\n    ) : null;\n};\n\nexport const ProjectCardFooter: FC<Props> = ({ readMore, github, figshare, demo, article, paper }) => {\n    return (\n        <Flex justifyContent={readMore ? \"space-between\" : \"flex-end\"} alignItems=\"center\" >\n            <ReadMore readMore={readMore} />\n            <Flex gap=\"2\" justifyContent=\"space-between\" alignItems=\"center\" display={paper || demo || github || figshare || article? \"flex\" : \"none\"}>\n            <PaperButton paper={paper}/>\n                <LiveDemo demo={demo} />\n                <GitHubButton github={github} />\n                <FigshareButton figshare={figshare} />\n                <Article article={article} />\n                \n            </Flex>\n        </Flex>\n    );\n};\n","import { FC, useState } from \"react\";\nimport {\n  Box,\n  Image,\n  Flex,\n  Heading,\n  Text,\n  Button,\n  useColorModeValue,\n  Wrap,\n  WrapItem,\n  Tooltip,\n  Stack\n} from \"@chakra-ui/react\";\n// import { ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport { Tags } from \"shared/tags/Tags\";\nimport { ProjectCardFooter } from \"shared/project-card-footer/ProjectCardFooter\";\nimport { bgDarker, bgLighter } from \"theme\";\n\nexport type Paper = {\n  title: string;\n  url: string;\n  venue?: string;\n  year?: string;\n};\n\ninterface Props {\n  id: string;\n  title: string;\n  demo?: string;\n  github?: string;\n  tags: string[];\n  description: string;\n  readMore?: string;\n  image: string;\n  jpg: string;\n  year: string;\n  recent: string;\n  article?: string;\n  figshare?: string;\n  paper?: string;\n  /** 프로젝트 논문 목록 (버튼으로 렌더링) */\n  papers?: Paper[];\n}\n\nexport const OtherProjectCard: FC<Props> = ({\n  \n  id,\n  title,\n  demo,\n  github,\n  figshare,\n  paper,\n  article,\n  tags,\n  description,\n  readMore,\n  image,\n  jpg,\n  year,\n  recent,\n  papers = [],\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const showMoreCut = 3;\n  const visiblePapers = expanded ? papers : papers.slice(0, showMoreCut);\n  const bg = useColorModeValue(bgLighter, bgDarker);\n  const textColor = useColorModeValue(\"gray.600\", \"gray.300\");\n\n  return (\n    <Box\n      id={`other-project-card-${id}`}\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      boxShadow=\"md\"\n      transition=\"all 0.2s ease-in-out\"\n      bg=\"bg\"\n      textColor=\"textColor\"\n      p={0}\n    >\n      <Flex direction={{ base: \"column\", md: \"row\" }} alignItems=\"stretch\" gap={4}>\n        {/* 왼쪽: 이미지 */}\n        <Box flex={{ base: \"1\", md: \"0.35\" }} minW=\"140px\">\n          <picture>\n            <source type=\"image/webp\" srcSet={image} />\n            <source type=\"image/jpeg\" srcSet={jpg} />\n            <Image\n              src={image}\n              alt={`${title}-cover-image`}\n              objectFit=\"cover\"\n              w=\"100%\"\n              h=\"100%\"\n              borderLeftRadius={{ md: \"lg\" }}\n              borderTopRadius={{ base: \"lg\", md: \"none\" }}\n            />\n          </picture>\n        </Box>\n\n        {/* 오른쪽: 내용 */}\n        <Box flex={{ base: \"1\", md: \"0.65\" }} p=\"6\">\n          <Heading fontSize=\"lg\" mb={2}>\n            {title}\n          </Heading>\n\n          <Text mb={1} fontSize=\"md\">\n            {description}\n          </Text>\n\n          <Tags tags={tags} id={id} size=\"xs\" />\n\n          \n          {papers.length > 0 && (\n            <Box mb={3}>\n              {/* 세로 리스트로, 각 버튼이 카드 너비를 가득 쓰게 */}\n              <Stack spacing=\"2\">\n                {visiblePapers.map((p, idx) => (\n                  <Button\n                    key={`${p.url}-${idx}`}\n                    as=\"a\"\n                    href={p.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    size=\"sm\"\n                    variant=\"subtle\"            // Chakra v2는 \"ghost\"나 \"outline\"도 OK\n                    colorScheme=\"blue\"\n                    w=\"100%\"                     // 가로로 길게\n                    justifyContent=\"flex-start\"  // 텍스트를 왼쪽 정렬\n                    height=\"auto\"                // 여러 줄 허용\n                    py={1}\n                    px={1}\n                    \n                    borderRadius=\"lg\"\n                    _hover={{ transform: \"translateY(-1px)\", boxShadow: \"md\" }}\n                    _active={{ transform: \"translateY(0px)\" }}\n                  >\n                    <Flex w=\"100%\" align=\"center\" gap={2}>\n                     \n                      <Box flex=\"1\" minW={0}>\n                        <Text fontWeight=\"semibold\" noOfLines={2}>\n                          📄 {p.title}\n                        </Text>\n                        {(p.venue || p.year) && (\n                          <Text fontSize=\"xs\" color=\"gray.500\" noOfLines={1}>\n                            {[p.venue, p.year].filter(Boolean).join(\", \")}\n                          </Text>\n                        )}\n                      </Box>\n                    </Flex>\n                  </Button>\n                ))}\n                {papers.length > showMoreCut && (\n                  <Button\n                    size=\"xs\"\n                    variant=\"ghost\"\n                    onClick={() => setExpanded(v => !v)}\n                    w=\"100%\"\n                  >\n                    {expanded ? \"접기\" : `+${papers.length - showMoreCut} 더보기`}\n                  </Button>\n                )}\n              </Stack>\n            </Box>\n          )}\n\n          <ProjectCardFooter\n            readMore={readMore}\n            github={github}\n            demo={demo}\n            article={article}\n            figshare={figshare}\n            paper={paper}\n          />\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n","import { FC, useState } from \"react\";\nimport { Box, Button, Flex, Stack, Text, Badge, useColorModeValue } from \"@chakra-ui/react\";\nimport { configs } from \"shared/content/Content\";\nimport { OtherProjectCard } from \"pages/other-projects/other-project-card/OtherProjectCard\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"utils/Icons\";\nimport { Tags } from \"shared/tags/Tags\";\nimport { ProjectCardFooter } from \"shared/project-card-footer/ProjectCardFooter\";\n\nconst initialCount = 3;\nconst incrementor = 3;\n\nexport const OtherProjects: FC = () => {\n  const [count, setCount] = useState<number>(initialCount);\n  const textColor = useColorModeValue(\"gray.600\", \"gray.300\"); \n\n  const onShowMore = () => {\n    setCount(prev => prev + incrementor);\n  };\n\n  const onShowLess = () => {\n    setCount(initialCount);\n  };\n\n  const ongoingProjects = configs.otherProjects.filter(p => p.status === \"ongoing\");\n  const previousProjects = configs.otherProjects.filter(p => p.status === \"previous\");\n\n  return (\n    <Stack spacing={10}>\n      {/* Ongoing Projects */}\n      <Box>\n        {/* <Box fontWeight=\"bold\" fontSize=\"20px\" mb={4}>\n          Ongoing\n        </Box> */}\n        <Stack spacing={6}>\n          {ongoingProjects.map((project, index) => (\n            <Flex\n              key={project.id}\n              direction={{ base: \"column\", md: \"row\" }}\n              gap={4}\n              align=\"flex-start\"\n            >\n              {/* 왼쪽 박스 */}\n              <Box\n                flex={{ base: \"none\", md: \"0.85\" }}\n                w={{ base: \"100%\", md: \"auto\" }}\n                p={2}\n                textAlign=\"right\"\n              >\n                <Text fontSize=\"18\" fontWeight=\"bold\">\n                  Project #{10 - index}\n                </Text>\n\n                <Box display=\"right\" alignItems=\"baseline\" mb={1}>\n                 \n                  <Box\n                    color={textColor}\n                    fontWeight=\"bold\"\n           \n                    fontSize=\"16\"\n          \n                  >\n                     {project.recent === \"yes\" && (\n                    <Badge borderRadius=\"full\" colorScheme=\"teal\" mr=\"1\">\n                      New \n                    </Badge>\n                  )}\n                    {project.year}\n                  </Box>\n\n                  {/* ✅ ProjectCardFooter 추가 */}\n                  {/* <ProjectCardFooter\n                    readMore={(project as any).readMore}\n                    github={project.github}\n                    demo={project.demo}\n                    article={(project as any).article}\n                    figshare={project.figshare}\n                    paper={(project as any).paper}\n                  /> */}\n                </Box>\n              </Box>\n\n              {/* 오른쪽 카드 */}\n              <Box flex={{ base: \"none\", md: \"3.15\" }} w=\"100%\">\n                <OtherProjectCard {...project} />\n              </Box>\n            </Flex>\n          ))}\n        </Stack>\n      </Box>\n\n      <hr />\n\n      {/* Previous Projects */}\n      <Box>\n        {/* <Box fontWeight=\"bold\" fontSize=\"20px\" mb={4}>\n          Previous\n        </Box> */}\n        <Stack spacing={6}>\n          {previousProjects.slice(0, count).map((project, index) => (\n            <Flex\n              key={project.id}\n              direction={{ base: \"column\", md: \"row\" }}\n              gap={4}\n              align=\"flex-start\"\n            >\n              {/* 왼쪽 박스 */}\n              <Box\n                flex={{ base: \"none\", md: \"0.85\" }}\n                w={{ base: \"100%\", md: \"auto\" }}\n                p={2}\n                textAlign=\"right\"\n              >\n                <Text fontSize=\"18\" fontWeight=\"bold\">\n                  Project #{ongoingProjects.length - index + 4}\n                </Text>\n                <Text\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  fontSize=\"16\"\n                >\n                  {project.year}\n                </Text>\n\n                {/* ✅ ProjectCardFooter 추가 */}\n                {/* <ProjectCardFooter\n                  readMore={(project as any).readMore}\n                  github={project.github}\n                  demo={project.demo}\n                  article={(project as any).article}\n                  figshare={project.figshare}\n                /> */}\n              </Box>\n\n              {/* 오른쪽 카드 */}\n              <Box flex={{ base: \"none\", md: \"3.15\" }} w=\"100%\">\n                <OtherProjectCard {...project} />\n              </Box>\n            </Flex>\n          ))}\n        </Stack>\n\n        {/* 버튼 */}\n        {previousProjects.length > initialCount && (\n          <Flex mt={4} mb={4} justify=\"end\">\n            {count < previousProjects.length ? (\n              <Button leftIcon={<ChevronDownIcon />} onClick={onShowMore}>\n                Show More\n              </Button>\n            ) : (\n              <Button leftIcon={<ChevronUpIcon />} onClick={onShowLess}>\n                Show Less\n              </Button>\n            )}\n          </Flex>\n        )}\n      </Box>\n    </Stack>\n  );\n};\n","import { FC } from \"react\";\n\nimport { Flex, Box, Badge, ColorHues } from \"@chakra-ui/react\";\n\n\n\ninterface Props {\n    id?: string;\n    tags: Array<string>;\n    size?: string;\n    delay?: number;\n}\n\nexport const Tags: FC<Props> = ({ id, tags, size = \"md\" }) => { \n    return (\n        <Flex py=\"1\" wrap=\"wrap\" gap=\"1\">\n            {tags.map((tag, idx) => (\n                <Box data-aos=\"flip-left\" data-aos-delay={idx * 50} key={`${id}-tag-${tag}`}>\n                    <Badge\n                        transition=\"0.2s ease-in-out\"\n                        transitionProperty=\"primary.50, color\"\n                        // _hover={{ color: \"white\", bg: \"primary.200\" }}\n                        textTransform=\"none\"\n                        // variant='solid'\n                        // colorScheme=\"default\"\n                        color=\"g\"\n                        borderRadius=\"md\"\n                        px=\"8px\"\n                        py=\"1px\"\n                        fontSize={size}\n                        fontWeight=\"600\"\n                    >\n                        {tag}\n                    </Badge>\n                </Box>\n            ))}\n        </Flex>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onScholarOpen = (link : string) => {\n    window.open(link, \"_blank\");\n};\n\n\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["configs","common","landing","featuredProjects","otherProjects","about","MarkdownFile","Mapper","Landing","LandingMd","About","AboutMd","useContent","fileName","data","setData","useState","useEffect","fetch","then","res","text","Content","children","rest","spacing","components","p","node","props","a","href","target","color","ul","ordered","listStylePosition","display","gridTemplateColumns","listStyleType","fontWeight","li","index","ReadMore","readMore","variant","colorScheme","mt","rightIcon","fontSize","onClick","open","GitHubButton","github","as","useBreakpointValue","base","IconButton","lg","Button","py","size","leftIcon","FigshareButton","figshare","PaperButton","paper","LiveDemo","demo","Article","article","ProjectCardFooter","justifyContent","alignItems","gap","OtherProjectCard","id","title","tags","description","image","jpg","year","recent","papers","expanded","setExpanded","visiblePapers","slice","useColorModeValue","bgLighter","bgDarker","borderWidth","borderRadius","overflow","boxShadow","transition","bg","textColor","direction","md","flex","minW","type","srcSet","src","alt","objectFit","w","h","borderLeftRadius","borderTopRadius","mb","Tags","length","map","idx","url","rel","height","px","_hover","transform","_active","align","noOfLines","venue","filter","Boolean","join","v","OtherProjects","count","setCount","ongoingProjects","status","previousProjects","project","textAlign","mr","justify","prev","wrap","tag","transitionProperty","textTransform","link","window","onResumeOpen","resume"],"sourceRoot":""}