{"version":3,"file":"static/js/989.4c6e3628.chunk.js","mappings":"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","sources":["pages/featured-projects/featured-project-card/FeaturedProjectCard.tsx","shared/project-card-footer/ProjectCardFooter.tsx","pages/featured-projects/FeaturedProjects.tsx","shared/tags/Tags.tsx","utils/Functions.ts"],"sourcesContent":["import { FC } from \"react\";\n\nimport { Box, Flex, Heading, Image, Text } from \"@chakra-ui/react\";\nimport { Tags } from \"shared/tags/Tags\";\nimport { ProjectCardFooter } from \"shared/project-card-footer/ProjectCardFooter\";\n\nexport enum ImagePosition {\n    Right,\n    Left,\n}\ninterface Props {\n    id: string;\n    title: string;\n    year: string;\n    location: string;\n    demo?: string;\n    github?: string;\n    tags: string[];\n    description: string;\n    readMore?: string;\n    image: string;\n    imagePosition: ImagePosition;\n    jpg: string;\n}\n\nconst ImagePositionLayoutMapper: Record<ImagePosition, \"row\" | \"row-reverse\"> = {\n    [ImagePosition.Right]: \"row\",\n    [ImagePosition.Left]: \"row-reverse\",\n};\n\nconst ImagePositionPaddingRightMapper: Record<ImagePosition, string> = {\n    [ImagePosition.Right]: \"8\",\n    [ImagePosition.Left]: \"0\",\n};\n\nconst ImagePositionPaddingLeftMapper: Record<ImagePosition, string> = {\n    [ImagePosition.Right]: \"0\",\n    [ImagePosition.Left]: \"8\",\n};\n\nexport const FeaturedProjectCard: FC<Props> = ({\n    id,\n    title,\n    demo,\n    github,\n    tags,\n    description,\n    readMore,\n    image,\n    imagePosition,\n    location,\n    year,\n    jpg,\n}) => {\n    return (\n        <Flex\n            justifyContent=\"space-between\"\n            id=\"featured-project-card\"\n            py={{ base: \"12\", md: \"12\", lg: '28' }}\n            direction={{ base: \"column-reverse\", lg: ImagePositionLayoutMapper[imagePosition] }}\n        >\n            <Flex\n                h=\"auto\"\n                pr={{ base: \"0\", lg: ImagePositionPaddingRightMapper[imagePosition] }}\n                pl={{ base: \"0\", lg: ImagePositionPaddingLeftMapper[imagePosition] }}\n                direction=\"column\"\n                justifyContent=\"space-between\"\n                flex={{ base: 1, lg: 0.6 }}\n            >\n                <Box>\n                    <Heading data-aos=\"fade-down\" data-aos-offset=\"200\" fontSize=\"4xl\" lineHeight=\"1\">\n                        {title}\n                    </Heading>\n                    <Text\n                        pt=\"2\"\n                        fontSize=\"sm\"\n                        fontWeight=\"600\"\n                        opacity=\"0.6\"\n                        data-aos=\"fade\"\n                        data-aos-delay=\"100\"\n                        data-aos-offset=\"200\"\n                    >\n                        {year} â€¢ {location}\n                    </Text>\n\n                    <Box\n                        py=\"4\"\n                        display={{ base: \"inherit\", lg: \"none\" }}\n                        data-aos=\"fade-up\"\n                        data-aos-offset=\"200\"\n                        data-aos-delay=\"200\"\n                    >\n                        <Image borderRadius=\"xl\" src={image} />\n                    </Box>\n\n                    <Text\n                        fontSize=\"lg\"\n                        pt={{ base: 0, lg: \"2\" }}\n                        data-aos=\"fade-up\"\n                        data-aos-offset=\"200\"\n                        data-aos-delay=\"200\"\n                        borderRadius=\"xl\"\n                        pb=\"2\"\n                    >\n                        {description}\n                    </Text>\n\n                    <Tags tags={tags} id={id} />\n                </Box>\n\n                <ProjectCardFooter readMore={readMore} github={github} demo={demo} />\n            </Flex>\n\n            <Box\n                data-aos=\"fade-up\"\n                data-aos-offset=\"200\"\n                display={{ base: \"none\", lg: \"block\" }}\n                flex={{ base: 1, lg: 0.6 }}\n                pl={{ base: \"0\", lg: ImagePositionPaddingRightMapper[imagePosition] }}\n                pr={{ base: \"0\", lg: ImagePositionPaddingLeftMapper[imagePosition] }}\n            >\n                <picture>\n                    <source type=\"image/webp\" srcSet={image}></source>\n                    <source type=\"image/jpeg\" srcSet={jpg}></source>\n                    <Image\n                        borderRadius=\"xl\"\n                        src={jpg}\n                        alt={`${title}-cover-image`}\n                        transition=\"all 0.4s ease-in-out\"\n                        _hover={{ boxShadow: \"0px 20px 60px rgb(77 77 77 / 10%)\", transform: \"scale(1.01)\" }}\n                    />\n                </picture>\n            </Box>\n        </Flex>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, Flex, IconButton, useBreakpointValue } from \"@chakra-ui/react\";\n\nimport { ArrowRightIcon, GitHubIcon, LinkIcon } from \"utils/Icons\";\nimport { open } from \"utils/Functions\";\n\ninterface GitHubButtonProps {\n    github?: string;\n    display?: any;\n}\n\ninterface ReadMoreProps {\n    readMore?: string;\n}\n\ninterface LiveDemoProps {\n    demo?: string;\n    display?: any;\n}\n\ninterface Props extends GitHubButtonProps, ReadMoreProps, LiveDemoProps {}\n\nexport const ReadMore: FC<ReadMoreProps> = ({ readMore }) => {\n    return readMore ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-offset=\"200\"\n            variant=\"link\"\n            colorScheme=\"black\"\n            rightIcon={<ArrowRightIcon fontSize=\"16pt\" />}\n            onClick={() => open(readMore)}\n        >\n            Read More\n        </Button>\n    ) : null;\n};\n\nexport const GitHubButton: FC<GitHubButtonProps> = ({ github, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return github ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-delay=\"400\"\n            as={as}\n            variant=\"secondary\"\n            py=\"5\"\n            display={display}\n            leftIcon={<GitHubIcon />}\n            icon={<GitHubIcon />}\n            onClick={() => open(github)}\n        >\n            GitHub\n        </Button>\n    ) : null;\n};\n\nexport const LiveDemo: FC<LiveDemoProps> = ({ demo, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return demo ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-delay=\"200\"\n            as={as}\n            display={display}\n            leftIcon={<LinkIcon fontSize=\"14pt\" />}\n            icon={<LinkIcon fontSize=\"14pt\" />}\n            onClick={() => open(demo)}\n        >\n            Live Demo\n        </Button>\n    ) : null;\n};\n\nexport const ProjectCardFooter: FC<Props> = ({ readMore, github, demo }) => {\n    return (\n        <Flex justifyContent={readMore ? \"space-between\" : \"flex-end\"} alignItems=\"center\" pt=\"8\">\n            <ReadMore readMore={readMore} />\n            <Flex gap=\"4\" justifyContent=\"space-between\" alignItems=\"center\" display={demo || github ? \"flex\" : \"none\"}>\n                <LiveDemo demo={demo} />\n                <GitHubButton github={github} />\n            </Flex>\n        </Flex>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box } from \"@chakra-ui/react\";\n\nimport { FeaturedProjectCard, ImagePosition } from \"pages/featured-projects/featured-project-card/FeaturedProjectCard\";\nimport { configs } from \"shared/content/Content\";\n\nexport const FeaturedProjects: FC = () => {\n    return (\n        <Box\n            id=\"featured-projects\"\n            display={{ base: \"block\", md: \"flex\", lg: \"block\" }}\n            flexDir=\"column\"\n            gap={{ base: \"2\", md: \"1\" }}\n        >\n            {configs.featuredProjects.map((project, idx) => (\n                <FeaturedProjectCard\n                    imagePosition={idx % 2 === 0 ? ImagePosition.Right : ImagePosition.Left}\n                    key={project.id}\n                    {...project}\n                />\n            ))}\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Flex, Box, Badge, ColorHues } from \"@chakra-ui/react\";\n\n\n\ninterface Props {\n    id: string;\n    tags: Array<string>;\n    size?: string;\n    delay?: number;\n}\n\nexport const Tags: FC<Props> = ({ id, tags, size = \"sm\" }) => { \n    return (\n        <Flex py=\"2\" wrap=\"wrap\" gap=\"4\">\n            {tags.map((tag, idx) => (\n                <Box data-aos=\"flip-left\" data-aos-delay={idx * 50} key={`${id}-tag-${tag}`}>\n                    <Badge\n                        transition=\"0.2s ease-in-out\"\n                        transitionProperty=\"primary.50, color\"\n                        // _hover={{ color: \"white\", bg: \"primary.200\" }}\n                        textTransform=\"none\"\n                        // variant='solid'\n                        // colorScheme=\"default\"\n                        color=\"g\"\n                        borderRadius=\"md\"\n                        px=\"8px\"\n                        py=\"1px\"\n                        fontSize={size}\n                        fontWeight=\"600\"\n                    >\n                        {tag}\n                    </Badge>\n                </Box>\n            ))}\n        </Flex>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onScholarOpen = (link : string) => {\n    window.open(link, \"_blank\");\n};\n\n\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["ImagePosition","ReadMore","readMore","variant","colorScheme","rightIcon","fontSize","onClick","open","GitHubButton","github","display","as","useBreakpointValue","base","IconButton","lg","Button","py","leftIcon","icon","LiveDemo","demo","ProjectCardFooter","justifyContent","alignItems","pt","gap","ImagePositionLayoutMapper","Right","Left","ImagePositionPaddingRightMapper","ImagePositionPaddingLeftMapper","FeaturedProjectCard","id","title","tags","description","image","imagePosition","location","year","jpg","md","direction","h","pr","pl","flex","lineHeight","fontWeight","opacity","borderRadius","src","pb","Tags","type","srcSet","alt","transition","_hover","boxShadow","transform","FeaturedProjects","flexDir","configs","project","idx","size","wrap","map","tag","transitionProperty","textTransform","color","px","link","window","onResumeOpen"],"sourceRoot":""}