{"version":3,"file":"static/js/983.96612099.chunk.js","mappings":"4RAKO,IAAMA,GAAiBC,EAAAA,EAAAA,GAC5B,CAACC,EAA+BC,KANlC,MAOI,MAAM,SAAEC,EAAF,UAAYC,EAAZ,UAAuBC,GAAuBJ,EAATK,GAA3C,OAAoDL,EAApD,GACA,OACE,SAACM,EAAAA,EAAOC,KAAR,gBACEN,MACAG,WAAWI,EAAAA,EAAAA,IAAG,0BAA2BJ,IACrCC,GAHN,IAIEI,MAAO,CACLC,QAAS,QACTC,WAAY,SACZC,wBAAyB,QACzBT,UAAW,OAAAU,EAAAA,MAAAA,EAAAA,EAAYV,GAAZU,EAAyB,OACpCC,UAAW,SACXC,SAAU,a,6DCPpB,IAAOC,EAAqBC,IAAkBC,EAAAA,EAAAA,GAE5C,CACAC,KAAAA,qBACAC,aAAAA,sGAoBWC,GAAQtB,EAAAA,EAAAA,GAAgC,CAACC,EAAOC,KAC3D,MAAMqB,GAASC,EAAAA,EAAAA,IAAoB,QAASvB,GAC5C,GAA6CwB,EAAAA,EAAAA,IAAiBxB,IAAxD,UAAEI,EAAF,OAAaqB,GAAnB,EAA8BC,GAA9B,YAEA,OACE,SAACV,EAAA,CAAoBW,MAAOL,EAC1BM,UAAAA,EAAAA,EAAAA,KAACtB,EAAAA,EAAOuB,OAAR,QACE5B,MACAQ,OAAAA,EAAAA,EAAAA,GAAAA,CAASqB,YAAaL,GAAWH,EAAOO,OACxCzB,WAAWI,EAAAA,EAAAA,IAAG,eAAgBJ,IAC1BsB,QAMZL,EAAMU,YAAc,QC/Cb,IAAMC,GAAQjC,EAAAA,EAAAA,GAAoC,CAACC,EAAOC,KAC/D,MAAMqB,EAASL,IACf,OAAO,SAACX,EAAAA,EAAO2B,OAAR,kBAAkBjC,GAAlB,IAAyBC,MAAUQ,MAAOa,EAAOW,WCH7CC,GAAKnC,EAAAA,EAAAA,GAAgC,CAACC,EAAOC,KACxD,MAAMqB,EAASL,IAEf,OAAO,SAACX,EAAAA,EAAO6B,IAAR,kBAAenC,GAAf,IAAsBC,MAAUQ,MAAOa,EAAOa,Q,sBCGhD,IAAMC,GAAKrC,EAAAA,EAAAA,GAChB,CAAC,EAAwBE,KAAQ,IAAhC,UAAEoC,GAA8B,EAAhBhC,GAAgB,YAC/B,MAAMiB,EAASL,IACf,OACE,SAACX,EAAAA,EAAOgC,IAAR,kBACMjC,GADN,IAEEJ,MACAQ,MAAOa,EAAOgB,GACd,kBAAiBD,OCbZE,GAAQxC,EAAAA,EAAAA,GAAoC,CAACC,EAAOC,KAC/D,MAAMqB,EAASL,IACf,OAAO,SAACX,EAAAA,EAAOkC,OAAR,kBAAkBxC,GAAlB,IAAyBC,MAAUQ,MAAOa,EAAOkB,W,sBCGnD,IAAMC,GAAK1C,EAAAA,EAAAA,GAChB,CAAC,EAAwBE,KAAQ,IAAhC,UAAEoC,GAA8B,EAAhBhC,GAAgB,YAC/B,MAAMiB,EAASL,IAEf,OACE,SAACX,EAAAA,EAAOoC,IAAR,kBACMrC,GADN,IAEEJ,MACAQ,MAAOa,EAAOoB,GACd,kBAAiBL,O,qBChBXM,EAAsBC,IAAmB1B,EAAAA,EAAAA,GAErD,CACAC,KAAAA,sBACA0B,SAAAA,kBACAC,aAAc,c,+BCJT,SAASC,EAAS5B,GAJzB,MAKE,MAAM6B,EAAQ7B,EAAK8B,MAAM,KACnBC,EAAY,OAAArC,EAAAA,EAAM,IAANA,EAAY,GACxBsC,EAAWH,EAAMI,OAAS,EAAIJ,EAAMA,EAAMI,OAAS,GAAK,GAC9D,OAAOF,GAAaC,EAAb,UACAD,EAAUG,OAAO,IADjB,OACsBF,EAASE,OAAO,IACzCH,EAAUG,OAAO,EACvB,CASO,SAASC,EAAWtD,GACzB,MAAM,KAAEmB,EAAF,YAAQoC,GAAyBvD,EAATK,GAA9B,OAAuCL,EAAvC,GACMsB,EAASsB,IAEf,OACE,SAACtC,EAAAA,EAAOC,KAAR,gBAAYiD,KAAK,MAAM,aAAYrC,GAAUd,GAA7C,IAAmDI,MAAOa,EAAOmC,MAC9D7B,SAAAA,EAAO2B,MAAAA,OAAAA,EAAAA,EAAcpC,GAAQ,OAGpC,CAEAmC,EAAWvB,YAAc,aCzBlB,IAAM2B,EAA6C1D,IACxD,UAACM,EAAAA,EAAOqD,KAAR,gBACEC,QAAQ,cACRC,MAAM,OACNC,MAAM,OACNC,OAAO,OACP3D,UAAU,sBACNJ,GANN,IAQE4B,SAAAA,EAAAA,EAAAA,EAAAA,KAAC,QACCoC,KAAK,eACLC,EAAE,mMAEJ,SAAC,QACCD,KAAK,eACLC,EAAE,mM,oBCPD,SAASC,EAAYlE,GAC1B,MAAM,IACJmE,EADI,OAEJC,EAFI,QAGJC,EAHI,OAIJC,EAJI,YAKJf,EALI,KAMJpC,EANI,aAOJoD,EAPI,QAQJC,EARI,UASJC,EATI,KAUJC,GAAO,SAAChB,EAAA,IAVJ,eAWJiB,EAXI,eAYJC,EAZI,YAaJC,GACE7E,EAKE8E,GAASC,EAAAA,EAAAA,GAAS,CAAEZ,MAAKE,UAASQ,cAAaF,mBAarD,OAFsBR,KATO,WAAXW,GAYT3D,GACL,SAACmC,EAAA,CACClD,UAAU,0BACVmD,cACApC,UAGF6D,EAAAA,EAAAA,cAAaN,EAAM,CACjBlB,KAAM,MACN,aAAciB,KASlB,SAACnE,EAAAA,EAAO2E,IAAP,CACCd,MACAC,SACAc,IAAK/D,EACLmD,SACAM,iBACAC,YAAaA,MAAAA,EAAAA,OAAe,EAC5BzE,UAAU,qBACVoE,UACA/D,MAAO,CACLqD,MAAO,OACPC,OAAQ,OACRoB,UAAW,QACXZ,iBAIR,CAEAL,EAAYnC,YAAc,c,mMCpEnB,IAAMqD,EAA+B,CAC1C1E,QAAS,cACT2E,WAAY,SACZC,eAAgB,SAChBC,UAAW,SACXC,cAAe,YACfC,WAAY,SACZC,SAAU,WACVC,WAAY,GAsBDC,GAAS7F,EAAAA,EAAAA,GAAgC,CAACC,EAAOC,KAC5D,MAAMqB,GAASC,EAAAA,EAAAA,IAAoB,SAAUvB,IACtC6F,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GAEzC,GAkBIvE,EAAAA,EAAAA,IAAiBxB,IAlBf,IACJmE,EADI,OAEJC,EAFI,KAGJjD,EAHI,WAIJ6E,EAJI,aAKJzB,EAAe,OALX,QAMJF,EACAC,OAAQ2B,EAPJ,YAQJ1C,EAAcR,EARV,KASJ2B,GAAO,SAAChB,EAAA,IATJ,UAUJe,EAAY,UAVR,QAWJD,EAXI,SAYJ5C,EAZI,YAaJsE,EAbI,eAcJvB,EAdI,YAeJE,EAfI,eAgBJD,GAhBF,EAiBKvE,GAjBL,YAoBM8F,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACJ5B,eACA6B,YAAaJ,EAAa,WAAQ,GAC/BZ,GACA9D,EAAO+E,WAOZ,OAJIH,IACFC,EAAaD,YAAcA,IAI3B,SAAC5F,EAAAA,EAAOgG,MAAR,gBACErG,OACII,GAFN,IAGED,WAAWI,EAAAA,EAAAA,IAAG,gBAAiBR,EAAMI,WACrC,eAAamG,EAAAA,EAAAA,IAASV,GACtBpF,MAAO0F,EAEPvE,UAAAA,EAAAA,EAAAA,MAACe,EAAA,CAAqBhB,MAAOL,EAC3BM,SAAAA,EAAAA,EAAAA,EAAAA,KAACsC,EAAA,CACCC,MACAC,SACAI,UACAF,QAAQkC,EAAAA,EAAAA,IAAgBP,EAAY,KAClCH,GAAY,KAEdzB,UACAd,cACApC,OACAoD,eACAG,OACAD,YACAE,iBACAE,cACAD,mBAEDhD,UAMTgE,EAAO7D,YAAc,S,wBCtGd,MAAM0E,EAAyB,MAClBC,EAAAA,EAAAA,IAAWC,EAAAA,GAAaC,SAAxC,MACMC,GAAYC,EAAAA,EAAAA,IAAkB,WAAY,YAC1CC,GAAmBD,EAAAA,EAAAA,IAAkB,cAAe,eAE1D,OAGA,SAAC,IAAD,CACIE,KAAK,QACL3B,WAAW,SAEX3E,QAAS,CAAEuG,KAAM,OAAQC,GAAI,SAC7BC,GAAG,OACHC,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,MAEHlD,aAAa,KACbmD,OAAO,YACPxB,YAAY,WAfhB,UAkBI,SAAC,IAAD,CAAOyB,QAAQ,IAAf,UAGI,UAAC,KAAD,YAQA,SAACC,EAAA,GAAD,CAASC,GAAG,IAAIC,SAAS,KAAKrC,WAAW,MAAzC,yBAEgB,UAAC3F,EAAD,YACA,UAACuB,EAAD,CAAO0G,KAAK,KAAZ,WAEI,SAAC/F,EAAD,WACA,UAACE,EAAD,YACI,SAACE,EAAD,KAEA,SAACA,EAAD,CAAIyB,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAhD,8BAGJ,UAACvF,EAAD,YACA,UAACL,EAAD,YACI,SAACO,EAAD,CAAIoB,MAAOkD,EAAkBtB,WAAW,MAAMqC,SAAS,KAAvD,wBAEA,SAACrF,EAAD,CAAIgD,WAAW,MAAMqC,SAAS,KAA9B,oBAEJ,UAAC5F,EAAD,YACI,SAACO,EAAD,CAAIoB,MAAOkD,EAAkBtB,WAAW,MAAKqC,SAAS,KAAtD,sBAEA,SAACrF,EAAD,CAAKgD,WAAW,MAAKqC,SAAS,KAA9B,mBAEJ,UAAC5F,EAAD,YACI,SAACO,EAAD,CAAIoB,MAAOkD,EAAkBtB,WAAW,MAAKqC,SAAS,KAAtD,wBAEA,SAACrF,EAAD,CAAIgD,WAAW,MAAKqC,SAAS,KAA7B,yBAKR,SAAC,IAAD,CAAML,GAAG,IAAI5D,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAzD,+CAIhB,SAACF,EAAA,GAAD,CAASH,GAAG,KAAKI,GAAG,IAAIC,SAAS,KAAKrC,WAAW,MAAjD,2BACA,UAAC,IAAD,CAAMoC,GAAG,IAAIG,KAAK,IAAIC,IAAI,IAAI5C,WAAW,SAAS6C,SAAS,OAA3D,WACI,SAACtC,EAAD,CAAQmC,KAAK,KAAK5G,KAAK,gBAAgBgD,IAAI,qGAC3C,SAAC,KAAD,WACI,UAAC,IAAD,CAAMgE,KAAK,iEAAiEC,YAAU,EAAtF,WACA,SAAC,IAAD,CAAMvE,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAlD,4BACA,SAAC,IAAD,CAAMjE,MAAOgD,EAAWiB,SAAS,OAAjC,uCAIR,UAAC,IAAD,CAAMD,GAAG,IAAGG,KAAK,IAAIC,IAAI,IAAI5C,WAAW,SAAS6C,SAAS,OAA1D,WACI,SAACtC,EAAD,CAAQmC,KAAK,KAAK5G,KAAK,gBAAgBgD,IAAI,qGAC3C,SAAC,KAAD,WACI,UAAC,IAAD,CAAMgE,KAAK,+DAA+DC,YAAU,EAApF,WACA,SAAC,IAAD,CAAMvE,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAlD,4BACA,SAAC,IAAD,CAAMjE,MAAOgD,EAAWiB,SAAS,kBAIzC,UAAC,IAAD,CAAMD,GAAG,IAAGG,KAAK,IAAIC,IAAI,IAAI5C,WAAW,SAAS6C,SAAS,OAA1D,WACI,SAACtC,EAAD,CAAQmC,KAAK,KAAK5G,KAAK,wBAAwBgD,IAAI,qGACnD,SAAC,KAAD,WACI,UAAC,IAAD,CAAMgE,KAAK,iEAAiEC,YAAU,EAAtF,WACA,SAAC,IAAD,CAAMvE,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAlD,oCACA,SAAC,IAAD,CAAMjE,MAAOgD,EAAWiB,SAAS,kBAIzC,UAAC,IAAD,CAAMD,GAAG,IAAGG,KAAK,IAAIC,IAAI,IAAI5C,WAAW,SAAS6C,SAAS,OAA1D,WACI,SAACtC,EAAD,CAAQmC,KAAK,KAAK5G,KAAK,cAAcgD,IAAI,qGACzC,SAAC,KAAD,WACI,UAAC,IAAD,CAAMgE,KAAK,+DAA+DC,YAAU,EAApF,WACA,SAAC,IAAD,CAAMvE,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAlD,0BACA,SAAC,IAAD,CAAMjE,MAAOgD,EAAWiB,SAAS,OAAjC,wBAIR,UAAC,IAAD,CAAMD,GAAG,IAAGG,KAAK,IAAIC,IAAI,IAAI5C,WAAW,SAAS6C,SAAS,OAA1D,WACI,SAACtC,EAAD,CAAQmC,KAAK,KAAK5G,KAAK,cAAcgD,IAAI,sGACzC,SAAC,KAAD,WACI,UAAC,IAAD,CAAMgE,KAAK,iEAAiEC,YAAU,EAAtF,WACA,SAAC,IAAD,CAAMvE,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAlD,0BACA,SAAC,IAAD,CAAMjE,MAAOgD,EAAWiB,SAAS,kBAIzC,UAAC,IAAD,CAAMD,GAAG,IAAGG,KAAK,IAAIC,IAAI,IAAI5C,WAAW,SAAS6C,SAAS,OAA1D,WACI,SAACtC,EAAD,CAAQmC,KAAK,KAAK5G,KAAK,eAAegD,IAAI,qGAC1C,SAAC,KAAD,WACI,UAAC,IAAD,CAAMgE,KAAK,iEAAiEC,YAAU,EAAtF,WACA,SAAC,IAAD,CAAMvE,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAlD,2BACA,SAAC,IAAD,CAAMjE,MAAOgD,EAAWiB,SAAS,kBAKzC,UAAC,IAAD,CAAMD,GAAG,IAAGG,KAAK,IAAIC,IAAI,IAAI5C,WAAW,SAAS6C,SAAS,OAA1D,WACI,SAACtC,EAAD,CAAQmC,KAAK,KAAK5G,KAAK,YAAYgD,IAAI,qGACvC,SAAC,KAAD,WACI,UAAC,IAAD,CAAMgE,KAAK,+DAA+DC,YAAU,EAApF,WACA,SAAC,IAAD,CAAMvE,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAlD,wBACA,SAAC,IAAD,CAAMjE,MAAOgD,EAAWiB,SAAS,kBAKzC,UAAC,IAAD,CAAMD,GAAG,IAAGG,KAAK,IAAIC,IAAI,IAAI5C,WAAW,SAAS6C,SAAS,OAA1D,WACI,SAACtC,EAAD,CAAQmC,KAAK,KAAK5G,KAAK,eAAegD,IAAI,qGAC1C,SAAC,KAAD,WACI,UAAC,IAAD,CAAMgE,KAAK,+DAA+DC,YAAU,EAApF,WACA,SAAC,IAAD,CAAMvE,MAAOgD,EAAWpB,WAAW,MAAMqC,SAAS,KAAlD,2BACA,SAAC,IAAD,CAAMjE,MAAOgD,EAAWiB,SAAS,wB,4JC7F9C,IAAMO,GAAOtI,EAAAA,EAAAA,GAA6B,SAAcC,EAAOC,GACpE,MAAM,UAAEqI,EAAF,MAAaC,EAAb,QAAoBC,EAApB,KAA6BC,EAA7B,MAAmCC,EAAnC,KAA0CC,EAA1C,OAAgDC,GACpD5I,EAD+DK,GAAjE,OACEL,EADF,GAGMsB,EAAS,CACbZ,QAAS,OACTmI,cAAeP,EACfjD,WAAYkD,EACZjD,eAAgBkD,EAChBN,SAAUO,EACVK,UAAWJ,EACXK,SAAUJ,EACVhD,WAAYiD,GAGd,OAAO,SAACtI,EAAAA,EAAOC,KAAR,QAAYN,MAAUQ,MAAOa,GAAYjB,GACjD,GAEDgI,EAAKtG,YAAc,M,s5dClENiH,EAAU,CACnBC,OADmB,EAEnBC,QAFmB,EAGnBC,iBAHmB,EAInBC,cAJmB,EAKnBC,MALmB,GAahB,IAAK1C,G,SAAAA,GAAAA,E,kBAAAA,E,eAAAA,IAAAA,E,KAKZ,MAAM2C,EAAS,CACX,CAAC3C,EAAaC,SAAU2C,EACxB,CAAC5C,EAAa6C,OAAQC,GAGb/C,EAAcgD,IACvB,MAAOC,EAAMC,IAAW7D,EAAAA,EAAAA,UAAgB,CAAEmD,QAAS,GAAIG,MAAO,KAQ9D,OANAQ,EAAAA,EAAAA,WAAU,KACNC,MAAMR,EAAOI,IACRK,KAAMC,GAAQA,EAAIC,QAClBF,KAAME,GAASL,EAASD,IAAD,QAAC,UAAeA,GAAhB,IAAsB,CAACD,GAAWO,OAC/D,CAACP,IAEGC,GAOE/B,EAAqB,IAA4B,IAA3B,SAAEhG,GAAwB,EAAXvB,GAAW,YACzD,OACI,SAAC,IAAD,CAAOsH,QAAQ,IAAf,UACI,SAAC,IAAD,CACIuC,WAAY,CACRC,EAAG,QAAC,KAAEC,GAAH,EAAYpK,GAAZ,mBAAwB,SAAC,KAAD,kBAAUK,GAAUL,KAC/CqK,EAAG,QAAC,KAAED,GAAH,EAAYpK,GAAZ,mBACC,SAAC,KAAD,QAAMmI,KAAMnI,EAAMmI,KAAMmC,OAAO,SAASzG,MAAM,eAAkB7D,KAEpEuK,GAAI,IAAyB,IAAxB,KAAEH,GAAqB,EAAZpK,GAAY,YACxB,MAAM,QAAEwK,GAAqBxK,EAATK,GAApB,OAA6BL,EAA7B,GAEA,OACI,SAAC,MAAD,kBACQK,GADR,IAEI,WAAS,OACToK,kBAAkB,SAClB/J,QAAQ,OACRgK,oBAAoB,iBACpBC,cAAc,YACdlF,WAAW,UAIvBmF,GAAI,IAAyB,IAAxB,KAAER,GAAqB,EAAZpK,GAAY,YACxB,MAAM,QAAEwK,GAAqBxK,EAATK,GAApB,OAA6BL,EAA7B,GAEA,OAAO,uBAAI,WAAS,UAAU,iBAA8B,IAAdA,EAAM6K,MAAc,KAASxK,MAxBvF,SA4BKuB,M,kECtBV,SAASmD,EAAS/E,GACvB,MAAM,QACJwE,EADI,IAEJL,EAFI,OAGJC,EAHI,OAIJE,EAJI,QAKJD,EALI,YAMJQ,EANI,MAOJiG,EAPI,eAQJnG,GACE3E,GAEG8E,EAAQiG,IAAahF,EAAAA,EAAAA,UAAiB,YAE7C8D,EAAAA,EAAAA,WAAU,KACRkB,EAAU5G,EAAM,UAAY,YAC3B,CAACA,IAEJ,MAAM6G,GAAWC,EAAAA,EAAAA,UAEXC,GAAOC,EAAAA,EAAAA,aAAY,KACvB,IAAKhH,EAAK,OAEViH,IAEA,MAAMnG,EAAM,IAAIoG,MAChBpG,EAAId,IAAMA,EACNU,IAAaI,EAAIJ,YAAcA,GAC/BT,IAAQa,EAAIqG,OAASlH,GACrB0G,IAAO7F,EAAI6F,MAAQA,GACnBtG,IAASS,EAAIT,QAAUA,GAE3BS,EAAIsG,OAAUC,IACZJ,IACAL,EAAU,UACVzG,MAAAA,GAAAA,EAASkH,IAEXvG,EAAIwG,QAAWC,IACbN,IACAL,EAAU,UACV1G,MAAAA,GAAAA,EAAUqH,IAGZV,EAASW,QAAU1G,GAClB,CAACd,EAAKU,EAAaT,EAAQ0G,EAAOxG,EAAQD,EAASG,IAEhD4G,EAAQ,KACRJ,EAASW,UACXX,EAASW,QAAQJ,OAAS,KAC1BP,EAASW,QAAQF,QAAU,KAC3BT,EAASW,QAAU,OAuBvB,OAnBAC,EAAAA,EAAAA,GAAoB,KAKlB,IAAIjH,EAKJ,MAHe,YAAXG,GACFoG,IAEK,KACLE,MAED,CAACtG,EAAQoG,EAAMvG,IAMXA,EAAiB,SAAWG,CACrC,CAEO,IAAM+G,EAA0B,CACrC/G,EACAgH,IAEY,WAAXhH,GAA4C,sBAArBgH,GACZ,WAAXhH,GAA4C,YAArBgH,C","sources":["../node_modules/@chakra-ui/table/src/table-container.tsx","../node_modules/@chakra-ui/table/src/table.tsx","../node_modules/@chakra-ui/table/src/thead.tsx","../node_modules/@chakra-ui/table/src/tr.tsx","../node_modules/@chakra-ui/table/src/th.tsx","../node_modules/@chakra-ui/table/src/tbody.tsx","../node_modules/@chakra-ui/table/src/td.tsx","../node_modules/@chakra-ui/avatar/src/avatar-context.tsx","../node_modules/@chakra-ui/avatar/src/avatar-name.tsx","../node_modules/@chakra-ui/avatar/src/generic-avatar-icon.tsx","../node_modules/@chakra-ui/avatar/src/avatar-image.tsx","../node_modules/@chakra-ui/avatar/src/avatar.tsx","pages/sidebar/SidebarPublication.tsx","../node_modules/@chakra-ui/layout/src/flex.tsx","shared/content/Content.tsx","../node_modules/@chakra-ui/image/src/use-image.ts"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface TableContainerProps extends HTMLChakraProps<\"div\"> {}\n\nexport const TableContainer = forwardRef<TableContainerProps, \"div\">(\n  (props: HTMLChakraProps<\"div\">, ref) => {\n    const { overflow, overflowX, className, ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        className={cx(\"chakra-table__container\", className)}\n        {...rest}\n        __css={{\n          display: \"block\",\n          whiteSpace: \"nowrap\",\n          WebkitOverflowScrolling: \"touch\",\n          overflowX: overflow ?? overflowX ?? \"auto\",\n          overflowY: \"hidden\",\n          maxWidth: \"100%\",\n        }}\n      />\n    )\n  },\n)\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { createContext } from \"@chakra-ui/react-context\"\n\nconst [TableStylesProvider, useTableStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `,\n})\n\nexport { useTableStyles }\n\nexport interface TableOptions {\n  layout?: SystemStyleObject[\"tableLayout\"]\n}\n\nexport interface TableProps\n  extends HTMLChakraProps<\"table\">,\n    TableOptions,\n    ThemingProps<\"Table\"> {}\n\n/**\n * The `Table` component is used to organize and display data efficiently. It renders a `<table>` element by default.\n *\n * @see Docs https://chakra-ui.com/docs/components/table\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/table/\n */\nexport const Table = forwardRef<TableProps, \"table\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props)\n  const { className, layout, ...tableProps } = omitThemingProps(props)\n\n  return (\n    <TableStylesProvider value={styles}>\n      <chakra.table\n        ref={ref}\n        __css={{ tableLayout: layout, ...styles.table }}\n        className={cx(\"chakra-table\", className)}\n        {...tableProps}\n      />\n    </TableStylesProvider>\n  )\n})\n\nTable.displayName = \"Table\"\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useTableStyles } from \"./table\"\n\nexport interface TableHeadProps extends HTMLChakraProps<\"thead\"> {}\n\nexport const Thead = forwardRef<TableHeadProps, \"thead\">((props, ref) => {\n  const styles = useTableStyles()\n  return <chakra.thead {...props} ref={ref} __css={styles.thead} />\n})\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useTableStyles } from \"./table\"\n\nexport interface TableRowProps extends HTMLChakraProps<\"tr\"> {}\nexport const Tr = forwardRef<TableRowProps, \"tr\">((props, ref) => {\n  const styles = useTableStyles()\n\n  return <chakra.tr {...props} ref={ref} __css={styles.tr} />\n})\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useTableStyles } from \"./table\"\n\nexport interface TableColumnHeaderProps extends HTMLChakraProps<\"th\"> {\n  /**\n   * Aligns the cell content to the right\n   * @default false\n   */\n  isNumeric?: boolean\n}\nexport const Th = forwardRef<TableColumnHeaderProps, \"th\">(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles()\n    return (\n      <chakra.th\n        {...rest}\n        ref={ref}\n        __css={styles.th}\n        data-is-numeric={isNumeric}\n      />\n    )\n  },\n)\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useTableStyles } from \"./table\"\n\nexport interface TableBodyProps extends HTMLChakraProps<\"tbody\"> {}\n\nexport const Tbody = forwardRef<TableBodyProps, \"tbody\">((props, ref) => {\n  const styles = useTableStyles()\n  return <chakra.tbody {...props} ref={ref} __css={styles.tbody} />\n})\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useTableStyles } from \"./table\"\n\nexport interface TableCellProps extends HTMLChakraProps<\"td\"> {\n  /**\n   * Aligns the cell content to the right\n   * @default false\n   */\n  isNumeric?: boolean\n}\nexport const Td = forwardRef<TableCellProps, \"td\">(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles()\n\n    return (\n      <chakra.td\n        {...rest}\n        ref={ref}\n        __css={styles.td}\n        data-is-numeric={isNumeric}\n      />\n    )\n  },\n)\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { SystemStyleObject } from \"@chakra-ui/system\"\n\nexport const [AvatarStylesProvider, useAvatarStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\",\n})\n","import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useAvatarStyles } from \"./avatar-context\"\nimport { AvatarOptions } from \"./avatar-types\"\n\nexport function initials(name: string) {\n  const names = name.split(\" \")\n  const firstName = names[0] ?? \"\"\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\"\n  return firstName && lastName\n    ? `${firstName.charAt(0)}${lastName.charAt(0)}`\n    : firstName.charAt(0)\n}\n\ninterface AvatarNameProps\n  extends HTMLChakraProps<\"div\">,\n    Pick<AvatarOptions, \"name\" | \"getInitials\"> {}\n/**\n * The avatar name container\n */\n\nexport function AvatarName(props: AvatarNameProps) {\n  const { name, getInitials, ...rest } = props\n  const styles = useAvatarStyles()\n\n  return (\n    <chakra.div role=\"img\" aria-label={name} {...rest} __css={styles.label}>\n      {name ? getInitials?.(name) : null}\n    </chakra.div>\n  )\n}\n\nAvatarName.displayName = \"AvatarName\"\n","import { chakra, ChakraComponent } from \"@chakra-ui/system\"\n\n/**\n * Fallback avatar react component.\n * This should be a generic svg used to represent an avatar\n */\nexport const GenericAvatarIcon: ChakraComponent<\"svg\"> = (props) => (\n  <chakra.svg\n    viewBox=\"0 0 128 128\"\n    color=\"#fff\"\n    width=\"100%\"\n    height=\"100%\"\n    className=\"chakra-avatar__svg\"\n    {...props}\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n    />\n    <path\n      fill=\"currentColor\"\n      d=\"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n    />\n  </chakra.svg>\n)\n","import { ImageProps, useImage } from \"@chakra-ui/image\"\nimport { chakra, SystemStyleObject } from \"@chakra-ui/system\"\nimport { cloneElement } from \"react\"\nimport { AvatarName } from \"./avatar-name\"\nimport { GenericAvatarIcon } from \"./generic-avatar-icon\"\n\ntype AvatarImageProps = ImageProps & {\n  getInitials?: (name: string) => string\n  borderRadius?: SystemStyleObject[\"borderRadius\"]\n  icon: React.ReactElement\n  iconLabel?: string\n  name?: string\n}\n\nexport function AvatarImage(props: AvatarImageProps) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = <GenericAvatarIcon />,\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin,\n  } = props\n\n  /**\n   * use the image hook to only show the image when it has loaded\n   */\n  const status = useImage({ src, onError, crossOrigin, ignoreFallback })\n\n  const hasLoaded = status === \"loaded\"\n\n  /**\n   * Fallback avatar applies under 2 conditions:\n   * - If `src` was passed and the image has not loaded or failed to load\n   * - If `src` wasn't passed\n   *\n   * In this case, we'll show either the name avatar or default avatar\n   */\n  const showFallback = !src || !hasLoaded\n\n  if (showFallback) {\n    return name ? (\n      <AvatarName\n        className=\"chakra-avatar__initials\"\n        getInitials={getInitials}\n        name={name}\n      />\n    ) : (\n      cloneElement(icon, {\n        role: \"img\",\n        \"aria-label\": iconLabel,\n      })\n    )\n  }\n\n  /**\n   * If `src` was passed and the image has loaded, we'll show it\n   */\n  return (\n    <chakra.img\n      src={src}\n      srcSet={srcSet}\n      alt={name}\n      onLoad={onLoad}\n      referrerPolicy={referrerPolicy}\n      crossOrigin={crossOrigin ?? undefined}\n      className=\"chakra-avatar__img\"\n      loading={loading}\n      __css={{\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius,\n      }}\n    />\n  )\n}\n\nAvatarImage.displayName = \"AvatarImage\"\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { AvatarStylesProvider } from \"./avatar-context\"\nimport { AvatarImage } from \"./avatar-image\"\nimport { GenericAvatarIcon } from \"./generic-avatar-icon\"\nimport { initials } from \"./avatar-name\"\nimport { AvatarOptions } from \"./avatar-types\"\nimport { useState } from \"react\"\n\nexport const baseStyle: SystemStyleObject = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0,\n}\n\nexport interface AvatarProps\n  extends Omit<HTMLChakraProps<\"span\">, \"onError\">,\n    AvatarOptions,\n    ThemingProps<\"Avatar\"> {\n  crossOrigin?: HTMLChakraProps<\"img\">[\"crossOrigin\"]\n  iconLabel?: string\n  /**\n   * If `true`, opt out of the avatar's `fallback` logic and\n   * renders the `img` at all times.\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n}\n\n/**\n * Avatar component that renders an user avatar with\n * support for fallback avatar and name-only avatars\n */\nexport const Avatar = forwardRef<AvatarProps, \"span\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = <GenericAvatarIcon />,\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = omitThemingProps(props)\n\n  const avatarStyles: SystemStyleObject = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : undefined,\n    ...baseStyle,\n    ...styles.container,\n  }\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor\n  }\n\n  return (\n    <chakra.span\n      ref={ref}\n      {...rest}\n      className={cx(\"chakra-avatar\", props.className)}\n      data-loaded={dataAttr(isLoaded)}\n      __css={avatarStyles}\n    >\n      <AvatarStylesProvider value={styles}>\n        <AvatarImage\n          src={src}\n          srcSet={srcSet}\n          loading={loading}\n          onLoad={callAllHandlers(onLoadProp, () => {\n            setIsLoaded(true)\n          })}\n          onError={onError}\n          getInitials={getInitials}\n          name={name}\n          borderRadius={borderRadius}\n          icon={icon}\n          iconLabel={iconLabel}\n          ignoreFallback={ignoreFallback}\n          crossOrigin={crossOrigin}\n          referrerPolicy={referrerPolicy}\n        />\n        {children}\n      </AvatarStylesProvider>\n    </chakra.span>\n  )\n})\n\nAvatar.displayName = \"Avatar\"\n","import { FC } from \"react\";\n\nimport { useColorModeValue, ColorMode, Text, Center, Container, Heading, Image, HStack, Stack, Flex, Box, IconButton, Button, Grid, GridItem, Badge, CircularProgress, CircularProgressLabel, Wrap, WrapItem, Avatar, AvatarBadge, Link, Table, TableContainer, Tfoot, Th, Tr, Td, Tbody, Thead, TableCaption,} from \"@chakra-ui/react\";\n\nimport { Content, configs, useContent, MarkdownFile } from \"shared/content/Content\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { WorkPageId } from \"utils/useScroll\";\nimport { ChevronDownIcon } from \"utils/Icons\";\nimport { Skills } from \"pages/about/skills/Skills\";\nimport { Education } from \"pages/about/education/Education\";\n\n\nexport const SidebarPublication: FC = () => {\n    const content = useContent(MarkdownFile.Landing);\n    const textColor = useColorModeValue(\"gray.800\", \"gray.100\"); \n    const textprimaryColor = useColorModeValue(\"primary.800\", \"primary.100\"); \n\n    return (\n \n\n    <Container\n        maxW=\"250px\"\n        alignItems=\"center\"\n        // flex=\"0.4\"\n        display={{ base: \"none\", lg: \"block\" }}\n        mr=\"30px\"\n        ml=\"0\"\n        pl=\"3\"\n        pr=\"3\"\n        pt=\"3\"\n        pb=\"3\"\n        mt=\"140\"\n        \n        borderRadius=\"md\"\n        border=\"1px solid\"\n        borderColor=\"gray.100\" \n    >\n        \n        <Stack spacing=\"3\">\n\n            \n            <Box >\n            {/* <Content mb=\"2\" fontSize=\"16\" fontWeight=\"600\"> Type </Content>\n            <Text>🌎 International </Text>\n            <Text>🇰🇷 Domestic </Text>\n            <Text>💡 Intellectual Property </Text> */}\n\n\n\n            <Content mb=\"2\" fontSize=\"16\" fontWeight=\"600\"> Cited By </Content>\n            \n                            <TableContainer>\n                            <Table size='xs'>\n                            {/* <TableCaption>Sourced from Google Scholar</TableCaption> */}\n                                <Thead>\n                                <Tr>\n                                    <Th></Th>\n                                \n                                    <Th color={textColor} fontWeight=\"500\" fontSize=\"14\">Since 2020</Th>\n                                </Tr>\n                                </Thead>\n                                <Tbody>\n                                <Tr>\n                                    <Td color={textprimaryColor} fontWeight=\"500\" fontSize=\"14\">Citations</Td>\n                                \n                                    <Td fontWeight=\"500\" fontSize=\"14\">81</Td>\n                                </Tr>\n                                <Tr>\n                                    <Td color={textprimaryColor} fontWeight=\"500\"fontSize=\"14\">h-index</Td>\n                              \n                                    <Td  fontWeight=\"500\"fontSize=\"14\">5</Td>\n                                </Tr>\n                                <Tr>\n                                    <Td color={textprimaryColor} fontWeight=\"500\"fontSize=\"14\">i10-index</Td>\n                                    \n                                    <Td fontWeight=\"500\"fontSize=\"14\">3</Td>\n                                </Tr>\n                                </Tbody>\n                                \n                            </Table>\n                            <Text mt=\"1\" color={textColor} fontWeight=\"400\" fontSize=\"14\">* Refered from Google Scholar</Text>\n                            </TableContainer>\n            \n           \n            <Content mt=\"10\" mb=\"2\" fontSize=\"16\" fontWeight=\"600\"> Co-Authors </Content>\n            <Flex mb=\"1\" flex='1' gap='4' alignItems='center' flexWrap='wrap'>        \n                <Avatar size=\"sm\" name='Jin-Hyuk Hong' src='https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=iTu5G9QAAAAJ&citpid=2' />\n                <Box>\n                    <Link href=\"https://scholar.google.co.kr/citations?user=iTu5G9QAAAAJ&hl=en\" isExternal>\n                    <Text color={textColor} fontWeight=\"500\" fontSize=\"14\">Jin-Hyuk Hong</Text>\n                    <Text color={textColor} fontSize='13px'>Academic Advisor</Text>\n                    </Link>\n                </Box>\n            </Flex>\n            <Flex mb=\"1\"flex='1' gap='4' alignItems='center' flexWrap='wrap'>        \n                <Avatar size=\"sm\" name='Junryeol Jeon' src='https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=5S2lwTEAAAAJ&citpid=1' />\n                <Box>\n                    <Link href=\"https://scholar.google.com/citations?user=5S2lwTEAAAAJ&hl=en\" isExternal>\n                    <Text color={textColor} fontWeight=\"500\" fontSize=\"14\">Junryeol Jeon</Text>\n                    <Text color={textColor} fontSize=\"12px\"></Text>\n                    </Link>\n                </Box>\n            </Flex>\n            <Flex mb=\"1\"flex='1' gap='4' alignItems='center' flexWrap='wrap'>        \n                <Avatar size=\"sm\" name='Albert DeokYoung Yang' src='https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=KeLx2JMAAAAJ&citpid=2' />\n                <Box>\n                    <Link href=\"https://scholar.google.co.kr/citations?user=KeLx2JMAAAAJ&hl=en\" isExternal>\n                    <Text color={textColor} fontWeight=\"500\" fontSize=\"14\">Albert DeokYoung Yang</Text>\n                    <Text color={textColor} fontSize='12px'></Text>\n                    </Link>\n                </Box>\n            </Flex>\n            <Flex mb=\"1\"flex='1' gap='4' alignItems='center' flexWrap='wrap'>        \n                <Avatar size=\"sm\" name='Youjin Choi' src='https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=zEPv1XQAAAAJ&citpid=1' />\n                <Box>\n                    <Link href=\"https://scholar.google.com/citations?user=zEPv1XQAAAAJ&hl=en\" isExternal>\n                    <Text color={textColor} fontWeight=\"500\" fontSize=\"14\">Youjin Choi</Text>\n                    <Text color={textColor} fontSize='12px'> </Text>\n                    </Link>\n                </Box>\n            </Flex>\n            <Flex mb=\"1\"flex='1' gap='4' alignItems='center' flexWrap='wrap'>        \n                <Avatar size=\"sm\" name='Chungha Lee' src='https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=_CSwBPEAAAAJ&citpid=38' />\n                <Box>\n                    <Link href=\"https://scholar.google.co.kr/citations?user=_CSwBPEAAAAJ&hl=en\" isExternal>\n                    <Text color={textColor} fontWeight=\"500\" fontSize=\"14\">Chungha Lee</Text>\n                    <Text color={textColor} fontSize='12px'></Text>\n                    </Link>\n                </Box>\n            </Flex>\n            <Flex mb=\"1\"flex='1' gap='4' alignItems='center' flexWrap='wrap'>        \n                <Avatar size=\"sm\" name='JooYeong Kim' src='https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=8GXb90gAAAAJ&citpid=5' />\n                <Box>\n                    <Link href=\"https://scholar.google.co.kr/citations?user=8GXb90gAAAAJ&hl=en\" isExternal>\n                    <Text color={textColor} fontWeight=\"500\" fontSize=\"14\">JooYeong Kim</Text>\n                    <Text color={textColor} fontSize='12px'></Text>\n                    </Link>\n                </Box>\n            </Flex>\n\n            <Flex mb=\"1\"flex='1' gap='4' alignItems='center' flexWrap='wrap'>        \n                <Avatar size=\"sm\" name='MinJu Han' src='https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=aCVlEfoAAAAJ&citpid=1' />\n                <Box>\n                    <Link href=\"https://scholar.google.com/citations?user=aCVlEfoAAAAJ&hl=en\" isExternal>\n                    <Text color={textColor} fontWeight=\"500\" fontSize=\"14\">MinJu Han</Text>\n                    <Text color={textColor} fontSize='12px'></Text>\n                    </Link>\n                </Box>\n            </Flex>\n\n            <Flex mb=\"1\"flex='1' gap='4' alignItems='center' flexWrap='wrap'>        \n                <Avatar size=\"sm\" name='JinYoung Yoo' src='https://scholar.googleusercontent.com/citations?view_op=medium_photo&user=fZhAYccAAAAJ&citpid=2' />\n                <Box>\n                    <Link href=\"https://scholar.google.com/citations?user=fZhAYccAAAAJ&hl=en\" isExternal>\n                    <Text color={textColor} fontWeight=\"500\" fontSize=\"14\">JinYoung Yoo</Text>\n                    <Text color={textColor} fontSize='12px'></Text>\n                    </Link>\n                </Box>\n            </Flex>\n\n            </Box>\n    \n            \n            \n        </Stack>\n\n    </Container>\n    );\n};\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n","import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"0\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.700\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'‣ '\"\n                                fontWeight=\"500\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\ntype NativeImageProps = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport interface UseImageProps {\n  /**\n   * The image `src` attribute\n   */\n  src?: string\n  /**\n   * The image `srcset` attribute\n   */\n  srcSet?: string\n  /**\n   * The image `sizes` attribute\n   */\n  sizes?: string\n  /**\n   * A callback for when the image `src` has been loaded\n   */\n  onLoad?: NativeImageProps[\"onLoad\"]\n  /**\n   * A callback for when there was an error loading the image `src`\n   */\n  onError?: NativeImageProps[\"onError\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n  /**\n   * The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\n   * This tells the browser to request cross-origin access when trying to download the image data.\n   */\n  crossOrigin?: NativeImageProps[\"crossOrigin\"]\n  loading?: NativeImageProps[\"loading\"]\n}\n\ntype Status = \"loading\" | \"failed\" | \"pending\" | \"loaded\"\n\nexport type FallbackStrategy = \"onError\" | \"beforeLoadOrError\"\n\ntype ImageEvent = React.SyntheticEvent<HTMLImageElement, Event>\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nexport function useImage(props: UseImageProps) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback,\n  } = props\n\n  const [status, setStatus] = useState<Status>(\"pending\")\n\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\")\n  }, [src])\n\n  const imageRef = useRef<HTMLImageElement | null>()\n\n  const load = useCallback(() => {\n    if (!src) return\n\n    flush()\n\n    const img = new Image()\n    img.src = src\n    if (crossOrigin) img.crossOrigin = crossOrigin\n    if (srcSet) img.srcset = srcSet\n    if (sizes) img.sizes = sizes\n    if (loading) img.loading = loading\n\n    img.onload = (event) => {\n      flush()\n      setStatus(\"loaded\")\n      onLoad?.(event as unknown as ImageEvent)\n    }\n    img.onerror = (error) => {\n      flush()\n      setStatus(\"failed\")\n      onError?.(error as any)\n    }\n\n    imageRef.current = img\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading])\n\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null\n      imageRef.current.onerror = null\n      imageRef.current = null\n    }\n  }\n\n  useSafeLayoutEffect(() => {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined\n\n    if (status === \"loading\") {\n      load()\n    }\n    return () => {\n      flush()\n    }\n  }, [status, load, ignoreFallback])\n\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n  return ignoreFallback ? \"loaded\" : status\n}\n\nexport const shouldShowFallbackImage = (\n  status: Status,\n  fallbackStrategy: FallbackStrategy,\n) =>\n  (status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\") ||\n  (status === \"failed\" && fallbackStrategy === \"onError\")\n\nexport type UseImageReturn = ReturnType<typeof useImage>\n"],"names":["TableContainer","forwardRef","props","ref","overflow","overflowX","className","rest","chakra","div","cx","__css","display","whiteSpace","WebkitOverflowScrolling","_a","overflowY","maxWidth","TableStylesProvider","useTableStyles","createContext","name","errorMessage","Table","styles","useMultiStyleConfig","omitThemingProps","layout","tableProps","value","children","table","tableLayout","displayName","Thead","thead","Tr","tr","Th","isNumeric","th","Tbody","tbody","Td","td","AvatarStylesProvider","useAvatarStyles","hookName","providerName","initials","names","split","firstName","lastName","length","charAt","AvatarName","getInitials","role","label","GenericAvatarIcon","svg","viewBox","color","width","height","fill","d","AvatarImage","src","srcSet","onError","onLoad","borderRadius","loading","iconLabel","icon","ignoreFallback","referrerPolicy","crossOrigin","status","useImage","cloneElement","img","alt","objectFit","baseStyle","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","isLoaded","setIsLoaded","useState","showBorder","onLoadProp","borderColor","avatarStyles","borderWidth","container","span","dataAttr","callAllHandlers","SidebarPublication","useContent","MarkdownFile","Landing","textColor","useColorModeValue","textprimaryColor","maxW","base","lg","mr","ml","pl","pr","pt","pb","mt","border","spacing","Content","mb","fontSize","size","flex","gap","flexWrap","href","isExternal","Flex","direction","align","justify","wrap","basis","grow","shrink","flexDirection","flexBasis","flexGrow","configs","common","landing","featuredProjects","otherProjects","about","Mapper","LandingMd","About","AboutMd","fileName","data","setData","useEffect","fetch","then","res","text","components","p","node","a","target","ul","ordered","listStylePosition","gridTemplateColumns","listStyleType","li","index","sizes","setStatus","imageRef","useRef","load","useCallback","flush","Image","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","shouldShowFallbackImage","fallbackStrategy"],"sourceRoot":""}