{"version":3,"file":"static/js/914.cd96375a.chunk.js","mappings":"qOASaA,EAAc,WACvB,IAAMC,GAAUC,EAAAA,EAAAA,IAAWC,EAAAA,GAAAA,SAU3B,OACI,UAAC,KAAD,CAAKC,GAAG,eAAR,WACI,SAAC,KAAD,CAAQC,GAAI,CAAEC,KAAM,GAAIC,GAAI,IAA5B,UACI,UAAC,KAAD,CAAOC,KAAM,CAAEF,KAAM,KAAMG,QAAQ,KAAnC,WACI,SAAC,KAAD,CAAOA,QAAQ,IAAf,UACI,SAAC,KAAD,CAAS,WAAS,UAAU,iBAAe,MAAMC,SAAS,KAA1D,SACKT,EAAQU,aAIjB,SAAC,IAAD,CAASC,MAAO,YAGxB,SAAC,KAAD,CAAMC,eAAe,SAAS,WAAS,OAAO,iBAAe,OAA7D,UACI,SAAC,KAAD,CACIC,GAAIC,EAAAA,GACJL,SAAS,MACTM,QAAQ,OACR,aAAW,oBACXC,MAAM,SAAC,MAAD,IACNC,QA5BO,WACnB,IAAMC,EAAiBC,SAASC,eAAeC,EAAAA,IAE3CH,GACAA,EAAeI,eAAe,CAAEC,SAAU,qB,gJCRhDC,EAAiD,CACnDC,UAAU,SAAC,MAAD,IACVC,QAAQ,SAAC,MAAD,IACRC,UAAU,SAAC,MAAD,IACVC,WAAW,SAAC,MAAD,IACXC,SAAS,SAAC,MAAD,IACTC,MAAM,SAAC,MAAD,IACNC,gBAAgB,SAAC,MAAD,KASPC,EAAqB,SAAC,GAA6C,IAAD,IAA1CC,OAAAA,OAA0C,SAA3BC,EAA2B,EAA3BA,QAA2B,IAAlBvB,MAAAA,OAAkB,MAAV,IAAU,EAC3E,OACI,UAAC,KAAD,CAAQH,QAAQ,IAAhB,UACKyB,IACG,SAAC,KAAD,CAAQ,WAAS,OAAO,iBAAgBtB,EAAOwB,KAAK,KAAKC,aAAa,KAAKC,GAAG,IAAIpB,QAASqB,EAAAA,GAA3F,oBAIHC,EAAAA,GAAAA,OAAAA,QAAAA,KACG,SAACC,EAAQC,GAAT,QACI,OAACP,QAAD,IAACA,GAAAA,EAASQ,SAASF,EAAOG,SACtB,SAAC,IAAD,CAA2BC,MAAOJ,EAAOG,KAAME,cAAc,aAA7D,UACI,SAAC,KAAD,CACIC,EAAE,IACF,uBAAeN,EAAOG,KAAtB,WACA9B,GAAIC,EAAAA,GACJC,QAAQ,OACRN,SAA0B,SAAhB+B,EAAOG,KAAkB,OAAS,OAC5C3B,KAAMQ,EAAkBgB,EAAOG,MAC/B1B,QAAS,kBAAM8B,EAAAA,EAAAA,IAAKP,EAAOQ,UARrBR,EAAOG,c,4FCjChCI,EAAO,SAACC,GAAD,OAAkBC,OAAOF,KAAKC,EAAM,WAE3CV,EAAe,WACxBS,EAAKR,EAAAA,GAAAA,OAAAA","sources":["pages/landing/Landing.tsx","shared/socials/Socials.tsx","utils/Functions.ts"],"sourcesContent":["import { FC } from \"react\";\n\nimport { Center, Container, Heading, Image, HStack, Stack, Flex, Box, IconButton, Button } from \"@chakra-ui/react\";\n\nimport { Content, configs, useContent, MarkdownFile } from \"shared/content/Content\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { WorkPageId } from \"utils/useScroll\";\nimport { ChevronDownIcon } from \"utils/Icons\";\n\nexport const Landing: FC = () => {\n    const content = useContent(MarkdownFile.Landing);\n\n    const scrollIntoView = () => {\n        const featuredHeader = document.getElementById(WorkPageId);\n\n        if (featuredHeader) {\n            featuredHeader.scrollIntoView({ behavior: \"smooth\" });\n        }\n    };\n\n    return (\n        <Box id=\"page-landing\">\n            <Center pb={{ base: 16, md: 32 }}>\n                <Stack flex={{ base: \"5\"}} spacing=\"16\">\n                    <Stack spacing=\"8\">\n                        <Content data-aos=\"fade-up\" data-aos-delay=\"500\" fontSize=\"lg\">\n                            {content.landing}\n                        </Content>\n                        \n                    </Stack>\n                    <Socials delay={1000} />\n                </Stack>\n            </Center>\n            <Flex justifyContent=\"center\" data-aos=\"fade\" data-aos-delay=\"1400\">\n                <Button\n                    as={IconButton}\n                    fontSize=\"3xl\"\n                    variant=\"icon\"\n                    aria-label=\"down arrow button\"\n                    icon={<ChevronDownIcon />}\n                    onClick={scrollIntoView}\n                ></Button>\n            </Flex>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, HStack, IconButton, Tooltip } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, LinkedInIcon, MailIcon, YoutubeIcon, ScholarIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedin: <LinkedInIcon />,\n    github: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    mail: <MailIcon />,\n    google_scholar: <ScholarIcon/>,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800 }) => {\n    return (\n        <HStack spacing=\"3\">\n            {resume && (\n                <Button data-aos=\"fade\" data-aos-delay={delay} size=\"lg\" borderRadius=\"xl\" mr=\"2\" onClick={onResumeOpen}>\n                    Resume\n                </Button>\n            )}\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip key={social.type} label={social.type} textTransform=\"capitalize\">\n                            <Button\n                                p=\"0\"\n                                aria-label={`${social.type}-button`}\n                                as={IconButton}\n                                variant=\"icon\"\n                                fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                icon={LinksToIconMapper[social.type]}\n                                onClick={() => open(social.link)}\n                            />\n                        </Tooltip>\n                    ),\n            )}\n        </HStack>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onScholarOpen = (link : string) => {\n    window.open(link, \"_blank\");\n};\n\n\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["Landing","content","useContent","MarkdownFile","id","pb","base","md","flex","spacing","fontSize","landing","delay","justifyContent","as","IconButton","variant","icon","onClick","featuredHeader","document","getElementById","WorkPageId","scrollIntoView","behavior","LinksToIconMapper","linkedin","github","facebook","instagram","youtube","mail","google_scholar","Socials","resume","exclude","size","borderRadius","mr","onResumeOpen","configs","social","idx","includes","type","label","textTransform","p","open","link","window"],"sourceRoot":""}