{"version":3,"file":"static/js/26.ff50b10d.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/popover/dist/chakra-ui-popover.esm.js","pages/sidebar/Sidebar.tsx","shared/socials/Socials.tsx","utils/Functions.ts"],"sourcesContent":["import { CloseButton } from '@chakra-ui/close-button';\nimport { chakra, useMultiStyleConfig, omitThemingProps, useTheme, StylesProvider, forwardRef, useStyles } from '@chakra-ui/system';\nimport { mergeWith, determineLazyBehavior, px, callAllHandlers, getRelatedTarget, contains, runIfFn, __DEV__, callAll, cx } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default, { useRef, useState, useCallback, useEffect } from 'react';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport { motion } from 'framer-motion';\nimport { useDisclosure, useIds, useFocusOnPointerDown, useFocusOnHide, useFocusOnShow } from '@chakra-ui/hooks';\nimport { useAnimationState } from '@chakra-ui/hooks/use-animation-state';\nimport { usePopper, popperCSSVars } from '@chakra-ui/popper';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _createContext = createContext({\n  name: \"PopoverContext\",\n  errorMessage: \"usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`\"\n}),\n    PopoverProvider = _createContext[0],\n    usePopoverContext = _createContext[1];\n\nvar mergeVariants = function mergeVariants(variants) {\n  if (!variants) return;\n  return mergeWith(variants, {\n    enter: {\n      visibility: \"visible\"\n    },\n    exit: {\n      transitionEnd: {\n        visibility: \"hidden\"\n      }\n    }\n  });\n};\n\nvar scaleFade = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1]\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1]\n    }\n  }\n};\nvar Section = motion(chakra.section);\nvar PopoverTransition = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var _usePopoverContext = usePopoverContext(),\n      isOpen = _usePopoverContext.isOpen;\n\n  return /*#__PURE__*/React__default.createElement(Section, _extends({\n    ref: ref,\n    variants: mergeVariants(props.variants)\n  }, props, {\n    initial: false,\n    animate: isOpen ? \"enter\" : \"exit\"\n  }));\n});\nPopoverTransition.defaultProps = {\n  variants: scaleFade\n};\n\nvar _excluded$1 = [\"closeOnBlur\", \"closeOnEsc\", \"initialFocusRef\", \"id\", \"returnFocusOnClose\", \"autoFocus\", \"arrowSize\", \"arrowShadowColor\", \"trigger\", \"openDelay\", \"closeDelay\", \"isLazy\", \"lazyBehavior\", \"computePositionOnMount\"];\nvar TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\n\n/**\n * @internal\n */\nfunction usePopover(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$closeOnBlur = _props.closeOnBlur,\n      closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur,\n      _props$closeOnEsc = _props.closeOnEsc,\n      closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,\n      initialFocusRef = _props.initialFocusRef,\n      id = _props.id,\n      _props$returnFocusOnC = _props.returnFocusOnClose,\n      returnFocusOnClose = _props$returnFocusOnC === void 0 ? true : _props$returnFocusOnC,\n      _props$autoFocus = _props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n      arrowSize = _props.arrowSize,\n      arrowShadowColor = _props.arrowShadowColor,\n      _props$trigger = _props.trigger,\n      trigger = _props$trigger === void 0 ? TRIGGER.click : _props$trigger,\n      _props$openDelay = _props.openDelay,\n      openDelay = _props$openDelay === void 0 ? 200 : _props$openDelay,\n      _props$closeDelay = _props.closeDelay,\n      closeDelay = _props$closeDelay === void 0 ? 200 : _props$closeDelay,\n      isLazy = _props.isLazy,\n      _props$lazyBehavior = _props.lazyBehavior,\n      lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n      computePositionOnMount = _props.computePositionOnMount,\n      popperProps = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var _useDisclosure = useDisclosure(props),\n      isOpen = _useDisclosure.isOpen,\n      onClose = _useDisclosure.onClose,\n      onOpen = _useDisclosure.onOpen,\n      onToggle = _useDisclosure.onToggle;\n\n  var anchorRef = useRef(null);\n  var triggerRef = useRef(null);\n  var popoverRef = useRef(null);\n  var isHoveringRef = useRef(false);\n  var hasBeenOpened = useRef(false);\n\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n\n  var _useState = useState(false),\n      hasHeader = _useState[0],\n      setHasHeader = _useState[1];\n\n  var _useState2 = useState(false),\n      hasBody = _useState2[0],\n      setHasBody = _useState2[1];\n\n  var _useIds = useIds(id, \"popover-trigger\", \"popover-content\", \"popover-header\", \"popover-body\"),\n      triggerId = _useIds[0],\n      popoverId = _useIds[1],\n      headerId = _useIds[2],\n      bodyId = _useIds[3];\n\n  var _usePopper = usePopper(_extends({}, popperProps, {\n    enabled: isOpen || !!computePositionOnMount\n  })),\n      referenceRef = _usePopper.referenceRef,\n      getArrowProps = _usePopper.getArrowProps,\n      getPopperProps = _usePopper.getPopperProps,\n      getArrowInnerProps = _usePopper.getArrowInnerProps,\n      forceUpdate = _usePopper.forceUpdate;\n\n  var animated = useAnimationState({\n    isOpen: isOpen,\n    ref: popoverRef\n  });\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef\n  });\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click\n  });\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    isSelected: animated.present\n  });\n  var getPopoverProps = useCallback(function (props, _ref) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    var popoverProps = _extends({}, props, {\n      style: _extends({}, props.style, (_extends2 = {\n        transformOrigin: popperCSSVars.transformOrigin.varRef\n      }, _extends2[popperCSSVars.arrowSize[\"var\"]] = arrowSize ? px(arrowSize) : undefined, _extends2[popperCSSVars.arrowShadowColor[\"var\"]] = arrowShadowColor, _extends2)),\n      ref: mergeRefs(popoverRef, _ref),\n      children: shouldRenderChildren ? props.children : null,\n      id: popoverId,\n      tabIndex: -1,\n      role: \"dialog\",\n      onKeyDown: callAllHandlers(props.onKeyDown, function (event) {\n        if (closeOnEsc && event.key === \"Escape\") {\n          onClose();\n        }\n      }),\n      onBlur: callAllHandlers(props.onBlur, function (event) {\n        var relatedTarget = getRelatedTarget(event);\n        var targetIsPopover = contains(popoverRef.current, relatedTarget);\n        var targetIsTrigger = contains(triggerRef.current, relatedTarget);\n        var isValidBlur = !targetIsPopover && !targetIsTrigger;\n\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      }),\n      \"aria-labelledby\": hasHeader ? headerId : undefined,\n      \"aria-describedby\": hasBody ? bodyId : undefined\n    });\n\n    if (trigger === TRIGGER.hover) {\n      popoverProps.role = \"tooltip\";\n      popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, function () {\n        isHoveringRef.current = true;\n      });\n      popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, function () {\n        isHoveringRef.current = false;\n        setTimeout(onClose, closeDelay);\n      });\n    }\n\n    return popoverProps;\n  }, [shouldRenderChildren, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, closeOnEsc, onClose, isOpen, closeOnBlur, closeDelay, arrowShadowColor, arrowSize]);\n  var getPopoverPositionerProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return getPopperProps(_extends({}, props, {\n      style: _extends({\n        visibility: isOpen ? \"visible\" : \"hidden\"\n      }, props.style)\n    }), forwardedRef);\n  }, [isOpen, getPopperProps]);\n  var getAnchorProps = useCallback(function (props, _ref) {\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    var anchorProps = _extends({}, props, {\n      // If anchor is rendered, it is used as reference.\n      ref: mergeRefs(_ref, anchorRef, referenceRef)\n    });\n\n    return anchorProps;\n  }, [anchorRef, referenceRef]);\n  var openTimeout = useRef();\n  var closeTimeout = useRef();\n  var maybeReferenceRef = useCallback(function (node) {\n    // Don't override referenceRef in case the PopoverAnchor is rendered.\n    if (anchorRef.current == null) {\n      referenceRef(node);\n    }\n  }, [referenceRef]);\n  var getTriggerProps = useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    var triggerProps = _extends({}, props, {\n      ref: mergeRefs(triggerRef, _ref, maybeReferenceRef),\n      id: triggerId,\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": popoverId\n    });\n\n    if (trigger === TRIGGER.click) {\n      triggerProps.onClick = callAllHandlers(props.onClick, onToggle);\n    }\n\n    if (trigger === TRIGGER.hover) {\n      /**\n       * Any content that shows on pointer hover should also show on keyboard focus.\n       * Consider focus and blur to be the `hover` for keyboard users.\n       *\n       * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n       */\n      triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen);\n      triggerProps.onBlur = callAllHandlers(props.onBlur, function (event) {\n        var relatedTarget = getRelatedTarget(event);\n        var isValidBlur = !contains(popoverRef.current, relatedTarget);\n\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      });\n      /**\n       * Any content that shows on hover or focus must be dismissible.\n       * This case pressing `Escape` will dismiss the popover\n       */\n\n      triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, function (event) {\n        if (event.key === \"Escape\") {\n          onClose();\n        }\n      });\n      triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, function () {\n        isHoveringRef.current = true;\n        openTimeout.current = window.setTimeout(onOpen, openDelay);\n      });\n      triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, function () {\n        isHoveringRef.current = false;\n\n        if (openTimeout.current) {\n          clearTimeout(openTimeout.current);\n          openTimeout.current = undefined;\n        }\n\n        closeTimeout.current = window.setTimeout(function () {\n          if (isHoveringRef.current === false) {\n            onClose();\n          }\n        }, closeDelay);\n      });\n    }\n\n    return triggerProps;\n  }, [triggerId, isOpen, popoverId, trigger, maybeReferenceRef, onToggle, onOpen, closeOnBlur, onClose, openDelay, closeDelay]);\n  useEffect(function () {\n    return function () {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current);\n      }\n\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n    };\n  }, []);\n  var getHeaderProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      id: headerId,\n      ref: mergeRefs(ref, function (node) {\n        setHasHeader(!!node);\n      })\n    });\n  }, [headerId]);\n  var getBodyProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (ref === void 0) {\n      ref = null;\n    }\n\n    return _extends({}, props, {\n      id: bodyId,\n      ref: mergeRefs(ref, function (node) {\n        setHasBody(!!node);\n      })\n    });\n  }, [bodyId]);\n  return {\n    forceUpdate: forceUpdate,\n    isOpen: isOpen,\n    onAnimationComplete: animated.onComplete,\n    onClose: onClose,\n    getAnchorProps: getAnchorProps,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps,\n    getPopoverPositionerProps: getPopoverPositionerProps,\n    getPopoverProps: getPopoverProps,\n    getTriggerProps: getTriggerProps,\n    getHeaderProps: getHeaderProps,\n    getBodyProps: getBodyProps\n  };\n}\n\nvar _excluded = [\"children\"],\n    _excluded2 = [\"rootProps\"];\n\n/**\n * Popover is used to bring attention to specific user interface elements,\n * typically to suggest an action or to guide users through a new experience.\n */\nvar Popover = function Popover(props) {\n  var styles = useMultiStyleConfig(\"Popover\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var theme = useTheme();\n  var context = usePopover(_extends({}, rest, {\n    direction: theme.direction\n  }));\n  return /*#__PURE__*/React.createElement(PopoverProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, runIfFn(children, {\n    isOpen: context.isOpen,\n    onClose: context.onClose,\n    forceUpdate: context.forceUpdate\n  })));\n};\n\nif (__DEV__) {\n  Popover.displayName = \"Popover\";\n}\n/**\n * PopoverAnchor is element that is used as the positioning reference\n * for the popover.\n */\n\n\nvar PopoverAnchor = function PopoverAnchor(props) {\n  // enforce a single child\n  var child = React.Children.only(props.children);\n\n  var _usePopoverContext = usePopoverContext(),\n      getAnchorProps = _usePopoverContext.getAnchorProps;\n\n  return /*#__PURE__*/React.cloneElement(child, getAnchorProps(child.props, child.ref));\n};\n\nif (__DEV__) {\n  PopoverAnchor.displayName = \"PopoverAnchor\";\n}\n/**\n * PopoverTrigger opens the popover's content. It must be an interactive element\n * such as `button` or `a`.\n */\n\n\nvar PopoverTrigger = function PopoverTrigger(props) {\n  // enforce a single child\n  var child = React.Children.only(props.children);\n\n  var _usePopoverContext2 = usePopoverContext(),\n      getTriggerProps = _usePopoverContext2.getTriggerProps;\n\n  return /*#__PURE__*/React.cloneElement(child, getTriggerProps(child.props, child.ref));\n};\n\nif (__DEV__) {\n  PopoverTrigger.displayName = \"PopoverTrigger\";\n}\n\nvar PopoverContent = /*#__PURE__*/forwardRef(function (props, ref) {\n  var rootProps = props.rootProps,\n      contentProps = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var _usePopoverContext3 = usePopoverContext(),\n      getPopoverProps = _usePopoverContext3.getPopoverProps,\n      getPopoverPositionerProps = _usePopoverContext3.getPopoverPositionerProps,\n      onAnimationComplete = _usePopoverContext3.onAnimationComplete;\n\n  var styles = useStyles();\n\n  var contentStyles = _extends({\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, styles.content);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, getPopoverPositionerProps(rootProps), {\n    __css: styles.popper,\n    className: \"chakra-popover__popper\"\n  }), /*#__PURE__*/React.createElement(PopoverTransition, _extends({}, getPopoverProps(contentProps, ref), {\n    onAnimationComplete: callAll(onAnimationComplete, contentProps.onAnimationComplete),\n    className: cx(\"chakra-popover__content\", props.className),\n    __css: contentStyles\n  })));\n});\n\nif (__DEV__) {\n  PopoverContent.displayName = \"PopoverContent\";\n}\n\n/**\n * PopoverHeader is the accessible header or label\n * for the popover's content, and it is first announced by screenreaders.\n */\nvar PopoverHeader = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _usePopoverContext4 = usePopoverContext(),\n      getHeaderProps = _usePopoverContext4.getHeaderProps;\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.header, _extends({}, getHeaderProps(props, ref), {\n    className: cx(\"chakra-popover__header\", props.className),\n    __css: styles.header\n  }));\n});\n\nif (__DEV__) {\n  PopoverHeader.displayName = \"PopoverHeader\";\n}\n\n/**\n * PopoverBody is the main content area for the popover. Should contain\n * at least one interactive element.\n */\nvar PopoverBody = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _usePopoverContext5 = usePopoverContext(),\n      getBodyProps = _usePopoverContext5.getBodyProps;\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, getBodyProps(props, ref), {\n    className: cx(\"chakra-popover__body\", props.className),\n    __css: styles.body\n  }));\n});\n\nif (__DEV__) {\n  PopoverBody.displayName = \"PopoverBody\";\n}\n\nvar PopoverFooter = function PopoverFooter(props) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.footer, _extends({}, props, {\n    className: cx(\"chakra-popover__footer\", props.className),\n    __css: styles.footer\n  }));\n};\n\nif (__DEV__) {\n  PopoverFooter.displayName = \"PopoverFooter\";\n}\n\nvar PopoverCloseButton = function PopoverCloseButton(props) {\n  var _usePopoverContext6 = usePopoverContext(),\n      onClose = _usePopoverContext6.onClose;\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(CloseButton, _extends({\n    size: \"sm\",\n    onClick: onClose,\n    className: cx(\"chakra-popover__close-btn\", props.className),\n    __css: styles.closeButton\n  }, props));\n};\n\nif (__DEV__) {\n  PopoverCloseButton.displayName = \"PopoverCloseButton\";\n}\n\nvar PopoverArrow = function PopoverArrow(props) {\n  var _ref;\n\n  var bg = props.bg,\n      bgColor = props.bgColor,\n      backgroundColor = props.backgroundColor;\n\n  var _usePopoverContext7 = usePopoverContext(),\n      getArrowProps = _usePopoverContext7.getArrowProps,\n      getArrowInnerProps = _usePopoverContext7.getArrowInnerProps;\n\n  var styles = useStyles();\n  var arrowBg = (_ref = bg != null ? bg : bgColor) != null ? _ref : backgroundColor;\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, getArrowProps(), {\n    className: \"chakra-popover__arrow-positioner\"\n  }), /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: cx(\"chakra-popover__arrow\", props.className)\n  }, getArrowInnerProps(props), {\n    __css: _extends({}, styles.arrow, {\n      \"--popper-arrow-bg\": arrowBg ? \"colors.\" + arrowBg + \", \" + arrowBg : undefined\n    })\n  })));\n};\n\nif (__DEV__) {\n  PopoverArrow.displayName = \"PopoverArrow\";\n}\n\nexport { Popover, PopoverAnchor, PopoverArrow, PopoverBody, PopoverCloseButton, PopoverContent, PopoverFooter, PopoverHeader, PopoverTrigger, usePopover, usePopoverContext };\n","import { FC, useState } from \"react\";\nimport {\n  Collapse,\n  useDisclosure,\n  useColorModeValue,\n  Text,\n  Container,\n  Stack,\n  Box,\n  Grid,\n  GridItem,\n  Button,\n  Flex,\n  Circle,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverCloseButton,\n  Portal,\n  UnorderedList,\n  ListItem\n} from \"@chakra-ui/react\";\nimport { Content, useContent, MarkdownFile } from \"shared/content/Content\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { bgDarker, bgLighter } from \"theme\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const Sidebar: FC = () => {\n  const content = useContent(MarkdownFile.Landing);\n  const bg = useColorModeValue(bgLighter, bgDarker);\n  const textColor = useColorModeValue(\"gray.600\", \"gray.300\");\n  \n\n  const total = 18;\n  const data = [\n    { label: \"A+\", value: 6, color: useColorModeValue(\"#3182CE\", \"#63B3ED\") },\n    { label: \"A\", value: 7, color: useColorModeValue(\"#84B3DD\", \"#4A90E2\")},\n    { label: \"B+\", value: 5, color: useColorModeValue(\"#EBF8FF\", \"#2A4365\") },\n  ];\n  const total_2 = 11;\n  const data_2 = [\n    { label: \"A+\", value: 5, color: useColorModeValue(\"#3182CE\", \"#63B3ED\")},\n    { label: \"A\", value: 5, color: useColorModeValue(\"#84B3DD\", \"#4A90E2\")},\n    { label: \"B+\", value: 1, color: useColorModeValue(\"#EBF8FF\", \"#2A4365\") },\n  ];\n\n  const radius = 30;\n  const circumference = 2 * Math.PI * radius;\n  const [tooltip1, setTooltip1] = useState<{ label: string; percent: string } | null>(null);\n  const [tooltip2, setTooltip2] = useState<{ label: string; percent: string } | null>(null);\n\n  const { isOpen: isOpenBA, onToggle: onToggleBA } = useDisclosure();\n  const courses = [\n    \"C Programming (A+)\",\n    \"Java Programming (A+)\",\n    \"Introduction to Engineering Design (A+)\",\n    \"Programming Languages (A+)\",\n    \"Capstone Design (A+)\",\n    \"Operating Systems (A+)\",\n    \"Computer Networks (A)\",\n    \"Logic Design (A)\",\n    \"Data Structures (A)\",\n    \"Circuit Theory (A)\",\n    \"Web Service Development (A)\",\n    \"Computer Vision (A)\",\n    \"EAP Information Technology (A)\",\n    \"Computer Architecture (B+)\",\n    \"Database Systems (B+)\",\n    \"Embedded Systems Programming (B+)\",\n    \"C++ Programming (B+)\",\n    \"Algorithm Analysis (B+)\",\n  ];\n\n  const courses_2 = [\n    \"Digital Heritage Project (A+)\",\n    \"Multimodal Interaction Design (A+)\",\n    \"Intelligent Agents (A+)\",\n    \"Visual Communication (A+)\",\n    \"Idea and Digital Expression (A+)\",\n    \"Interactive Content Design (A)\",\n    \"User Experience Design (A)\",\n    \"HCI+AI: Research Trends and Technical Analysis (A)\",\n    \"Advanced Deep Learning (A)\",\n    \"Sound Design and Programming (A)\",\n    \"Human–Computer Interaction Research Methods (B+)\"\n  ];\n  const groupedCourses: Record<string, string[]> = {\n    \"A+\": [],\n    A: [],\n    \"B+\": [],\n  };\n  \n  const groupedCourses_2: Record<string, string[]> = {\n    \"A+\": [],\n    A: [],\n    \"B+\": [],\n  };\n  \n  courses.forEach((course) => {\n    const match = course.match(/\\((A\\+|A|B\\+)\\)$/);\n    if (match) {\n      const grade = match[1];\n      groupedCourses[grade].push(course.replace(/\\s*\\(.*\\)$/, \"\"));\n    }\n  });\n  courses_2.forEach((course) => {\n    const match = course.match(/\\((A\\+|A|B\\+)\\)$/);\n    if (match) {\n      const grade = match[1];\n      groupedCourses_2[grade].push(course.replace(/\\s*\\(.*\\)$/, \"\"));\n    }\n  });\n\n  return (\n    <Container maxW=\"250px\" display={{ base: \"none\", lg: \"block\" }} mr=\"30px\" pl=\"3\" pr=\"3\" pt=\"3\" mt=\"50\" bg=\"bg\" borderRadius=\"md\" border=\"1px solid\" borderColor=\"gray.100\">\n      <Stack spacing=\"3\">\n        <Box>\n          <Content mt=\"2\" mb=\"2\" fontSize=\"16\" fontWeight=\"600\">Links</Content>\n          <Socials resume={false} />\n        </Box>\n        <hr />\n      </Stack>\n      <Box pt=\"3\" mb=\"6\">\n            <Content mb=\"2\" fontSize=\"16\" fontWeight=\"600\"> Education </Content>\n            <Stack  position=\"relative\" pl={5} borderLeft=\"2px solid #CBD5E0\">\n            <Box position=\"relative\">\n            <Box\n                w=\"0\"\n                h=\"0\"\n                borderTop=\"4px solid transparent\"\n                borderBottom=\"4px solid transparent\"\n                borderLeft=\"7.5px solid #3182CE\"\n                position=\"absolute\"\n                left=\"-8px\"\n                top=\"5px\"\n                />\n                <Box pl={1}>\n                <Text fontSize=\"14\" fontWeight=\"700\" color={textColor}>2022-present</Text>\n                    <Text fontSize=\"14\">\n                    <Box as=\"span\" fontWeight=\"700\">Ph.D.</Box> in AI Convergence at GIST\n                    </Text>\n                    \n                {/* <Text fontSize=\"13\"> GIST, Republic of Korea </Text> */}\n                <Text fontSize=\"14\" fontWeight=\"700\"> GPA : 4.25 / 4.5, 57 credits </Text>\n              \n                </Box>\n            </Box>\n            <Box position=\"relative\">\n            <Box\n                w=\"0\"\n                h=\"0\"\n                borderTop=\"4px solid transparent\"\n                borderBottom=\"4px solid transparent\"\n                borderLeft=\"7.5px solid #3182CE\"\n                position=\"absolute\"\n                left=\"-8px\"\n                top=\"5px\"\n                />\n                <Box pl={1}>\n                <Text fontSize=\"14\" fontWeight=\"700\" color={textColor}>2019-2021</Text>\n                <Text fontSize=\"14\"> <Box as=\"span\" fontWeight=\"700\">M.S.</Box> in Integrated Technology at GIST</Text>\n               \n                {/* <Text fontSize=\"13\"> GIST, Republic of Korea </Text> */}\n                <Text fontSize=\"14\" fontWeight=\"700\"> GPA : 4.11 / 4.5, 51 credits </Text>\n              \n                </Box>\n                \n            </Box>\n            <Box position=\"relative\">\n            <Box\n                w=\"0\"\n                h=\"0\"\n                borderTop=\"4px solid transparent\"\n                borderBottom=\"4px solid transparent\"\n                borderLeft=\"7.5px solid #3182CE\"\n                position=\"absolute\"\n                left=\"-8px\"\n                top=\"5px\"\n                />\n                <Box pl={1}>\n                <Text fontSize=\"14\" fontWeight=\"700\" color={textColor}>2015-2019</Text>\n                <Text fontSize=\"14\"> <Box as=\"span\" fontWeight=\"700\">B.A.</Box> in Computer Science at Handong Global University</Text>\n                \n                {/* <Text fontSize=\"13\"> Handong Global University, Republic of Korea </Text> */}\n                <Text fontSize=\"14\" fontWeight=\"700\"> GPA : 4.04 / 4.5, 144 credits </Text>\n              \n                </Box>\n\n               \n            </Box>\n            </Stack>\n\n        </Box>\n        <hr />\n      <Box pt=\"3\" mb=\"6\">\n        <Content mb=\"2\" fontSize=\"16\" fontWeight=\"600\">Academic Coursework</Content>\n        <Flex pl=\"45px\" direction=\"row\" wrap=\"wrap\" gap={3} fontSize=\"sm\">\n          {data.map((item) => (\n            <Flex key={item.label} align=\"center\" gap={2}>\n              <Box w=\"10px\" h=\"10px\" borderRadius=\"full\" bg={item.color} />\n              <Text>{item.label}</Text>\n            </Flex>\n          ))}\n        </Flex>\n\n        <Grid templateColumns=\"repeat(10, 1fr)\">\n          <GridItem colSpan={5} w=\"100%\">\n            <Box position=\"relative\" w=\"90px\" h=\"90px\">\n              <svg width=\"90\" height=\"90\">\n                <circle cx=\"45\" cy=\"45\" r={radius} fill=\"none\" stroke=\"#EDF2F7\" strokeWidth=\"12\" />\n                {(() => {\n                  let offset = 0;\n                  return data.map((item) => {\n                    const valueRatio = item.value / total;\n                    const strokeLength = valueRatio * circumference;\n                    const strokeDasharray = `${strokeLength} ${circumference - strokeLength}`;\n                    const rotation = (offset / total) * 360;\n                    offset += item.value;\n                    return (\n                      <circle\n                        key={item.label}\n                        cx=\"45\"\n                        cy=\"45\"\n                        r={radius}\n                        fill=\"none\"\n                        stroke={item.color}\n                        strokeWidth=\"12\"\n                        strokeDasharray={strokeDasharray}\n                        strokeDashoffset=\"0\"\n                        transform={`rotate(${rotation - 90} 45 45)`}\n                        onMouseEnter={() => setTooltip1({ label: item.label, percent: ((item.value / total) * 100).toFixed(1) + \"%\" })}\n                        onMouseLeave={() => setTooltip1(null)}\n                        style={{ cursor: \"pointer\" }}\n                      />\n                    );\n                  });\n                })()}\n                {/* <text x=\"45\" y=\"47\" textAnchor=\"middle\" fill=\"#2D3748\" fontSize=\"12\" fontWeight=\"bold\">\n                  <tspan x=\"45\" dy=\"-0.4em\">Computer</tspan>\n                  <tspan x=\"45\" dy=\"0.8em\">Science</tspan>\n                </text> */}\n              </svg>\n              <Box position=\"absolute\" top=\"50%\" left=\"50%\" transform=\"translate(-50%, -50%)\" textAlign=\"center\">\n             <Text fontSize=\"14\" fontWeight=\"bold\" lineHeight=\"1.1\">\n     \n      Computer<br />\n      Science\n    </Text>\n  </Box>\n\n\n              {tooltip1 && (\n                <Box position=\"absolute\" top=\"0\" left=\"10%\" transform=\"translateX(10px)\" bg=\"gray.700\" color=\"white\" fontSize=\"xs\" px={2} py={1} borderRadius=\"md\" whiteSpace=\"nowrap\" pointerEvents=\"none\">\n                  {tooltip1.label} {tooltip1.percent}\n                </Box>\n              )}\n            </Box>\n            <Popover closeOnBlur={false} placement=\"left-start\">\n  {({ isOpen, onClose }) => (\n    <>\n      <PopoverTrigger>\n        <Button size=\"sm\" variant=\"link\" color={textColor}>\n        <Text fontSize=\"13\">View CS Courses</Text>\n        </Button>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent fontSize=\"sm\">\n          <PopoverHeader fontWeight=\"semibold\">Computer Science Coursework</PopoverHeader>\n          <PopoverCloseButton />\n          <PopoverBody>\n          <Box>\n            {[\"A+\", \"A\", \"B+\"].map((grade) => (\n                <Box key={grade} mb={4}>\n                <Text fontWeight=\"bold\" fontSize=\"sm\" color=\"gray.600\" mb={1}>\n                    {grade} Grade\n                </Text>\n                <UnorderedList spacing={1} pl={4}>\n                    {groupedCourses[grade].map((course) => (\n                    <ListItem key={course}>{course}</ListItem>\n                    ))}\n                </UnorderedList>\n                </Box>\n            ))}\n            </Box>\n          </PopoverBody>\n          {/* <PopoverFooter>This is the footer</PopoverFooter> */}\n        </PopoverContent>\n      </Portal>\n    </>\n  )}\n</Popover>\n            \n          </GridItem>\n\n          <GridItem colSpan={5} w=\"100%\">\n            <Box position=\"relative\" w=\"90px\" h=\"90px\">\n              <svg width=\"90\" height=\"90\">\n                <circle cx=\"45\" cy=\"45\" r={radius} fill=\"none\" stroke=\"#EDF2F7\" strokeWidth=\"12\" />\n                {(() => {\n                  let offset = 0;\n                  return data_2.map((item) => {\n                    const valueRatio = item.value / total_2;\n                    const strokeLength = valueRatio * circumference;\n                    const strokeDasharray = `${strokeLength} ${circumference - strokeLength}`;\n                    const rotation = (offset / total_2) * 360;\n                    offset += item.value;\n                    return (\n                      <circle\n                        key={item.label}\n                        cx=\"45\"\n                        cy=\"45\"\n                        r={radius}\n                        fill=\"none\"\n                        stroke={item.color}\n                        strokeWidth=\"12\"\n                        strokeDasharray={strokeDasharray}\n                        strokeDashoffset=\"0\"\n                        transform={`rotate(${rotation - 90} 45 45)`}\n                        onMouseEnter={() => setTooltip2({ label: item.label, percent: ((item.value / total_2) * 100).toFixed(1) + \"%\" })}\n                        onMouseLeave={() => setTooltip2(null)}\n                        style={{ cursor: \"pointer\" }}\n                      />\n                    );\n                  });\n                })()}\n                \n              </svg>\n              <Box position=\"absolute\" top=\"50%\" left=\"50%\" transform=\"translate(-50%, -50%)\" textAlign=\"center\">\n             <Text fontSize=\"14\" fontWeight=\"bold\"  lineHeight=\"1.1\">\n     \n      Human<br />\n      Computer<br/>\n      Interaction\n    </Text>\n  </Box>\n              \n              {tooltip2 && (\n                <Box position=\"absolute\" top=\"0\" left=\"10%\" transform=\"translateX(10px)\" bg=\"gray.700\" color=\"white\" fontSize=\"xs\" px={2} py={1} borderRadius=\"md\" whiteSpace=\"nowrap\" pointerEvents=\"none\">\n                  {tooltip2.label} {tooltip2.percent}\n                </Box>\n              )}\n            </Box>\n            <Popover closeOnBlur={false} placement=\"left-start\">\n  {({ isOpen, onClose }) => (\n    <>\n      <PopoverTrigger>\n      <Button size=\"sm\" variant=\"link\" color={textColor}>\n        <Text fontSize=\"13\">View HCI Courses</Text>\n        </Button>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent fontSize=\"sm\">\n          <PopoverHeader fontWeight=\"semibold\">Human-Computer Interaction Coursework</PopoverHeader>\n          <PopoverCloseButton />\n          <PopoverBody>\n          <Box>\n            {[\"A+\", \"A\", \"B+\"].map((grade) => (\n                <Box key={grade} mb={4}>\n                <Text fontWeight=\"bold\" fontSize=\"sm\" color=\"gray.600\" mb={1}>\n                    {grade} Grade\n                </Text>\n                <UnorderedList spacing={1} pl={4}>\n                    {groupedCourses_2[grade].map((course) => (\n                    <ListItem key={course}>{course}</ListItem>\n                    ))}\n                </UnorderedList>\n                </Box>\n            ))}\n            </Box>\n          </PopoverBody>\n          {/* <PopoverFooter>This is the footer</PopoverFooter> */}\n        </PopoverContent>\n      </Portal>\n    </>\n  )}\n</Popover>\n          </GridItem>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n","import { FC } from \"react\";\nimport { Button, HStack, IconButton, Tooltip, VStack, Text, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, LinkedInIcon, MailIcon, YoutubeIcon, ScholarIcon, CVIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedin: <LinkedInIcon />,\n    github: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    mail: <MailIcon />,\n    google_scholar: <ScholarIcon />,\n    curriculum_vitae:<CVIcon/>\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800 }) => {\n    const textColor = useColorModeValue(\"black.600\", \"black.300\"); \n    return (\n        <VStack  align=\"start\">\n            {resume && (\n                <Button data-aos=\"fade\" data-aos-delay={delay} size=\"lg\" borderRadius=\"xl\" onClick={onResumeOpen}>\n                    Resume\n                </Button>\n            )}\n\n            {configs.common.socials.map(\n                (social) =>\n                    !exclude?.includes(social.type) && (\n                        // <Tooltip key={social.type} label={social.type} textTransform=\"capitalize\">\n                            <HStack\n                                // spacing={3}\n                                as=\"button\"\n                                onClick={() => open(social.link)}\n                                aria-label={`${social.type}-button`}\n                            >\n                                <IconButton\n                                    boxSize=\"15px\" \n                \n                                    p=\"0\"\n                                    variant=\"icon\"\n                                    aria-label={`${social.type}-icon`}\n                                    icon={LinksToIconMapper[social.type]}\n                                    fontSize={social.type === \"mail\" ? \"18pt\" : \"16pt\"}\n                                />\n                                <Text fontSize=\"14\" fontWeight=\"700\" color={textColor} textTransform=\"capitalize\">\n                                    {social.type === \"curriculum_vitae\"? \"Curriculum Vitae (PDF)\"    : social.type.replace(\"_\", \" \")}\n    </Text>\n                            </HStack>\n                        // </Tooltip>\n                    )\n            )}\n        </VStack>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onScholarOpen = (link : string) => {\n    window.open(link, \"_blank\");\n};\n\n\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_createContext","createContext","name","errorMessage","PopoverProvider","usePopoverContext","mergeVariants","variants","mergeWith","enter","visibility","exit","transitionEnd","Section","motion","chakra","PopoverTransition","React__default","props","ref","isOpen","initial","animate","defaultProps","opacity","scale","transition","duration","ease","_excluded$1","TRIGGER","_excluded","_excluded2","Popover","styles","useMultiStyleConfig","_omitThemingProps","omitThemingProps","children","context","_props","_props$closeOnBlur","closeOnBlur","_props$closeOnEsc","closeOnEsc","initialFocusRef","id","_props$returnFocusOnC","returnFocusOnClose","_props$autoFocus","autoFocus","arrowSize","arrowShadowColor","_props$trigger","trigger","_props$openDelay","openDelay","_props$closeDelay","closeDelay","isLazy","_props$lazyBehavior","lazyBehavior","computePositionOnMount","popperProps","_useDisclosure","useDisclosure","onClose","onOpen","onToggle","anchorRef","useRef","triggerRef","popoverRef","isHoveringRef","hasBeenOpened","current","_useState","useState","hasHeader","setHasHeader","_useState2","hasBody","setHasBody","_useIds","useIds","triggerId","popoverId","headerId","bodyId","_usePopper","usePopper","enabled","referenceRef","getArrowProps","getPopperProps","getArrowInnerProps","forceUpdate","animated","useAnimationState","useFocusOnPointerDown","useFocusOnHide","focusRef","visible","shouldFocus","useFocusOnShow","shouldRenderChildren","determineLazyBehavior","hasBeenSelected","isSelected","present","getPopoverProps","useCallback","_ref","_extends2","popoverProps","style","transformOrigin","popperCSSVars","px","undefined","mergeRefs","tabIndex","role","onKeyDown","callAllHandlers","event","onBlur","relatedTarget","getRelatedTarget","targetIsPopover","contains","targetIsTrigger","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","forwardedRef","getAnchorProps","openTimeout","closeTimeout","maybeReferenceRef","node","getTriggerProps","triggerProps","onClick","onFocus","isValidBlur","window","clearTimeout","useEffect","getHeaderProps","getBodyProps","onAnimationComplete","onComplete","usePopover","direction","useTheme","React","value","StylesProvider","runIfFn","__DEV__","displayName","PopoverTrigger","child","PopoverContent","forwardRef","rootProps","contentProps","_usePopoverContext3","useStyles","contentStyles","position","display","flexDirection","content","__css","popper","className","callAll","cx","PopoverHeader","header","PopoverBody","body","PopoverCloseButton","CloseButton","size","closeButton","open","link","Sidebar","useContent","MarkdownFile","useColorModeValue","bgLighter","bgDarker","textColor","data","label","color","data_2","circumference","Math","PI","tooltip1","setTooltip1","tooltip2","setTooltip2","groupedCourses","A","groupedCourses_2","forEach","course","match","grade","push","replace","maxW","base","lg","mr","pl","pr","pt","mt","bg","borderRadius","border","borderColor","spacing","Content","mb","fontSize","fontWeight","Socials","resume","borderLeft","w","h","borderTop","borderBottom","left","top","as","wrap","gap","map","item","align","templateColumns","colSpan","width","height","cy","r","fill","stroke","strokeWidth","offset","strokeLength","strokeDasharray","rotation","strokeDashoffset","transform","percent","toFixed","cursor","textAlign","lineHeight","py","whiteSpace","pointerEvents","placement","variant","LinksToIconMapper","linkedin","github","facebook","instagram","youtube","mail","google_scholar","curriculum_vitae","exclude","delay","onResumeOpen","configs","social","includes","type","boxSize","p","icon","textTransform"],"sourceRoot":""}